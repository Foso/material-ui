{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{\"+D+d\":function(n,e,t){\"use strict\";e.a=function(n,e){if(!n)throw new Error(\"Invariant failed\")}},\"/BS6\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return u}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"oNR1\"),s=t(\"USb2\"),c=t(\"O8uh\"),p=i.a.createElement,m=i.a.forwardRef((function(n,e){return p(s.a,Object(o.a)({ref:e,to:\"/getting-started/installation/\"},n))})),d=p(a.a,null,p(\"div\",null,p(c.a,{color:\"primary\",component:s.a,to:\"/\"},\"With prop forwarding\"),p(\"br\",null),p(c.a,{color:\"primary\",component:m},\"Without prop forwarding\")));function u(){return d}},\"/wNM\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return m}));var o=t(\"mXGw\"),r=t.n(o),i=t(\"l/nz\"),a=t(\"Pw6v\"),s=r.a.createElement,c=function(n){return s(a.a,n)};c.muiName=\"Icon\";var p=s(\"div\",null,s(i.a,null,s(a.a,null,\"alarm\")),s(i.a,null,s(c,null,\"alarm\")));function m(){return p}},\"16JY\":function(n,e){n.exports='# Composi\\xe7\\xe3o\\n\\n<p class=\"description\">Material-UI tenta tornar a composi\\xe7\\xe3o o mais f\\xe1cil poss\\xedvel.</p>\\n\\n## Encapsulando componentes\\n\\nPara fornecer o m\\xe1ximo de flexibilidade e desempenho, precisamos de uma maneira de conhecer a natureza dos elementos filhos que um componente recebe. Para resolver esse problema, identificamos alguns dos componentes com uma propriedade est\\xe1tica `muiName` quando necess\\xe1rio.\\n\\nVoc\\xea pode, no entanto, precisar encapsular um componente para melhor\\xe1-lo, que pode entrar em conflito com a solu\\xe7\\xe3o `muiName`. Se voc\\xea encapsular um componente, verifique se este tem um conjunto de propriedades est\\xe1ticas.\\n\\nSe voc\\xea encontrar esse problema, precisar\\xe1 usar a mesma propriedade `muiName` do componente que ser\\xe1 encapsulado no seu componente encapsulado. Al\\xe9m disso, voc\\xea deve encaminhar as propriedades, j\\xe1 que o componente pai pode precisar controlar as propriedades do componente encapsulado.\\n\\nVamos ver um exemplo:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Propriedade Componente\\n\\nMaterial-UI permite que voc\\xea altere o elemento raiz que ser\\xe1 renderizado por meio de uma propriedade chamada `component`.\\n\\n### Como \\xe9 que funciona?\\n\\nO componente ser\\xe1 renderizado assim:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nPor exemplo, por padr\\xe3o um componente `List` ir\\xe1 renderizar um elemento `<ul>`. Isso pode ser alterado passando um [componente React](https://reactjs.org/docs/components-and-props.html#function-and-class-components) para a propriedade `component`. O exemplo a seguir ir\\xe1 renderizar o componente `List` como um elemento `<nav>` como raiz:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nEsse padr\\xe3o \\xe9 muito poderoso e permite uma grande flexibilidade, al\\xe9m de uma maneira de interoperar com outras bibliotecas, como a sua biblioteca de formul\\xe1rios ou roteamento favorita. Mas tamb\\xe9m **vem com uma pequena advert\\xeancia!**\\n\\n### Advert\\xeancia com o uso de fun\\xe7\\xf5es em linha\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. Por exemplo, se voc\\xea quiser cria um `ListItem` customizado que atua como link, voc\\xea poderia fazer o seguinte:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f No entanto, como estamos usando uma fun\\xe7\\xe3o em linha para alterar o componente renderizado, o React desmontar\\xe1 o link toda vez que o `ListItemLink` \\xe9 renderizado. N\\xe3o s\\xf3 ir\\xe1 o React atualizar o DOM desnecessariamente, como o efeito cascata do `ListItem` tamb\\xe9m n\\xe3o funcionar\\xe1 corretamente.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` agora sempre referenciar\\xe1 o mesmo componente.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. Neste exemplo, n\\xe3o criamos nenhum componente intermedi\\xe1rio:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### Usando TypeScript\\n\\nVoc\\xea pode encontrar os detalhes no [guia TypeScript](/guides/typescript/#usage-of-component-prop).\\n\\n## Bibliotecas de roteamento\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### Lista\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Advert\\xeancia com refs\\n\\nEsta se\\xe7\\xe3o aborda advert\\xeancias ao usar um componente customizado como `children` ou para a propriedade `component`.\\n\\nAlguns dos componentes precisam acessar o n\\xf3 DOM. Anteriormente, isso era poss\\xedvel usando `ReactDOM.findDOMNode`. Esta fun\\xe7\\xe3o est\\xe1 obsoleta em favor da utiliza\\xe7\\xe3o de `ref` e encaminhamento de ref. No entanto, apenas os seguintes tipos de componentes podem receber um `ref`:\\n\\n- Qualquer componente do Material-UI\\n- componentes de classe, ou seja, `React.Component` ou `React.PureComponent`\\n- Componentes DOM (ou hospedeiro), por exemplo, `div` ou `button`\\n- [Componentes React.forwardRef](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [Componentes React.lazy](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [Componentes React.memo](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nSe voc\\xea n\\xe3o usar um dos tipos acima ao usar seus componentes em conjunto com o Material-UI, poder\\xe1 ver um aviso do React no seu console semelhante a:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nEsteja ciente que voc\\xea ainda receber\\xe1 este aviso para componentes `lazy` ou `memo` se eles forem encapsulados por um componente que n\\xe3o cont\\xe9m ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. Para mais informa\\xe7\\xf5es, consulte [esta se\\xe7\\xe3o na documenta\\xe7\\xe3o oficial do React](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Ol\\xe1 mundo!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Ol\\xe1 mundo!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nPara descobrir se o componente de Material-UI que voc\\xea est\\xe1 usando tem esse requisito, verifique na documenta\\xe7\\xe3o de propriedades da API do componente. Se voc\\xea precisar encaminhar refs, a descri\\xe7\\xe3o ser\\xe1 vinculada a esta se\\xe7\\xe3o.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},\"2GDQ\":function(n,e){n.exports=\"/* eslint-disable jsx-a11y/anchor-is-valid */\\nimport React from 'react';\\nimport { MemoryRouter as Router } from 'react-router';\\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\\nimport Link from '@material-ui/core/Link';\\nimport { Omit } from '@material-ui/types';\\n\\nconst LinkBehavior = React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((props, ref) => (\\n  <RouterLink ref={ref} to=\\\"/getting-started/installation/\\\" {...props} />\\n));\\n\\nexport default function LinkRouter() {\\n  return (\\n    <Router>\\n      <div>\\n        <Link component={RouterLink} to=\\\"/\\\">\\n          With prop forwarding\\n        </Link>\\n        <br />\\n        <Link component={LinkBehavior}>Without prop forwarding</Link>\\n      </div>\\n    </Router>\\n  );\\n}\\n\"},\"4FVg\":function(n,e,t){var o={\"./ButtonRouter.js\":\"6XOy\",\"./ButtonRouter.tsx\":\"/BS6\",\"./Composition.js\":\"9Dhp\",\"./Composition.tsx\":\"/wNM\",\"./LinkRouter.js\":\"sh0S\",\"./LinkRouter.tsx\":\"qYZ3\",\"./ListRouter.js\":\"4fGY\",\"./ListRouter.tsx\":\"F12Z\",\"./composition-aa.md\":\"ZltE\",\"./composition-de.md\":\"McRo\",\"./composition-es.md\":\"y4on\",\"./composition-fr.md\":\"6PjW\",\"./composition-ja.md\":\"rQuc\",\"./composition-pt.md\":\"16JY\",\"./composition-ru.md\":\"CtFK\",\"./composition-zh.md\":\"cEJ7\",\"./composition.md\":\"FhJB\"};function r(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return o[n]}r.keys=function(){return Object.keys(o)},r.resolve=i,n.exports=r,r.id=\"4FVg\"},\"4fGY\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return R}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"yZEQ\"),s=t(\"AgvC\"),c=t(\"WSie\"),p=t(\"VPks\"),m=t(\"vR+x\"),d=t(\"3uJ1\"),u=t(\"FAXT\"),l=t(\"czfG\"),f=t(\"MIXp\"),h=t(\"Oy88\"),w=t(\"oNR1\"),y=t(\"USb2\"),g=i.a.createElement;function v(n){var e=n.icon,t=n.primary,r=n.to,a=i.a.useMemo((function(){return i.a.forwardRef((function(n,e){return g(y.a,Object(o.a)({to:r,ref:e},n))}))}),[r]);return g(\"li\",null,g(c.a,{button:!0,component:a},e?g(m.a,null,e):null,g(d.a,{primary:t})))}var L=Object(a.a)({root:{width:360}}),I=g(p.a,{elevation:0},g(s.a,{\"aria-label\":\"main mailbox folders\"},g(v,{to:\"/inbox\",primary:\"Inbox\",icon:g(l.a,null)}),g(v,{to:\"/drafts\",primary:\"Drafts\",icon:g(f.a,null)})),g(u.a,null),g(s.a,{\"aria-label\":\"secondary mailbox folders\"},g(v,{to:\"/trash\",primary:\"Trash\"}),g(v,{to:\"/spam\",primary:\"Spam\"})));function R(){var n=L();return g(w.a,{initialEntries:[\"/drafts\"],initialIndex:0},g(\"div\",{className:n.root},g(w.b,null,(function(n){var e=n.location;return g(h.a,{gutterBottom:!0},\"Current route: \",e.pathname)})),I))}},\"5R4H\":function(n,e,t){\"use strict\";(function(e){var t=\"__global_unique_id__\";n.exports=function(){return e[t]=(e[t]||0)+1}}).call(this,t(\"dm4u\"))},\"6PjW\":function(n,e){n.exports='# Composition\\n\\n<p class=\"description\">Material-UI tries to make composition as easy as possible.</p>\\n\\n## Wrapping components\\n\\nIn order to provide the maximum flexibility and performance, we need a way to know the nature of the child elements a component receives. To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\nYou may, however, need to wrap a component in order to enhance it, which can conflict with the `muiName` solution. If you wrap a component, verify if that component has this static property set.\\n\\nIf you encounter this issue, you need to use the same tag for your wrapping component that is used with the wrapped component. In addition, you should forward the properties, as the parent component may need to control the wrapped components props.\\n\\nLet\\'s see an example:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### Comment cela fonctionne-t-il ?\\n\\nThe component will render like this:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nFor example, by default a `List` component will render a `<ul>` element. This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. But it also **comes with a small caveat!**\\n\\n### Caveat with inlining\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. For instance, if you want to create a custom `ListItem` that acts as a link, you could do the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f However, since we are using an inline function to change the rendered component, React will unmount the link every time `ListItemLink` is rendered. Not only will React update the DOM unnecessarily, the ripple effect of the `ListItem` will also not work correctly.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` will now always reference the same component.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. In this example, we don\\'t create any intermediary component:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### Avec TypeScript\\n\\nYou can find the details in the [TypeScript guide](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List (Liste)\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Caveat with refs\\n\\nThis section covers caveats when using a custom component as `children` or for the `component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible by using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and ref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from React in your console similar to:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their wrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nTo find out if the Material-UI component you\\'re using has this requirement, check out the the props API documentation for that component. If you need to forward refs the description will link to this section.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},\"6XOy\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return u}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"oNR1\"),s=t(\"USb2\"),c=t(\"O8uh\"),p=i.a.createElement,m=i.a.forwardRef((function(n,e){return p(s.a,Object(o.a)({ref:e,to:\"/getting-started/installation/\"},n))})),d=p(a.a,null,p(\"div\",null,p(c.a,{color:\"primary\",component:s.a,to:\"/\"},\"With prop forwarding\"),p(\"br\",null),p(c.a,{color:\"primary\",component:m},\"Without prop forwarding\")));function u(){return d}},\"9Dhp\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return m}));var o=t(\"mXGw\"),r=t.n(o),i=t(\"l/nz\"),a=t(\"Pw6v\"),s=r.a.createElement,c=function(n){return s(a.a,n)};c.muiName=\"Icon\";var p=s(\"div\",null,s(i.a,null,s(a.a,null,\"alarm\")),s(i.a,null,s(c,null,\"alarm\")));function m(){return p}},CP66:function(n,e){n.exports=\"import React from 'react';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Icon from '@material-ui/core/Icon';\\n\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = 'Icon';\\n\\nexport default function Composition() {\\n  return (\\n    <div>\\n      <IconButton>\\n        <Icon>alarm</Icon>\\n      </IconButton>\\n      <IconButton>\\n        <WrappedIcon>alarm</WrappedIcon>\\n      </IconButton>\\n    </div>\\n  );\\n}\\n\"},CtFK:function(n,e){n.exports='# Composition\\n\\n<p class=\"description\">Material-UI tries to make composition as easy as possible.</p>\\n\\n## Wrapping components\\n\\nIn order to provide the maximum flexibility and performance, we need a way to know the nature of the child elements a component receives. To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\nYou may, however, need to wrap a component in order to enhance it, which can conflict with the `muiName` solution. If you wrap a component, verify if that component has this static property set.\\n\\nIf you encounter this issue, you need to use the same tag for your wrapping component that is used with the wrapped component. In addition, you should forward the properties, as the parent component may need to control the wrapped components props.\\n\\n\\u0414\\u0430\\u0432\\u0430\\u0439\\u0442\\u0435 \\u0440\\u0430\\u0441\\u0441\\u043c\\u043e\\u0442\\u0440\\u0438\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />; WrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### How does it work?\\n\\n\\u041a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u0442\\u044c\\u0441\\u044f \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0438\\u043c \\u043e\\u0431\\u0440\\u0430\\u0437\\u043e\\u043c:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\n\\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u043f\\u043e \\u0443\\u043c\\u043e\\u043b\\u0447\\u0430\\u043d\\u0438\\u044e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442 `List` \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u0442\\u044c `<ul>` \\u044d\\u043b\\u0435\\u043c\\u0435\\u043d\\u0442. This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. \\u041d\\u043e **\\u0441 \\u043d\\u0435\\u0431\\u043e\\u043b\\u044c\\u0448\\u043e\\u0439 \\u043e\\u0433\\u043e\\u0432\\u043e\\u0440\\u043a\\u043e\\u0439! **\\n\\n### Caveat with inlining\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. \\u041d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u0435\\u0441\\u043b\\u0438 \\u0432\\u044b \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0441\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u0441\\u043e\\u0431\\u0441\\u0442\\u0432\\u0435\\u043d\\u043d\\u044b\\u0439 `ListItem`, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0435\\u0442 \\u043a\\u0430\\u043a \\u0441\\u0441\\u044b\\u043b\\u043a\\u0430, \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0441\\u0434\\u0435\\u043b\\u0430\\u0442\\u044c \\u0441\\u043b\\u0435\\u0434\\u0443\\u044e\\u0449\\u0435\\u0435:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f \\u041e\\u0434\\u043d\\u0430\\u043a\\u043e, \\u043f\\u043e\\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u0443 \\u043c\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u044c\\u0437\\u0443\\u0435\\u043c \\u0432\\u0441\\u0442\\u0440\\u043e\\u0435\\u043d\\u043d\\u0443\\u044e \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u044e \\u0434\\u043b\\u044f \\u0438\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u044f \\u043e\\u0442\\u0440\\u0438\\u0441\\u043e\\u0432\\u0430\\u043d\\u043d\\u043e\\u0433\\u043e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430, React \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0434\\u0435\\u043c\\u043e\\u043d\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0441\\u0441\\u044b\\u043b\\u043a\\u0443 \\u043a\\u0430\\u0436\\u0434\\u044b\\u0439 \\u0440\\u0430\\u0437, \\u043a\\u043e\\u0433\\u0434\\u0430 ` ListItemLink ` \\u043e\\u0442\\u0440\\u0438\\u0441\\u043e\\u0432\\u0430\\u043d. \\u041d\\u0435 \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e React \\u0441\\u0434\\u0435\\u043b\\u0430\\u0435\\u0442 \\u043d\\u0435\\u043d\\u0443\\u0436\\u043d\\u043e\\u0435 \\u043e\\u0431\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 DOM, \\u043d\\u043e \\u0438 ripple \\u044d\\u0444\\u0444\\u0435\\u043a\\u0442 `ListItem` \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0442\\u044c \\u043d\\u0435\\u043f\\u0440\\u0430\\u0432\\u0438\\u043b\\u044c\\u043d\\u043e.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n` renderLink ` \\u0442\\u0435\\u043f\\u0435\\u0440\\u044c \\u0432\\u0441\\u0435\\u0433\\u0434\\u0430 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u0441\\u044b\\u043b\\u0430\\u0442\\u044c\\u0441\\u044f \\u043d\\u0430 \\u043e\\u0434\\u0438\\u043d \\u0438 \\u0442\\u043e\\u0442 \\u0436\\u0435 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. \\u0412 \\u044d\\u0442\\u043e\\u043c \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u0435 \\u043c\\u044b \\u043d\\u0435 \\u0441\\u043e\\u0437\\u0434\\u0430\\u0435\\u043c \\u043d\\u0438 \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u043f\\u0440\\u043e\\u043c\\u0435\\u0436\\u0443\\u0442\\u043e\\u0447\\u043d\\u043e\\u0433\\u043e \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### With TypeScript\\n\\n\\u0412\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u043d\\u0430\\u0439\\u0442\\u0438 \\u043f\\u043e\\u0434\\u0440\\u043e\\u0431\\u043d\\u043e\\u0441\\u0442\\u0438 \\u0432 [ \\u0440\\u0443\\u043a\\u043e\\u0432\\u043e\\u0434\\u0441\\u0442\\u0432\\u0435 \\u043f\\u043e TypeScript ](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Caveat with refs\\n\\nThis section covers caveats when using a custom component as `children` or for the `component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible by using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and ref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from React in your console similar to:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their wrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nTo find out if the Material-UI component you\\'re using has this requirement, check out the the props API documentation for that component. If you need to forward refs the description will link to this section.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},F12Z:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return R}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"yZEQ\"),s=t(\"AgvC\"),c=t(\"WSie\"),p=t(\"VPks\"),m=t(\"vR+x\"),d=t(\"3uJ1\"),u=t(\"FAXT\"),l=t(\"czfG\"),f=t(\"MIXp\"),h=t(\"Oy88\"),w=t(\"oNR1\"),y=t(\"USb2\"),g=i.a.createElement;function v(n){var e=n.icon,t=n.primary,r=n.to,a=i.a.useMemo((function(){return i.a.forwardRef((function(n,e){return g(y.a,Object(o.a)({to:r,ref:e},n))}))}),[r]);return g(\"li\",null,g(c.a,{button:!0,component:a},e?g(m.a,null,e):null,g(d.a,{primary:t})))}var L=Object(a.a)({root:{width:360}}),I=g(p.a,{elevation:0},g(s.a,{\"aria-label\":\"main mailbox folders\"},g(v,{to:\"/inbox\",primary:\"Inbox\",icon:g(l.a,null)}),g(v,{to:\"/drafts\",primary:\"Drafts\",icon:g(f.a,null)})),g(u.a,null),g(s.a,{\"aria-label\":\"secondary mailbox folders\"},g(v,{to:\"/trash\",primary:\"Trash\"}),g(v,{to:\"/spam\",primary:\"Spam\"})));function R(){var n=L();return g(w.a,{initialEntries:[\"/drafts\"],initialIndex:0},g(\"div\",{className:n.root},g(w.b,null,(function(n){var e=n.location;return g(h.a,{gutterBottom:!0},\"Current route: \",e.pathname)})),I))}},FhJB:function(n,e){n.exports='# Composition\\n\\n<p class=\"description\">Material-UI tries to make composition as easy as possible.</p>\\n\\n## Wrapping components\\n\\nIn order to provide the maximum flexibility and performance,\\nwe need a way to know the nature of the child elements a component receives.\\nTo solve this problem we tag some of the components\\nwith a `muiName` static property when needed.\\n\\nYou may, however, need to wrap a component in order to enhance it,\\nwhich can conflict with the `muiName` solution. If you wrap a component, verify if\\nthat component has this static property set.\\n\\nIf you encounter this issue, you need to use the same tag for your wrapping component\\nthat is used with the wrapped component. In addition, you should forward the properties,\\nas the parent component may need to control the wrapped components props.\\n\\nLet\\'s see an example:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### How does it work?\\n\\nThe component will render like this:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nFor example, by default a `List` component will render a `<ul>` element.\\nThis can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop.\\nThe following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library.\\nBut it also **comes with a small caveat!**\\n\\n### Caveat with inlining\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders.\\nFor instance, if you want to create a custom `ListItem` that acts as a link, you could do the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f However, since we are using an inline function to change the rendered component, React will unmount the link every time `ListItemLink` is rendered. Not only will React update the DOM unnecessarily, the ripple effect of the `ListItem` will also not work correctly.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead.\\nLet\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` will now always reference the same component.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code.\\nIn this example, we don\\'t create any intermediary component:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions.\\nThe component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### With TypeScript\\n\\nYou can find the details in the [TypeScript guide](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop.\\nThe behavior is identical to the description of the prop above.\\nHere are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router).\\nIt covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Caveat with refs\\n\\nThis section covers caveats when using a custom component as `children` or for the\\n`component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible\\nby using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and\\nref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from\\nReact in your console similar to:\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their\\nwrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nTo find out if the Material-UI component you\\'re using has this requirement, check\\nout the the props API documentation for that component. If you need to forward refs\\nthe description will link to this section.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see\\nwarnings in `React.StrictMode`.\\n`ReactDOM.findDOMNode` is used internally for backwards compatibility.\\nYou can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component.\\nDoing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```\\n\\n'},HW8R:function(n,e,t){var o=t(\"dRyN\");n.exports=l,n.exports.parse=i,n.exports.compile=function(n,e){return s(i(n,e))},n.exports.tokensToFunction=s,n.exports.tokensToRegExp=u;var r=new RegExp([\"(\\\\\\\\.)\",\"([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))\"].join(\"|\"),\"g\");function i(n,e){for(var t,o=[],i=0,a=0,s=\"\",m=e&&e.delimiter||\"/\";null!=(t=r.exec(n));){var d=t[0],u=t[1],l=t.index;if(s+=n.slice(a,l),a=l+d.length,u)s+=u[1];else{var f=n[a],h=t[2],w=t[3],y=t[4],g=t[5],v=t[6],L=t[7];s&&(o.push(s),s=\"\");var I=null!=h&&null!=f&&f!==h,R=\"+\"===v||\"*\"===v,b=\"?\"===v||\"*\"===v,k=t[2]||m,x=y||g;o.push({name:w||i++,prefix:h||\"\",delimiter:k,optional:b,repeat:R,partial:I,asterisk:!!L,pattern:x?p(x):L?\".*\":\"[^\"+c(k)+\"]+?\"})}}return a<n.length&&(s+=n.substr(a)),s&&o.push(s),o}function a(n){return encodeURI(n).replace(/[\\/?#]/g,(function(n){return\"%\"+n.charCodeAt(0).toString(16).toUpperCase()}))}function s(n){for(var e=new Array(n.length),t=0;t<n.length;t++)\"object\"===typeof n[t]&&(e[t]=new RegExp(\"^(?:\"+n[t].pattern+\")$\"));return function(t,r){for(var i=\"\",s=t||{},c=(r||{}).pretty?a:encodeURIComponent,p=0;p<n.length;p++){var m=n[p];if(\"string\"!==typeof m){var d,u=s[m.name];if(null==u){if(m.optional){m.partial&&(i+=m.prefix);continue}throw new TypeError('Expected \"'+m.name+'\" to be defined')}if(o(u)){if(!m.repeat)throw new TypeError('Expected \"'+m.name+'\" to not repeat, but received `'+JSON.stringify(u)+\"`\");if(0===u.length){if(m.optional)continue;throw new TypeError('Expected \"'+m.name+'\" to not be empty')}for(var l=0;l<u.length;l++){if(d=c(u[l]),!e[p].test(d))throw new TypeError('Expected all \"'+m.name+'\" to match \"'+m.pattern+'\", but received `'+JSON.stringify(d)+\"`\");i+=(0===l?m.prefix:m.delimiter)+d}}else{if(d=m.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return\"%\"+n.charCodeAt(0).toString(16).toUpperCase()})):c(u),!e[p].test(d))throw new TypeError('Expected \"'+m.name+'\" to match \"'+m.pattern+'\", but received \"'+d+'\"');i+=m.prefix+d}}else i+=m}return i}}function c(n){return n.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g,\"\\\\$1\")}function p(n){return n.replace(/([=!:$\\/()])/g,\"\\\\$1\")}function m(n,e){return n.keys=e,n}function d(n){return n.sensitive?\"\":\"i\"}function u(n,e,t){o(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,i=!1!==t.end,a=\"\",s=0;s<n.length;s++){var p=n[s];if(\"string\"===typeof p)a+=c(p);else{var u=c(p.prefix),l=\"(?:\"+p.pattern+\")\";e.push(p),p.repeat&&(l+=\"(?:\"+u+l+\")*\"),a+=l=p.optional?p.partial?u+\"(\"+l+\")?\":\"(?:\"+u+\"(\"+l+\"))?\":u+\"(\"+l+\")\"}}var f=c(t.delimiter||\"/\"),h=a.slice(-f.length)===f;return r||(a=(h?a.slice(0,-f.length):a)+\"(?:\"+f+\"(?=$))?\"),a+=i?\"$\":r&&h?\"\":\"(?=\"+f+\"|$)\",m(new RegExp(\"^\"+a,d(t)),e)}function l(n,e,t){return o(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\\((?!\\?)/g);if(t)for(var o=0;o<t.length;o++)e.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return m(n,e)}(n,e):o(n)?function(n,e,t){for(var o=[],r=0;r<n.length;r++)o.push(l(n[r],e,t).source);return m(new RegExp(\"(?:\"+o.join(\"|\")+\")\",d(t)),e)}(n,e,t):function(n,e,t){return u(i(n,t),e,t)}(n,e,t)}},JaWf:function(n,e){n.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport Paper from '@material-ui/core/Paper';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Divider from '@material-ui/core/Divider';\\nimport InboxIcon from '@material-ui/icons/Inbox';\\nimport DraftsIcon from '@material-ui/icons/Drafts';\\nimport Typography from '@material-ui/core/Typography';\\nimport { Route, MemoryRouter } from 'react-router';\\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\\nimport { Omit } from '@material-ui/types';\\n\\ninterface ListItemLinkProps {\\n  icon?: React.ReactElement;\\n  primary: string;\\n  to: string;\\n}\\n\\nfunction ListItemLink(props: ListItemLinkProps) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\\n        <RouterLink to={to} ref={ref} {...itemProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    width: 360,\\n  },\\n});\\n\\nexport default function ListRouter() {\\n  const classes = useStyles();\\n\\n  return (\\n    <MemoryRouter initialEntries={['/drafts']} initialIndex={0}>\\n      <div className={classes.root}>\\n        <Route>\\n          {({ location }) => (\\n            <Typography gutterBottom>Current route: {location.pathname}</Typography>\\n          )}\\n        </Route>\\n        <Paper elevation={0}>\\n          <List aria-label=\\\"main mailbox folders\\\">\\n            <ListItemLink to=\\\"/inbox\\\" primary=\\\"Inbox\\\" icon={<InboxIcon />} />\\n            <ListItemLink to=\\\"/drafts\\\" primary=\\\"Drafts\\\" icon={<DraftsIcon />} />\\n          </List>\\n          <Divider />\\n          <List aria-label=\\\"secondary mailbox folders\\\">\\n            <ListItemLink to=\\\"/trash\\\" primary=\\\"Trash\\\" />\\n            <ListItemLink to=\\\"/spam\\\" primary=\\\"Spam\\\" />\\n          </List>\\n        </Paper>\\n      </div>\\n    </MemoryRouter>\\n  );\\n}\\n\"},MIXp:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),r=t(\"0Zz2\"),i=o.createElement;e.a=Object(r.a)(i(\"path\",{d:\"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z\"}),\"Drafts\")},McRo:function(n,e){n.exports='# Komposition\\n\\n<p class=\"description\">Die Material-UI versucht die Komposition so einfach wie m\\xf6glich zu gestalten.</p>\\n\\n## Komponenten verpacken\\n\\nUm maximale Flexibilit\\xe4t und Leistung zu gew\\xe4hrleisten, ben\\xf6tigen wir einen Weg, um die Art der untergeordneten Elemente einer Komponente zu kennen. To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\nYou may, however, need to wrap a component in order to enhance it, which can conflict with the `muiName` solution. If you wrap a component, verify if that component has this static property set.\\n\\nIf you encounter this issue, you need to use the same tag for your wrapping component that is used with the wrapped component. In addition, you should forward the properties, as the parent component may need to control the wrapped components props.\\n\\nSehen wir uns ein Beispiel an:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### Wie funktioniert das?\\n\\nDie Komponente wird wie folgt gerendert:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nBeispielsweise wird die `List` Komponente mit einem `<ul>`-Element gerendert. This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. Aber es gibt auch eine **kleine Einschr\\xe4nkung!**\\n\\n### Vorbehalt beim Inlining\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. Zum Beispiel, wenn Sie ein benutzerdefiniertes `ListItem` erstellen m\\xf6chten, das als Link fungiert, k\\xf6nnen Sie Folgendes tun:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f Da wir jedoch eine Inline-Funktion verwenden, um die gerenderte Komponente zu \\xe4ndern, wird die Verkn\\xfcpfung von React bei jedem Rendern des `ListItemLink ` aufgehoben. React aktualisiert nicht nur das DOM unn\\xf6tig, sondern die Wellenvisualisierung des `ListItem` funktioniert auch nicht richtig.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` wird jetzt immer auf dieselbe Komponente verweisen.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. In diesem Beispiel erstellen wir keine Zwischenkomponente:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### Mit TypeScript\\n\\nDie Details finden Sie im [TypeScript-Handbuch](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List (liste)\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Vorbehalt bei Refs\\n\\nThis section covers caveats when using a custom component as `children` or for the `component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible by using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and ref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from React in your console similar to:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their wrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Ung\\xfcltige `component` Eigenschaft an `ComponentName` \\xfcbergeben. Es wurde ein Elementtyp erwartet, der eine Referenz enthalten kann.\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nUm herauszufinden, ob die Material-UI - Komponente, die Sie verwenden, diese Anforderung hat, \\xfcberpr\\xfcfen Sie API - Dokumentation f\\xfcr diese Komponente. Wenn Sie Refs weiterleiten m\\xfcssen, wird die Beschreibung mit diesem Abschnitt verkn\\xfcpft.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},NYh3:function(n,e){n.exports=\"/* eslint-disable jsx-a11y/anchor-is-valid */\\nimport React from 'react';\\nimport { MemoryRouter as Router } from 'react-router';\\nimport { Link as RouterLink } from 'react-router-dom';\\nimport Link from '@material-ui/core/Link';\\n\\nconst LinkBehavior = React.forwardRef((props, ref) => (\\n  <RouterLink ref={ref} to=\\\"/getting-started/installation/\\\" {...props} />\\n));\\n\\nexport default function LinkRouter() {\\n  return (\\n    <Router>\\n      <div>\\n        <Link component={RouterLink} to=\\\"/\\\">\\n          With prop forwarding\\n        </Link>\\n        <br />\\n        <Link component={LinkBehavior}>Without prop forwarding</Link>\\n      </div>\\n    </Router>\\n  );\\n}\\n\"},Pw6v:function(n,e,t){\"use strict\";var o=t(\"z3IF\"),r=t(\"2Fjn\"),i=t(\"mXGw\"),a=t(\"PDtE\"),s=t(\"XpU0\"),c=t(\"rKPb\"),p=i.createElement,m=i.forwardRef((function(n,e){var t=n.classes,i=n.className,s=n.color,m=void 0===s?\"inherit\":s,d=n.component,u=void 0===d?\"span\":d,l=n.fontSize,f=void 0===l?\"default\":l,h=Object(r.a)(n,[\"classes\",\"className\",\"color\",\"component\",\"fontSize\"]);return p(u,Object(o.a)({className:Object(a.a)(\"material-icons\",t.root,i,\"inherit\"!==m&&t[\"color\".concat(Object(c.a)(m))],\"default\"!==f&&t[\"fontSize\".concat(Object(c.a)(f))]),\"aria-hidden\":!0,ref:e},h))}));m.muiName=\"Icon\",e.a=Object(s.default)((function(n){return{root:{userSelect:\"none\",fontSize:n.typography.pxToRem(24),width:\"1em\",height:\"1em\",overflow:\"hidden\",flexShrink:0},colorPrimary:{color:n.palette.primary.main},colorSecondary:{color:n.palette.secondary.main},colorAction:{color:n.palette.action.active},colorError:{color:n.palette.error.main},colorDisabled:{color:n.palette.action.disabled},fontSizeInherit:{fontSize:\"inherit\"},fontSizeSmall:{fontSize:n.typography.pxToRem(20)},fontSizeLarge:{fontSize:n.typography.pxToRem(36)}}}),{name:\"MuiIcon\"})(m)},QKC2:function(n,e){n.exports=function(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}},\"QN+/\":function(n,e,t){var o={\"./ButtonRouter.js\":\"V4Gn\",\"./ButtonRouter.tsx\":\"svGV\",\"./Composition.js\":\"CP66\",\"./Composition.tsx\":\"gTQU\",\"./LinkRouter.js\":\"NYh3\",\"./LinkRouter.tsx\":\"2GDQ\",\"./ListRouter.js\":\"gzmt\",\"./ListRouter.tsx\":\"JaWf\"};function r(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error(\"Cannot find module '\"+n+\"'\");throw e.code=\"MODULE_NOT_FOUND\",e}return o[n]}r.keys=function(){return Object.keys(o)},r.resolve=i,n.exports=r,r.id=\"QN+/\"},USb2:function(n,e,t){\"use strict\";t.d(e,\"a\",(function(){return w}));var o=t(\"oNR1\"),r=t(\"7L9N\"),i=t(\"mXGw\"),a=t.n(i),s=t(\"ve3R\"),c=(t(\"W0B4\"),t(\"Fcif\")),p=t(\"+I+c\"),m=t(\"+D+d\");a.a.Component;a.a.Component;var d=function(n,e){return\"function\"===typeof n?n(e):n},u=function(n,e){return\"string\"===typeof n?Object(s.c)(n,null,null,e):n},l=function(n){return n},f=a.a.forwardRef;\"undefined\"===typeof f&&(f=l);var h=f((function(n,e){var t=n.innerRef,o=n.navigate,r=n.onClick,i=Object(p.a)(n,[\"innerRef\",\"navigate\",\"onClick\"]),s=i.target,m=Object(c.a)({},i,{onClick:function(n){try{r&&r(n)}catch(e){throw n.preventDefault(),e}n.defaultPrevented||0!==n.button||s&&\"_self\"!==s||function(n){return!!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)}(n)||(n.preventDefault(),o())}});return m.ref=l!==f&&e||t,a.a.createElement(\"a\",m)}));var w=f((function(n,e){var t=n.component,r=void 0===t?h:t,i=n.replace,s=n.to,w=n.innerRef,y=Object(p.a)(n,[\"component\",\"replace\",\"to\",\"innerRef\"]);return a.a.createElement(o.d.Consumer,null,(function(n){n||Object(m.a)(!1);var t=n.history,o=u(d(s,n.location),n.location),p=o?t.createHref(o):\"\",h=Object(c.a)({},y,{href:p,navigate:function(){var e=d(s,n.location);(i?t.replace:t.push)(e)}});return l!==f?h.ref=e||w:h.innerRef=w,a.a.createElement(r,h)}))})),y=function(n){return n},g=a.a.forwardRef;\"undefined\"===typeof g&&(g=y);g((function(n,e){var t=n[\"aria-current\"],r=void 0===t?\"page\":t,i=n.activeClassName,s=void 0===i?\"active\":i,l=n.activeStyle,f=n.className,h=n.exact,v=n.isActive,L=n.location,I=n.strict,R=n.style,b=n.to,k=n.innerRef,x=Object(p.a)(n,[\"aria-current\",\"activeClassName\",\"activeStyle\",\"className\",\"exact\",\"isActive\",\"location\",\"strict\",\"style\",\"to\",\"innerRef\"]);return a.a.createElement(o.d.Consumer,null,(function(n){n||Object(m.a)(!1);var t=L||n.location,i=u(d(b,t),t),p=i.pathname,T=p&&p.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\"),j=T?Object(o.e)(t.pathname,{path:T,exact:h,strict:I}):null,M=!!(v?v(j,t):j),C=M?function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.filter((function(n){return n})).join(\" \")}(f,s):f,O=M?Object(c.a)({},R,{},l):R,S=Object(c.a)({\"aria-current\":M&&r||null,className:C,style:O,to:i},x);return y!==g?S.ref=e||k:S.innerRef=k,a.a.createElement(w,S)}))}))},V4Gn:function(n,e){n.exports=\"import React from 'react';\\nimport { MemoryRouter as Router } from 'react-router';\\nimport { Link as RouterLink } from 'react-router-dom';\\nimport Button from '@material-ui/core/Button';\\n\\nconst LinkBehavior = React.forwardRef((props, ref) => (\\n  <RouterLink ref={ref} to=\\\"/getting-started/installation/\\\" {...props} />\\n));\\n\\nexport default function ButtonRouter() {\\n  return (\\n    <Router>\\n      <div>\\n        <Button color=\\\"primary\\\" component={RouterLink} to=\\\"/\\\">\\n          With prop forwarding\\n        </Button>\\n        <br />\\n        <Button color=\\\"primary\\\" component={LinkBehavior}>\\n          Without prop forwarding\\n        </Button>\\n      </div>\\n    </Router>\\n  );\\n}\\n\"},Wcwt:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/guides/composition\",function(){return t(\"ylK1\")}])},ZltE:function(n,e){n.exports='# crwdns95346:0crwdne95346:0\\n\\n<p class=\"description\">crwdns95348:0crwdne95348:0</p>\\n\\n## crwdns95350:0crwdne95350:0\\n\\ncrwdns95352:0crwdne95352:0 crwdns101252:0crwdne101252:0\\n\\ncrwdns95356:0crwdne95356:0 crwdns95358:0crwdne95358:0\\n\\ncrwdns95360:0crwdne95360:0 crwdns95362:0crwdne95362:0\\n\\ncrwdns95364:0crwdne95364:0\\n\\n```jsx\\ncrwdns95366:0{...props}crwdne95366:0\\n```\\n\\ncrwdns95368:0crwdne95368:0\\n\\n## crwdns101568:0crwdne101568:0\\n\\ncrwdns101570:0crwdne101570:0\\n\\n### crwdns95374:0crwdne95374:0\\n\\ncrwdns95376:0crwdne95376:0\\n\\n```js\\ncrwdns101572:0crwdne101572:0\\n```\\n\\ncrwdns95380:0crwdne95380:0 crwdns101574:0crwdne101574:0 crwdns101576:0crwdne101576:0\\n\\n```jsx\\ncrwdns101578:0crwdne101578:0\\n```\\n\\ncrwdns101580:0crwdne101580:0 crwdns95390:0crwdne95390:0\\n\\n### crwdns95392:0crwdne95392:0\\n\\ncrwdns101582:0crwdne101582:0 crwdns95396:0crwdne95396:0\\n\\n```jsx\\ncrwdns101584:0{ Link }crwdnd101584:0{ icon, primary, to }crwdnd101584:0{to}crwdnd101584:0{...props}crwdnd101584:0{icon}crwdnd101584:0{primary}crwdne101584:0\\n```\\n\\ncrwdns95400:0crwdne95400:0 crwdns95402:0crwdne95402:0\\n\\ncrwdns101586:0crwdne101586:0 crwdns101254:0crwdne101254:0\\n\\n```jsx\\ncrwdns107213:0{ Link }crwdnd107213:0{ icon, primary, to }crwdnd107213:0{ref}crwdnd107213:0{to}crwdnd107213:0{...linkProps}crwdnd107213:0[to]crwdnd107213:0{renderLink}crwdnd107213:0{icon}crwdnd107213:0{primary}crwdne107213:0\\n```\\n\\ncrwdns95410:0crwdne95410:0\\n\\n### crwdns101590:0crwdne101590:0\\n\\ncrwdns101592:0crwdne101592:0 crwdns95416:0crwdne95416:0\\n\\n```jsx\\ncrwdns95418:0{ Link }crwdnd95418:0{Link}crwdne95418:0\\n```\\n\\ncrwdns101594:0crwdne101594:0 crwdns101596:0crwdne101596:0\\n\\n### crwdns101598:0crwdne101598:0\\n\\ncrwdns101600:0crwdne101600:0\\n\\n## crwdns101602:0crwdne101602:0\\n\\ncrwdns101604:0crwdne101604:0 crwdns101606:0crwdne101606:0 crwdns101608:0crwdne101608:0 crwdns101610:0crwdne101610:0\\n\\n### crwdns101612:0crwdne101612:0\\n\\ncrwdns101614:0crwdne101614:0\\n\\n### crwdns101616:0crwdne101616:0\\n\\ncrwdns101618:0crwdne101618:0\\n\\n### crwdns101620:0crwdne101620:0\\n\\ncrwdns101622:0crwdne101622:0\\n\\n## crwdns101624:0crwdne101624:0\\n\\ncrwdns101626:0crwdne101626:0\\n\\ncrwdns101628:0crwdne101628:0 crwdns101630:0crwdne101630:0 crwdns101632:0crwdne101632:0 crwdns101634:0crwdne101634:0\\n\\n- crwdns95446:0crwdne95446:0\\n- crwdns95448:0crwdne95448:0\\n- crwdns95450:0crwdne95450:0\\n- [crwdns95454:0crwdne95454:0](crwdns95452:0crwdne95452:0)\\n- [crwdns95458:0crwdne95458:0](crwdns95456:0crwdne95456:0)\\n- [crwdns95462:0crwdne95462:0](crwdns95460:0crwdne95460:0)\\n\\ncrwdns101636:0crwdne101636:0\\n\\n> crwdns95466:0crwdne95466:0 crwdns95468:0crwdne95468:0 crwdns95470:0crwdne95470:0\\n\\ncrwdns101638:0crwdne101638:0\\n\\ncrwdns101640:0crwdne101640:0\\n\\n> crwdns95476:0crwdne95476:0 crwdns95478:0crwdne95478:0\\n\\ncrwdns101642:0crwdne101642:0 crwdns101644:0crwdne101644:0\\n\\n```diff\\ncrwdns95484:0{...props}crwdnd95484:0{...props}crwdnd95484:0{ref}crwdnd95484:0{MyButton}crwdne95484:0\\n```\\n\\n```diff\\ncrwdns95486:0{...props}crwdnd95486:0{...props}crwdnd95486:0{ref}crwdne95486:0\\n```\\n\\ncrwdns101646:0crwdne101646:0 crwdns101648:0crwdne101648:0\\n\\n### crwdns101650:0crwdne101650:0\\n\\ncrwdns101652:0crwdne101652:0 crwdns101654:0crwdne101654:0 crwdns101656:0crwdne101656:0 crwdns101658:0crwdne101658:0\\n\\n```diff\\ncrwdns95502:0{ props }crwdnd95502:0{ forwardedRef, ...props }crwdnd95502:0{...props}crwdnd95502:0{forwardedRef}crwdnd95502:0{...props}crwdnd95502:0{ref}crwdne95502:0\\n```'},cEJ7:function(n,e){n.exports='# Composition\\uff08\\u7ec4\\u5408\\uff09\\n\\n<p class=\"description\">Material-UI \\u8bd5\\u7740\\u8ba9\\u7ec4\\u5408\\u5c3d\\u53ef\\u80fd\\u7684\\u7b80\\u5355\\u3002</p>\\n\\n## \\u5c01\\u88c5\\u7ec4\\u4ef6\\n\\n\\u6211\\u4eec\\u9700\\u8981\\u4e00\\u79cd\\u4e86\\u89e3\\u7ec4\\u4ef6\\u63a5\\u6536\\u7684\\u5b50\\u5143\\u7d20\\u7684\\u672c\\u8d28\\u7684\\u65b9\\u5f0f\\uff0c\\u8fd9\\u6837\\u53ef\\u4ee5\\u5c3d\\u53ef\\u80fd\\u63d0\\u4f9b\\u6700\\u5927\\u7684\\u7075\\u6d3b\\u6027\\u548c\\u6700\\u597d\\u7684\\u6027\\u80fd\\u3002 To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\n\\u4f46\\u662f\\uff0c\\u60a8\\u4ecd\\u53ef\\u80fd\\u9700\\u8981\\u5c01\\u88c5\\u4e00\\u4e2a\\u7ec4\\u4ef6\\u4ee5\\u589e\\u5f3a\\u5b83\\u7684\\u529f\\u80fd\\uff0c\\u800c\\u8fd9\\u53ef\\u80fd\\u4e0e `muiName` \\u7684\\u89e3\\u51b3\\u65b9\\u6848\\u76f8\\u51b2\\u7a81\\u3002 If you wrap a component, verify if that component has this static property set.\\n\\n\\u5982\\u679c\\u60a8\\u9047\\u5230\\u6b64\\u95ee\\u9898\\uff0c\\u90a3\\u4e48\\u8bf7\\u4e3a\\u5c01\\u88c5\\u7ec4\\u4ef6\\u9644\\u52a0\\u4e0a\\u4e0e\\u88ab\\u5c01\\u88c5\\u7ec4\\u4ef6\\u4e00\\u6837\\u7684\\u6807\\u8bb0\\u3002 \\u53e6\\u5916\\uff0c\\u9274\\u4e8e\\u7236\\u7ec4\\u4ef6\\u53ef\\u80fd\\u9700\\u8981\\u5bf9\\u88ab\\u5c01\\u88c5\\u7684\\u7ec4\\u4ef6\\u5c5e\\u6027\\u52a0\\u4ee5\\u63a7\\u5236\\uff0c\\u60a8\\u5e94\\u8be5\\u5411\\u7236\\u7ec4\\u4ef6\\u4f20\\u9012\\u8fd9\\u4e9b\\u5c5e\\u6027\\u3002\\n\\n\\u8ba9\\u6211\\u4eec\\u6765\\u770b\\u4e00\\u4e2a\\u4f8b\\u5b50\\uff1a\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### \\u5b83\\u662f\\u5982\\u4f55\\u5de5\\u4f5c\\u7684\\u5462\\uff1f\\n\\n\\u8be5\\u7ec4\\u4ef6\\u5c06\\u8fd9\\u6837\\u6e32\\u67d3\\uff1a\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\n\\u4f8b\\u5982\\uff0c\\u5728\\u9ed8\\u8ba4\\u60c5\\u51b5\\u4e0b\\uff0c`List` \\u7ec4\\u4ef6\\u4f1a\\u6e32\\u67d3 `<ul>` \\u5143\\u7d20\\u3002 This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. \\u4f46\\u5b83\\u4e5f**\\u5e26\\u6709\\u4e00\\u4e2a\\u5c0f\\u5c0f\\u7684\\u8b66\\u544a!**\\n\\n### \\u5f53\\u4e0e\\u5185\\u8054\\u51fd\\u6570\\u4e00\\u8d77\\u4f7f\\u7528\\u65f6\\u8981\\u6ce8\\u610f\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. \\u4f8b\\u5982\\uff0c\\u5982\\u679c\\u8981\\u521b\\u5efa\\u81ea\\u5b9a\\u4e49` ListItem `\\u4f5c\\u4e3a\\u94fe\\u63a5\\uff0c\\u60a8\\u53ef\\u4ee5\\u6267\\u884c\\u4ee5\\u4e0b\\u64cd\\u4f5c\\uff1a\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f\\u7136\\u800c\\uff0c\\u7531\\u4e8e\\u6211\\u4eec\\u4f7f\\u7528\\u5185\\u8054\\u51fd\\u6570\\u6765\\u66f4\\u6539\\u5448\\u73b0\\u7684\\u7ec4\\u4ef6\\uff0c\\u56e0\\u6b64\\uff0c\\u5728\\u6bcf\\u4e00\\u6b21` ListItemLink `\\u88ab\\u6e32\\u67d3\\u65f6\\uff0cReact\\u90fd\\u4f1a\\u5148\\u5c06\\u5b83\\u5378\\u8f7d\\u3002 \\u4e0d\\u53ea\\u662fReact\\u4f1a\\u66f4\\u65b0\\u90a3\\u4e9b\\u4e0d\\u5fc5\\u8981\\u7684DOM\\uff0c`ListItem` \\u7684\\u6d9f\\u6f2a\\u6548\\u5e94\\u4e5f\\u5c06\\u65e0\\u6cd5\\u6b63\\u5e38\\u5de5\\u4f5c\\u3002\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n` renderLink `\\u73b0\\u5728\\u5c06\\u59cb\\u7ec8\\u5f15\\u7528\\u76f8\\u540c\\u7684\\u7ec4\\u4ef6\\u3002\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. \\u5728\\u6b64\\u793a\\u4f8b\\u4e2d\\uff0c\\u6211\\u4eec\\u4e0d\\u521b\\u5efa\\u4efb\\u4f55\\u4e2d\\u95f4\\u7ec4\\u4ef6\\uff1a\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### \\u4f7f\\u7528 TypeScript\\n\\n\\u60a8\\u53ef\\u4ee5\\u5728[ TypeScript\\u6307\\u5357\\u4e2d\\u627e\\u5230\\u8be6\\u7ec6\\u4fe1\\u606f](/guides/typescript/#usage-of-component-prop) \\u3002\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Buttons\\uff08\\u6309\\u94ae\\uff09\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### Lists\\uff08\\u5217\\u8868\\uff09\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## \\u4f7f\\u7528refs\\u65f6\\u8981\\u6ce8\\u610f\\n\\n\\u672c\\u8282\\u4ecb\\u7ecd\\u5c06\\u81ea\\u5b9a\\u4e49\\u7ec4\\u4ef6\\u7528\\u4f5c`\\u5b50\\u7ec4\\u4ef6`\\u6216`component`\\u5c5e\\u6027\\u7684\\u503c\\u65f6\\u7684\\u6ce8\\u610f\\u4e8b\\u9879\\u3002\\n\\n\\u67d0\\u4e9b\\u7ec4\\u4ef6\\u9700\\u8981\\u8bbf\\u95eeDOM\\u8282\\u70b9\\u3002 \\u4e4b\\u524d\\u63d0\\u5230\\uff0c\\u901a\\u8fc7\\u4f7f\\u7528` ReactDOM.findDOMNode ` \\u5c31\\u80fd\\u5b9e\\u73b0\\u3002 \\u8be5\\u65b9\\u6cd5\\u5df2\\u88ab\\u5e9f\\u5f03\\uff0c\\u4ee3\\u66ff\\u7684\\u662f\\u4f7f\\u7528` ref `\\u548c ref \\u8f6c\\u9012\\u3002 \\u7136\\u800c\\uff0c\\u53ea\\u6709\\u4e0b\\u5217\\u7ec4\\u4ef6\\u7c7b\\u578b\\u624d\\u53ef\\u83b7\\u5f97 `ref`\\uff1a\\n\\n- \\u4efb\\u4f55Material-UI\\u7ec4\\u4ef6\\n- \\u7c7b\\u7ec4\\u4ef6\\uff0c\\u5982 `React.Component` \\u6216 `React.PureComponent` \\u7b49\\n- DOM (\\u6216 host) \\u7ec4\\u4ef6\\uff0c\\u4f8b\\u5982 `div` \\u6216 `button`\\u7b49\\n- [React.forwardRef\\u7ec4\\u4ef6](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy\\u7ec4\\u4ef6](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo\\u7ec4\\u4ef6](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\n\\u5982\\u679c\\u5728\\u5c06\\u7ec4\\u4ef6\\u4e0eMaterial-UI\\u7ed3\\u5408\\u4f7f\\u7528\\u65f6\\u672a\\u4f7f\\u7528\\u4e0a\\u8ff0\\u7c7b\\u578b\\u4e4b\\u4e00\\uff0c\\u5219\\u53ef\\u80fd\\u4f1a\\u5728\\u63a7\\u5236\\u53f0\\u4e2d\\u770b\\u5230\\u6765\\u81eaReact\\u7684\\u8b66\\u544a\\uff0c\\u7c7b\\u4f3c\\u4e8e\\uff1a\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\n\\u8bf7\\u6ce8\\u610f\\uff0c\\u5728\\u4f7f\\u7528 `lazy` \\u548c `memo` \\u7ec4\\u4ef6\\u65f6\\uff0c\\u5982\\u679c\\u88ab\\u5c01\\u88c5\\u7684\\u7ec4\\u4ef6\\u65e0\\u6cd5\\u6301\\u6709 ref\\uff0c\\u60a8\\u4ecd\\u7136\\u6709\\u53ef\\u80fd\\u6536\\u5230\\u8fd9\\u4e2a\\u8b66\\u544a\\u3002\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. \\u66f4\\u591a\\u4fe1\\u606f\\u89c1[React\\u5b98\\u65b9\\u6587\\u6863\\u4e2d\\u7684\\u672c\\u7ae0\\u8282](https://reactjs.org/docs/forwarding-refs.html)\\u3002\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\n\\u8981\\u786e\\u5b9a\\u60a8\\u4f7f\\u7528\\u7684Material-UI\\u7ec4\\u4ef6\\u662f\\u5426\\u5177\\u6709\\u6b64\\u9700\\u6c42\\uff0c\\u8bf7\\u67e5\\u9605\\u8be5\\u7ec4\\u4ef6\\u7684props API\\u6587\\u6863\\u3002 \\u5982\\u679c\\u60a8\\u9700\\u8981\\u8f6c\\u9012 refs\\uff0c\\u63cf\\u8ff0\\u5c06\\u94fe\\u63a5\\u5230\\u6b64\\u90e8\\u5206\\u3002\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},czfG:function(n,e,t){\"use strict\";var o=t(\"mXGw\"),r=t(\"0Zz2\"),i=o.createElement;e.a=Object(r.a)(i(\"path\",{d:\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"}),\"Inbox\")},dRyN:function(n,e){n.exports=Array.isArray||function(n){return\"[object Array]\"==Object.prototype.toString.call(n)}},gTQU:function(n,e){n.exports=\"import React from 'react';\\nimport IconButton from '@material-ui/core/IconButton';\\nimport Icon, { IconProps } from '@material-ui/core/Icon';\\n\\nconst WrappedIcon = (props: IconProps) => <Icon {...props} />;\\nWrappedIcon.muiName = 'Icon';\\n\\nexport default function Composition() {\\n  return (\\n    <div>\\n      <IconButton>\\n        <Icon>alarm</Icon>\\n      </IconButton>\\n      <IconButton>\\n        <WrappedIcon>alarm</WrappedIcon>\\n      </IconButton>\\n    </div>\\n  );\\n}\\n\"},gzmt:function(n,e){n.exports=\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport Paper from '@material-ui/core/Paper';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport Divider from '@material-ui/core/Divider';\\nimport InboxIcon from '@material-ui/icons/Inbox';\\nimport DraftsIcon from '@material-ui/icons/Drafts';\\nimport Typography from '@material-ui/core/Typography';\\nimport { Route, MemoryRouter } from 'react-router';\\nimport { Link as RouterLink } from 'react-router-dom';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n\\nListItemLink.propTypes = {\\n  icon: PropTypes.element,\\n  primary: PropTypes.string.isRequired,\\n  to: PropTypes.string.isRequired,\\n};\\n\\nconst useStyles = makeStyles({\\n  root: {\\n    width: 360,\\n  },\\n});\\n\\nexport default function ListRouter() {\\n  const classes = useStyles();\\n\\n  return (\\n    <MemoryRouter initialEntries={['/drafts']} initialIndex={0}>\\n      <div className={classes.root}>\\n        <Route>\\n          {({ location }) => (\\n            <Typography gutterBottom>Current route: {location.pathname}</Typography>\\n          )}\\n        </Route>\\n        <Paper elevation={0}>\\n          <List aria-label=\\\"main mailbox folders\\\">\\n            <ListItemLink to=\\\"/inbox\\\" primary=\\\"Inbox\\\" icon={<InboxIcon />} />\\n            <ListItemLink to=\\\"/drafts\\\" primary=\\\"Drafts\\\" icon={<DraftsIcon />} />\\n          </List>\\n          <Divider />\\n          <List aria-label=\\\"secondary mailbox folders\\\">\\n            <ListItemLink to=\\\"/trash\\\" primary=\\\"Trash\\\" />\\n            <ListItemLink to=\\\"/spam\\\" primary=\\\"Spam\\\" />\\n          </List>\\n        </Paper>\\n      </div>\\n    </MemoryRouter>\\n  );\\n}\\n\"},oNR1:function(n,e,t){\"use strict\";var o=t(\"7L9N\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"W0B4\"),s=t.n(a),c=t(\"ve3R\"),p=t(\"QKC2\"),m=t.n(p),d=t(\"5R4H\"),u=t.n(d);function l(n){var e=[];return{on:function(n){e.push(n)},off:function(n){e=e.filter((function(e){return e!==n}))},get:function(){return n},set:function(t,o){n=t,e.forEach((function(e){return e(n,o)}))}}}var f=i.a.createContext||function(n,e){var t,o,i=\"__create-react-context-\"+u()()+\"__\",a=function(n){function t(){var e;return(e=n.apply(this,arguments)||this).emitter=l(e.props.value),e}m()(t,n);var o=t.prototype;return o.getChildContext=function(){var n;return(n={})[i]=this.emitter,n},o.componentWillReceiveProps=function(n){if(this.props.value!==n.value){var t,o=this.props.value,r=n.value;((i=o)===(a=r)?0!==i||1/i===1/a:i!==i&&a!==a)?t=0:(t=\"function\"===typeof e?e(o,r):1073741823,0!==(t|=0)&&this.emitter.set(n.value,t))}var i,a},o.render=function(){return this.props.children},t}(r.Component);a.childContextTypes=((t={})[i]=s.a.object.isRequired,t);var c=function(e){function t(){var n;return(n=e.apply(this,arguments)||this).state={value:n.getValue()},n.onUpdate=function(e,t){0!==((0|n.observedBits)&t)&&n.setState({value:n.getValue()})},n}m()(t,e);var o=t.prototype;return o.componentWillReceiveProps=function(n){var e=n.observedBits;this.observedBits=void 0===e||null===e?1073741823:e},o.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var n=this.props.observedBits;this.observedBits=void 0===n||null===n?1073741823:n},o.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},o.getValue=function(){return this.context[i]?this.context[i].get():n},o.render=function(){return(n=this.props.children,Array.isArray(n)?n[0]:n)(this.state.value);var n},t}(r.Component);return c.contextTypes=((o={})[i]=s.a.object,o),{Provider:a,Consumer:c}},h=t(\"+D+d\"),w=t(\"Fcif\"),y=t(\"HW8R\"),g=t.n(y),v=(t(\"xVO4\"),t(\"+I+c\"));t(\"GeWT\");t.d(e,\"a\",(function(){return R})),t.d(e,\"b\",(function(){return T})),t.d(e,\"c\",(function(){return I})),t.d(e,\"d\",(function(){return L})),t.d(e,\"e\",(function(){return x}));var L=function(n){var e=f();return e.displayName=n,e}(\"Router\"),I=function(n){function e(e){var t;return(t=n.call(this,e)||this).state={location:e.history.location},t._isMounted=!1,t._pendingLocation=null,e.staticContext||(t.unlisten=e.history.listen((function(n){t._isMounted?t.setState({location:n}):t._pendingLocation=n}))),t}Object(o.a)(e,n),e.computeRootMatch=function(n){return{path:\"/\",url:\"/\",params:{},isExact:\"/\"===n}};var t=e.prototype;return t.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&this.unlisten()},t.render=function(){return i.a.createElement(L.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:e.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},e}(i.a.Component);var R=function(n){function e(){for(var e,t=arguments.length,o=new Array(t),r=0;r<t;r++)o[r]=arguments[r];return(e=n.call.apply(n,[this].concat(o))||this).history=Object(c.d)(e.props),e}return Object(o.a)(e,n),e.prototype.render=function(){return i.a.createElement(I,{history:this.history,children:this.props.children})},e}(i.a.Component);i.a.Component;var b={},k=0;function x(n,e){void 0===e&&(e={}),(\"string\"===typeof e||Array.isArray(e))&&(e={path:e});var t=e,o=t.path,r=t.exact,i=void 0!==r&&r,a=t.strict,s=void 0!==a&&a,c=t.sensitive,p=void 0!==c&&c;return[].concat(o).reduce((function(e,t){if(!t&&\"\"!==t)return null;if(e)return e;var o=function(n,e){var t=\"\"+e.end+e.strict+e.sensitive,o=b[t]||(b[t]={});if(o[n])return o[n];var r=[],i={regexp:g()(n,r,e),keys:r};return k<1e4&&(o[n]=i,k++),i}(t,{end:i,strict:s,sensitive:p}),r=o.regexp,a=o.keys,c=r.exec(n);if(!c)return null;var m=c[0],d=c.slice(1),u=n===m;return i&&!u?null:{path:t,url:\"/\"===t&&\"\"===m?\"/\":m,isExact:u,params:a.reduce((function(n,e,t){return n[e.name]=d[t],n}),{})}}),null)}var T=function(n){function e(){return n.apply(this,arguments)||this}return Object(o.a)(e,n),e.prototype.render=function(){var n=this;return i.a.createElement(L.Consumer,null,(function(e){e||Object(h.a)(!1);var t=n.props.location||e.location,o=n.props.computedMatch?n.props.computedMatch:n.props.path?x(t.pathname,n.props):e.match,r=Object(w.a)({},e,{location:t,match:o}),a=n.props,s=a.children,c=a.component,p=a.render;return Array.isArray(s)&&0===s.length&&(s=null),i.a.createElement(L.Provider,{value:r},r.match?s?\"function\"===typeof s?s(r):s:c?i.a.createElement(c,r):p?p(r):null:\"function\"===typeof s?s(r):null)}))},e}(i.a.Component);function j(n){return\"/\"===n.charAt(0)?n:\"/\"+n}function M(n,e){if(!n)return e;var t=j(n);return 0!==e.pathname.indexOf(t)?e:Object(w.a)({},e,{pathname:e.pathname.substr(t.length)})}function C(n){return\"string\"===typeof n?n:Object(c.e)(n)}function O(n){return function(){Object(h.a)(!1)}}function S(){}i.a.Component;i.a.Component;i.a.useContext},qYZ3:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return u}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"oNR1\"),s=t(\"USb2\"),c=t(\"r6IM\"),p=i.a.createElement,m=i.a.forwardRef((function(n,e){return p(s.a,Object(o.a)({ref:e,to:\"/getting-started/installation/\"},n))})),d=p(a.a,null,p(\"div\",null,p(c.a,{component:s.a,to:\"/\"},\"With prop forwarding\"),p(\"br\",null),p(c.a,{component:m},\"Without prop forwarding\")));function u(){return d}},rQuc:function(n,e){n.exports='# \\u5f93\\u5c5e\\u95a2\\u4fc2\\n\\n<p class=\"description\">Material-UI\\u306f\\u3001\\u69cb\\u6210\\u3092\\u3067\\u304d\\u308b\\u3060\\u3051\\u7c21\\u5358\\u306b\\u3057\\u3088\\u3046\\u3068\\u3057\\u307e\\u3059\\u3002</p>\\n\\n## \\u30e9\\u30c3\\u30d4\\u30f3\\u30b0\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\n\\n\\u6700\\u5927\\u9650\\u306e\\u67d4\\u8edf\\u6027\\u3068\\u30d1\\u30d5\\u30a9\\u30fc\\u30de\\u30f3\\u30b9\\u3092\\u63d0\\u4f9b\\u3059\\u308b\\u305f\\u3081\\u306b\\u3001 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u304c\\u53d7\\u3051\\u53d6\\u308b\\u5b50\\u8981\\u7d20\\u306e\\u6027\\u8cea\\u3092\\u77e5\\u308b\\u65b9\\u6cd5\\u304c\\u5fc5\\u8981\\u3067\\u3059\\u3002 To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\n\\u305f\\u3060\\u3057\\u3001\\u62e1\\u5f35\\u3059\\u308b\\u305f\\u3081\\u306b\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u30e9\\u30c3\\u30d7\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u5834\\u5408\\u304c\\u3042\\u308a\\u3001\\u3053\\u308c\\u306f`muiName`\\u30bd\\u30ea\\u30e5\\u30fc\\u30b7\\u30e7\\u30f3\\u3068\\u7af6\\u5408\\u3059\\u308b\\u53ef\\u80fd\\u6027\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u30e9\\u30c3\\u30d7\\u3059\\u308b\\u5834\\u5408\\u306f\\u3001\\u305d\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u3053\\u306e\\u9759\\u7684\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u30fc\\u304c\\u8a2d\\u5b9a\\u3055\\u308c\\u3066\\u3044\\u308b\\u304b\\u3069\\u3046\\u304b\\u3092\\u78ba\\u8a8d\\u3057\\u307e\\u3059\\u3002\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u3092\\u30e9\\u30c3\\u30d7\\u3059\\u308b\\u5834\\u5408\\u306f\\u3001\\u305d\\u306e\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306b\\u3053\\u306e\\u9759\\u7684\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u30fc\\u304c\\u8a2d\\u5b9a\\u3055\\u308c\\u3066\\u3044\\u308b\\u304b\\u3069\\u3046\\u304b\\u3092\\u78ba\\u8a8d\\u3057\\u307e\\u3059\\u3002 \\u3055\\u3089\\u306b\\u3001\\u89aa\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u304c\\u30e9\\u30c3\\u30d7\\u3055\\u308c\\u305f\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u30b3\\u30f3\\u30c8\\u30ed\\u30fc\\u30eb\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u5834\\u5408\\u304c\\u3042\\u308b\\u305f\\u3081\\u3001\\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u8ee2\\u9001\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n\\u4f8b\\u3092\\u898b\\u3066\\u307f\\u307e\\u3057\\u3087\\u3046\\uff1a\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### \\u3069\\u306e\\u3088\\u3046\\u306b\\u6a5f\\u80fd\\u3057\\u307e\\u3059\\u304b\\uff1f\\n\\nThe component will render like this:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nFor example, by default a `List` component will render a `<ul>` element. This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. But it also **comes with a small caveat!**\\n\\n### \\u30a4\\u30f3\\u30e9\\u30a4\\u30f3\\u306e\\u3042\\u308b\\u8b66\\u544a\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. For instance, if you want to create a custom `ListItem` that acts as a link, you could do the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f However, since we are using an inline function to change the rendered component, React will unmount the link every time `ListItemLink` is rendered. Not only will React update the DOM unnecessarily, the ripple effect of the `ListItem` will also not work correctly.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` will now always reference the same component.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. In this example, we don\\'t create any intermediary component:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### With TypeScript\\n\\nYou can find the details in the [TypeScript guide](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button (\\u30dc\\u30bf\\u30f3)\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List (\\u30ea\\u30b9\\u30c8)\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Caveat with refs\\n\\nThis section covers caveats when using a custom component as `children` or for the `component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible by using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and ref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from React in your console similar to:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their wrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nTo find out if the Material-UI component you\\'re using has this requirement, check out the the props API documentation for that component. If you need to forward refs the description will link to this section.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},sh0S:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return u}));var o=t(\"z3IF\"),r=t(\"mXGw\"),i=t.n(r),a=t(\"oNR1\"),s=t(\"USb2\"),c=t(\"r6IM\"),p=i.a.createElement,m=i.a.forwardRef((function(n,e){return p(s.a,Object(o.a)({ref:e,to:\"/getting-started/installation/\"},n))})),d=p(a.a,null,p(\"div\",null,p(c.a,{component:s.a,to:\"/\"},\"With prop forwarding\"),p(\"br\",null),p(c.a,{component:m},\"Without prop forwarding\")));function u(){return d}},svGV:function(n,e){n.exports=\"import React from 'react';\\nimport { MemoryRouter as Router } from 'react-router';\\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\\nimport Button from '@material-ui/core/Button';\\nimport { Omit } from '@material-ui/types';\\n\\nconst LinkBehavior = React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((props, ref) => (\\n  <RouterLink ref={ref} to=\\\"/getting-started/installation/\\\" {...props} />\\n));\\n\\nexport default function ButtonRouter() {\\n  return (\\n    <Router>\\n      <div>\\n        <Button color=\\\"primary\\\" component={RouterLink} to=\\\"/\\\">\\n          With prop forwarding\\n        </Button>\\n        <br />\\n        <Button color=\\\"primary\\\" component={LinkBehavior}>\\n          Without prop forwarding\\n        </Button>\\n      </div>\\n    </Router>\\n  );\\n}\\n\"},\"vR+x\":function(n,e,t){\"use strict\";var o=t(\"z3IF\"),r=t(\"2Fjn\"),i=t(\"mXGw\"),a=t(\"PDtE\"),s=t(\"XpU0\"),c=t(\"k+Qe\"),p=i.createElement,m=i.forwardRef((function(n,e){var t=n.classes,s=n.className,m=Object(r.a)(n,[\"classes\",\"className\"]),d=i.useContext(c.a);return p(\"div\",Object(o.a)({className:Object(a.a)(t.root,s,\"flex-start\"===d.alignItems&&t.alignItemsFlexStart),ref:e},m))}));e.a=Object(s.default)((function(n){return{root:{minWidth:56,color:n.palette.action.active,flexShrink:0,display:\"inline-flex\"},alignItemsFlexStart:{marginTop:8}}}),{name:\"MuiListItemIcon\"})(m)},ve3R:function(n,e,t){\"use strict\";var o=t(\"Fcif\");function r(n){return\"/\"===n.charAt(0)}function i(n,e){for(var t=e,o=t+1,r=n.length;o<r;t+=1,o+=1)n[t]=n[o];n.pop()}var a=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",t=n&&n.split(\"/\")||[],o=e&&e.split(\"/\")||[],a=n&&r(n),s=e&&r(e),c=a||s;if(n&&r(n)?o=t:t.length&&(o.pop(),o=o.concat(t)),!o.length)return\"/\";var p=void 0;if(o.length){var m=o[o.length-1];p=\".\"===m||\"..\"===m||\"\"===m}else p=!1;for(var d=0,u=o.length;u>=0;u--){var l=o[u];\".\"===l?i(o,u):\"..\"===l?(i(o,u),d++):d&&(i(o,u),d--)}if(!c)for(;d--;d)o.unshift(\"..\");!c||\"\"===o[0]||o[0]&&r(o[0])||o.unshift(\"\");var f=o.join(\"/\");return p&&\"/\"!==f.substr(-1)&&(f+=\"/\"),f},s=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&\"function\"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?\"symbol\":typeof n};var c=function n(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every((function(e,o){return n(e,t[o])}));var o=\"undefined\"===typeof e?\"undefined\":s(e);if(o!==(\"undefined\"===typeof t?\"undefined\":s(t)))return!1;if(\"object\"===o){var r=e.valueOf(),i=t.valueOf();if(r!==e||i!==t)return n(r,i);var a=Object.keys(e),c=Object.keys(t);return a.length===c.length&&a.every((function(o){return n(e[o],t[o])}))}return!1},p=t(\"+D+d\");function m(n){return\"/\"===n.charAt(0)?n:\"/\"+n}function d(n){return\"/\"===n.charAt(0)?n.substr(1):n}function u(n,e){return function(n,e){return new RegExp(\"^\"+e+\"(\\\\/|\\\\?|#|$)\",\"i\").test(n)}(n,e)?n.substr(e.length):n}function l(n){return\"/\"===n.charAt(n.length-1)?n.slice(0,-1):n}function f(n){var e=n.pathname,t=n.search,o=n.hash,r=e||\"/\";return t&&\"?\"!==t&&(r+=\"?\"===t.charAt(0)?t:\"?\"+t),o&&\"#\"!==o&&(r+=\"#\"===o.charAt(0)?o:\"#\"+o),r}function h(n,e,t,r){var i;\"string\"===typeof n?(i=function(n){var e=n||\"/\",t=\"\",o=\"\",r=e.indexOf(\"#\");-1!==r&&(o=e.substr(r),e=e.substr(0,r));var i=e.indexOf(\"?\");return-1!==i&&(t=e.substr(i),e=e.substr(0,i)),{pathname:e,search:\"?\"===t?\"\":t,hash:\"#\"===o?\"\":o}}(n)).state=e:(void 0===(i=Object(o.a)({},n)).pathname&&(i.pathname=\"\"),i.search?\"?\"!==i.search.charAt(0)&&(i.search=\"?\"+i.search):i.search=\"\",i.hash?\"#\"!==i.hash.charAt(0)&&(i.hash=\"#\"+i.hash):i.hash=\"\",void 0!==e&&void 0===i.state&&(i.state=e));try{i.pathname=decodeURI(i.pathname)}catch(s){throw s instanceof URIError?new URIError('Pathname \"'+i.pathname+'\" could not be decoded. This is likely caused by an invalid percent-encoding.'):s}return t&&(i.key=t),r?i.pathname?\"/\"!==i.pathname.charAt(0)&&(i.pathname=a(i.pathname,r.pathname)):i.pathname=r.pathname:i.pathname||(i.pathname=\"/\"),i}function w(n,e){return n.pathname===e.pathname&&n.search===e.search&&n.hash===e.hash&&n.key===e.key&&c(n.state,e.state)}function y(){var n=null;var e=[];return{setPrompt:function(e){return n=e,function(){n===e&&(n=null)}},confirmTransitionTo:function(e,t,o,r){if(null!=n){var i=\"function\"===typeof n?n(e,t):n;\"string\"===typeof i?\"function\"===typeof o?o(i,r):r(!0):r(!1!==i)}else r(!0)},appendListener:function(n){var t=!0;function o(){t&&n.apply(void 0,arguments)}return e.push(o),function(){t=!1,e=e.filter((function(n){return n!==o}))}},notifyListeners:function(){for(var n=arguments.length,t=new Array(n),o=0;o<n;o++)t[o]=arguments[o];e.forEach((function(n){return n.apply(void 0,t)}))}}}t.d(e,\"a\",(function(){return I})),t.d(e,\"b\",(function(){return x})),t.d(e,\"d\",(function(){return j})),t.d(e,\"c\",(function(){return h})),t.d(e,\"f\",(function(){return w})),t.d(e,\"e\",(function(){return f}));var g=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function v(n,e){e(window.confirm(n))}function L(){try{return window.history.state||{}}catch(n){return{}}}function I(n){void 0===n&&(n={}),g||Object(p.a)(!1);var e=window.history,t=function(){var n=window.navigator.userAgent;return(-1===n.indexOf(\"Android 2.\")&&-1===n.indexOf(\"Android 4.0\")||-1===n.indexOf(\"Mobile Safari\")||-1!==n.indexOf(\"Chrome\")||-1!==n.indexOf(\"Windows Phone\"))&&(window.history&&\"pushState\"in window.history)}(),r=!(-1===window.navigator.userAgent.indexOf(\"Trident\")),i=n,a=i.forceRefresh,s=void 0!==a&&a,c=i.getUserConfirmation,d=void 0===c?v:c,w=i.keyLength,I=void 0===w?6:w,R=n.basename?l(m(n.basename)):\"\";function b(n){var e=n||{},t=e.key,o=e.state,r=window.location,i=r.pathname+r.search+r.hash;return R&&(i=u(i,R)),h(i,o,t)}function k(){return Math.random().toString(36).substr(2,I)}var x=y();function T(n){Object(o.a)(W,n),W.length=e.length,x.notifyListeners(W.location,W.action)}function j(n){(function(n){void 0===n.state&&navigator.userAgent.indexOf(\"CriOS\")})(n)||O(b(n.state))}function M(){O(b(L()))}var C=!1;function O(n){if(C)C=!1,T();else{x.confirmTransitionTo(n,\"POP\",d,(function(e){e?T({action:\"POP\",location:n}):function(n){var e=W.location,t=D.indexOf(e.key);-1===t&&(t=0);var o=D.indexOf(n.key);-1===o&&(o=0);var r=t-o;r&&(C=!0,B(r))}(n)}))}}var S=b(L()),D=[S.key];function P(n){return R+f(n)}function B(n){e.go(n)}var N=0;function E(n){1===(N+=n)&&1===n?(window.addEventListener(\"popstate\",j),r&&window.addEventListener(\"hashchange\",M)):0===N&&(window.removeEventListener(\"popstate\",j),r&&window.removeEventListener(\"hashchange\",M))}var U=!1;var W={length:e.length,action:\"POP\",location:S,createHref:P,push:function(n,o){var r=h(n,o,k(),W.location);x.confirmTransitionTo(r,\"PUSH\",d,(function(n){if(n){var o=P(r),i=r.key,a=r.state;if(t)if(e.pushState({key:i,state:a},null,o),s)window.location.href=o;else{var c=D.indexOf(W.location.key),p=D.slice(0,-1===c?0:c+1);p.push(r.key),D=p,T({action:\"PUSH\",location:r})}else window.location.href=o}}))},replace:function(n,o){var r=h(n,o,k(),W.location);x.confirmTransitionTo(r,\"REPLACE\",d,(function(n){if(n){var o=P(r),i=r.key,a=r.state;if(t)if(e.replaceState({key:i,state:a},null,o),s)window.location.replace(o);else{var c=D.indexOf(W.location.key);-1!==c&&(D[c]=r.key),T({action:\"REPLACE\",location:r})}else window.location.replace(o)}}))},go:B,goBack:function(){B(-1)},goForward:function(){B(1)},block:function(n){void 0===n&&(n=!1);var e=x.setPrompt(n);return U||(E(1),U=!0),function(){return U&&(U=!1,E(-1)),e()}},listen:function(n){var e=x.appendListener(n);return E(1),function(){E(-1),e()}}};return W}var R={hashbang:{encodePath:function(n){return\"!\"===n.charAt(0)?n:\"!/\"+d(n)},decodePath:function(n){return\"!\"===n.charAt(0)?n.substr(1):n}},noslash:{encodePath:d,decodePath:m},slash:{encodePath:m,decodePath:m}};function b(){var n=window.location.href,e=n.indexOf(\"#\");return-1===e?\"\":n.substring(e+1)}function k(n){var e=window.location.href.indexOf(\"#\");window.location.replace(window.location.href.slice(0,e>=0?e:0)+\"#\"+n)}function x(n){void 0===n&&(n={}),g||Object(p.a)(!1);var e=window.history,t=(window.navigator.userAgent.indexOf(\"Firefox\"),n),r=t.getUserConfirmation,i=void 0===r?v:r,a=t.hashType,s=void 0===a?\"slash\":a,c=n.basename?l(m(n.basename)):\"\",d=R[s],L=d.encodePath,I=d.decodePath;function x(){var n=I(b());return c&&(n=u(n,c)),h(n)}var T=y();function j(n){Object(o.a)(A,n),A.length=e.length,T.notifyListeners(A.location,A.action)}var M=!1,C=null;function O(){var n=b(),e=L(n);if(n!==e)k(e);else{var t=x(),o=A.location;if(!M&&w(o,t))return;if(C===f(t))return;C=null,function(n){if(M)M=!1,j();else{T.confirmTransitionTo(n,\"POP\",i,(function(e){e?j({action:\"POP\",location:n}):function(n){var e=A.location,t=B.lastIndexOf(f(e));-1===t&&(t=0);var o=B.lastIndexOf(f(n));-1===o&&(o=0);var r=t-o;r&&(M=!0,N(r))}(n)}))}}(t)}}var S=b(),D=L(S);S!==D&&k(D);var P=x(),B=[f(P)];function N(n){e.go(n)}var E=0;function U(n){1===(E+=n)&&1===n?window.addEventListener(\"hashchange\",O):0===E&&window.removeEventListener(\"hashchange\",O)}var W=!1;var A={length:e.length,action:\"POP\",location:P,createHref:function(n){return\"#\"+L(c+f(n))},push:function(n,e){var t=h(n,void 0,void 0,A.location);T.confirmTransitionTo(t,\"PUSH\",i,(function(n){if(n){var e=f(t),o=L(c+e);if(b()!==o){C=e,function(n){window.location.hash=n}(o);var r=B.lastIndexOf(f(A.location)),i=B.slice(0,-1===r?0:r+1);i.push(e),B=i,j({action:\"PUSH\",location:t})}else j()}}))},replace:function(n,e){var t=h(n,void 0,void 0,A.location);T.confirmTransitionTo(t,\"REPLACE\",i,(function(n){if(n){var e=f(t),o=L(c+e);b()!==o&&(C=e,k(o));var r=B.indexOf(f(A.location));-1!==r&&(B[r]=e),j({action:\"REPLACE\",location:t})}}))},go:N,goBack:function(){N(-1)},goForward:function(){N(1)},block:function(n){void 0===n&&(n=!1);var e=T.setPrompt(n);return W||(U(1),W=!0),function(){return W&&(W=!1,U(-1)),e()}},listen:function(n){var e=T.appendListener(n);return U(1),function(){U(-1),e()}}};return A}function T(n,e,t){return Math.min(Math.max(n,e),t)}function j(n){void 0===n&&(n={});var e=n,t=e.getUserConfirmation,r=e.initialEntries,i=void 0===r?[\"/\"]:r,a=e.initialIndex,s=void 0===a?0:a,c=e.keyLength,p=void 0===c?6:c,m=y();function d(n){Object(o.a)(L,n),L.length=L.entries.length,m.notifyListeners(L.location,L.action)}function u(){return Math.random().toString(36).substr(2,p)}var l=T(s,0,i.length-1),w=i.map((function(n){return h(n,void 0,\"string\"===typeof n?u():n.key||u())})),g=f;function v(n){var e=T(L.index+n,0,L.entries.length-1),o=L.entries[e];m.confirmTransitionTo(o,\"POP\",t,(function(n){n?d({action:\"POP\",location:o,index:e}):d()}))}var L={length:w.length,action:\"POP\",location:w[l],index:l,entries:w,createHref:g,push:function(n,e){var o=h(n,e,u(),L.location);m.confirmTransitionTo(o,\"PUSH\",t,(function(n){if(n){var e=L.index+1,t=L.entries.slice(0);t.length>e?t.splice(e,t.length-e,o):t.push(o),d({action:\"PUSH\",location:o,index:e,entries:t})}}))},replace:function(n,e){var o=h(n,e,u(),L.location);m.confirmTransitionTo(o,\"REPLACE\",t,(function(n){n&&(L.entries[L.index]=o,d({action:\"REPLACE\",location:o}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(n){var e=L.index+n;return e>=0&&e<L.entries.length},block:function(n){return void 0===n&&(n=!1),m.setPrompt(n)},listen:function(n){return m.appendListener(n)}};return L}},y4on:function(n,e){n.exports='# Composici\\xf3n\\n\\n<p class=\"description\">Material-UI tries to make composition as easy as possible.</p>\\n\\n## Wrapping components\\n\\nIn order to provide the maximum flexibility and performance, we need a way to know the nature of the child elements a component receives. To solve this problem we tag some of the components with a `muiName` static property when needed.\\n\\nYou may, however, need to wrap a component in order to enhance it, which can conflict with the `muiName` solution. If you wrap a component, verify if that component has this static property set.\\n\\nIf you encounter this issue, you need to use the same tag for your wrapping component that is used with the wrapped component. In addition, you should forward the properties, as the parent component may need to control the wrapped components props.\\n\\nLet\\'s see an example:\\n\\n```jsx\\nconst WrappedIcon = props => <Icon {...props} />;\\nWrappedIcon.muiName = Icon.muiName;\\n```\\n\\n{{\"demo\": \"pages/guides/composition/Composition.js\"}}\\n\\n## Component prop\\n\\nMaterial-UI allows you to change the root element that will be rendered via a prop called `component`.\\n\\n### How does it work?\\n\\nThe component will render like this:\\n\\n```js\\nreturn React.createElement(props.component, props)\\n```\\n\\nFor example, by default a `List` component will render a `<ul>` element. This can be changed by passing a [React component](https://reactjs.org/docs/components-and-props.html#function-and-class-components) to the `component` prop. The following example will render the `List` component with a `<nav>` element as root element instead:\\n\\n```jsx\\n<List component=\"nav\">\\n  <ListItem button>\\n    <ListItemText primary=\"Trash\" />\\n  </ListItem>\\n  <ListItem button>\\n    <ListItemText primary=\"Spam\" />\\n  </ListItem>\\n</List>\\n```\\n\\nThis pattern is very powerful and allows for great flexibility, as well as a way to interoperate with other libraries, such as your favorite routing or forms library. But it also **comes with a small caveat!**\\n\\n### Caveat with inlining\\n\\nUsing an inline function as an argument for the `component` prop may result in **unexpected unmounting**, since a new component is passed every time React renders. For instance, if you want to create a custom `ListItem` that acts as a link, you could do the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  return (\\n    <li>\\n      <ListItem button component={props => <Link to={to} {...props} />}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n\\u26a0\\ufe0f However, since we are using an inline function to change the rendered component, React will unmount the link every time `ListItemLink` is rendered. Not only will React update the DOM unnecessarily, the ripple effect of the `ListItem` will also not work correctly.\\n\\nThe solution is simple: **avoid inline functions and pass a static component to the `component` prop** instead. Let\\'s change the `ListItemLink` to the following:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\nfunction ListItemLink(props) {\\n  const { icon, primary, to } = props;\\n\\n  const renderLink = React.useMemo(\\n    () =>\\n      React.forwardRef((linkProps, ref) => (\\n        <Link ref={ref} to={to} {...linkProps} />\\n      )),\\n    [to],\\n  );\\n\\n  return (\\n    <li>\\n      <ListItem button component={renderLink}>\\n        <ListItemIcon>{icon}</ListItemIcon>\\n        <ListItemText primary={primary} />\\n      </ListItem>\\n    </li>\\n  );\\n}\\n```\\n\\n`renderLink` will now always reference the same component.\\n\\n### Caveat with prop forwarding\\n\\nYou can take advantage of the prop forwarding to simplify the code. In this example, we don\\'t create any intermediary component:\\n\\n```jsx\\nimport { Link } from \\'react-router-dom\\';\\n\\n<ListItem button component={Link} to=\"/\">\\n```\\n\\n\\u26a0\\ufe0f However, this strategy suffers from a limitation: prop collisions. The component providing the `component` prop (e.g. ListItem) might not forward all the props (for example dense) to the root element.\\n\\n### With TypeScript\\n\\nYou can find the details in the [TypeScript guide](/guides/typescript/#usage-of-component-prop).\\n\\n## Routing libraries\\n\\nThe integration with third-party routing libraries is achieved with the `component` prop. The behavior is identical to the description of the prop above. Here are a few demos with [react-router-dom](https://github.com/ReactTraining/react-router). It covers the Button, Link, and List components, you should be able to apply the same strategy with all the components.\\n\\n### Button (bot\\xf3n)\\n\\n{{\"demo\": \"pages/guides/composition/ButtonRouter.js\"}}\\n\\n### Link\\n\\n{{\"demo\": \"pages/guides/composition/LinkRouter.js\"}}\\n\\n### List\\n\\n{{\"demo\": \"pages/guides/composition/ListRouter.js\"}}\\n\\n## Caveat with refs\\n\\nThis section covers caveats when using a custom component as `children` or for the `component` prop.\\n\\nSome of the components need access to the DOM node. This was previously possible by using `ReactDOM.findDOMNode`. This function is deprecated in favor of `ref` and ref forwarding. However, only the following component types can be given a `ref`:\\n\\n- Any Material-UI component\\n- class components i.e. `React.Component` or `React.PureComponent`\\n- DOM (or host) components e.g. `div` or `button`\\n- [React.forwardRef components](https://reactjs.org/docs/react-api.html#reactforwardref)\\n- [React.lazy components](https://reactjs.org/docs/react-api.html#reactlazy)\\n- [React.memo components](https://reactjs.org/docs/react-api.html#reactmemo)\\n\\nIf you don\\'t use one of the above types when using your components in conjunction with Material-UI, you might see a warning from React in your console similar to:\\n\\n> Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\\n\\nBe aware that you will still get this warning for `lazy` and `memo` components if their wrapped component can\\'t hold a ref.\\n\\nIn some instances an additional warning is issued to help with debugging, similar to:\\n\\n> Invalid prop `component` supplied to `ComponentName`. Expected an element type that can hold a ref.\\n\\nOnly the two most common use cases are covered. For more information see [this section in the official React docs](https://reactjs.org/docs/forwarding-refs.html).\\n\\n```diff\\n- const MyButton = props => <div role=\"button\" {...props} />;\\n+ const MyButton = React.forwardRef((props, ref) => <div role=\"button\" {...props} ref={ref} />);\\n<Button component={MyButton} />;\\n```\\n\\n```diff\\n- const SomeContent = props => <div {...props}>Hello, World!</div>;\\n+ const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\\n<Tooltip title=\"Hello, again.\"><SomeContent /></Tooltip>;\\n```\\n\\nTo find out if the Material-UI component you\\'re using has this requirement, check out the the props API documentation for that component. If you need to forward refs the description will link to this section.\\n\\n### Caveat with StrictMode\\n\\nIf you use class components for the cases described above you will still see warnings in `React.StrictMode`. `ReactDOM.findDOMNode` is used internally for backwards compatibility. You can use `React.forwardRef` and a designated prop in your class component to forward the `ref` to a DOM component. Doing so should not trigger any more warnings related to the deprecation of `ReactDOM.findDOMNode`.\\n\\n```diff\\nclass Component extends React.Component {\\n  render() {\\n-   const { props } = this;\\n+   const { forwardedRef, ...props } = this.props;\\n    return <div {...props} ref={forwardedRef} />;\\n  }\\n}\\n\\n-export default Component;\\n+export default React.forwardRef((props, ref) => <Component {...props} forwardedRef={ref} />);\\n```'},ylK1:function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",(function(){return m}));var o=t(\"mXGw\"),r=t.n(o),i=t(\"e+1t\"),a=r.a.createElement,s=t(\"4FVg\"),c=t(\"QN+/\"),p=a(i.a,{req:s,reqSource:c,reqPrefix:\"pages/guides/composition\"});function m(){return p}}},[[\"Wcwt\",0,1]]]);"}