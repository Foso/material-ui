{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{\"04LY\":function(e,n){e.exports=\"import React from 'react';\\nimport clsx from 'clsx';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\nimport { green } from '@material-ui/core/colors';\\nimport Button from '@material-ui/core/Button';\\nimport Fab from '@material-ui/core/Fab';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport SaveIcon from '@material-ui/icons/Save';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    alignItems: 'center',\\n  },\\n  wrapper: {\\n    margin: theme.spacing(1),\\n    position: 'relative',\\n  },\\n  buttonSuccess: {\\n    backgroundColor: green[500],\\n    '&:hover': {\\n      backgroundColor: green[700],\\n    },\\n  },\\n  fabProgress: {\\n    color: green[500],\\n    position: 'absolute',\\n    top: -6,\\n    left: -6,\\n    zIndex: 1,\\n  },\\n  buttonProgress: {\\n    color: green[500],\\n    position: 'absolute',\\n    top: '50%',\\n    left: '50%',\\n    marginTop: -12,\\n    marginLeft: -12,\\n  },\\n}));\\n\\nexport default function CircularIntegration() {\\n  const classes = useStyles();\\n  const [loading, setLoading] = React.useState(false);\\n  const [success, setSuccess] = React.useState(false);\\n  const timer = React.useRef();\\n\\n  const buttonClassname = clsx({\\n    [classes.buttonSuccess]: success,\\n  });\\n\\n  React.useEffect(() => {\\n    return () => {\\n      clearTimeout(timer.current);\\n    };\\n  }, []);\\n\\n  const handleButtonClick = () => {\\n    if (!loading) {\\n      setSuccess(false);\\n      setLoading(true);\\n      timer.current = setTimeout(() => {\\n        setSuccess(true);\\n        setLoading(false);\\n      }, 2000);\\n    }\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <div className={classes.wrapper}>\\n        <Fab\\n          aria-label=\\\"save\\\"\\n          color=\\\"primary\\\"\\n          className={buttonClassname}\\n          onClick={handleButtonClick}\\n        >\\n          {success ? <CheckIcon /> : <SaveIcon />}\\n        </Fab>\\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\\n      </div>\\n      <div className={classes.wrapper}>\\n        <Button\\n          variant=\\\"contained\\\"\\n          color=\\\"primary\\\"\\n          className={buttonClassname}\\n          disabled={loading}\\n          onClick={handleButtonClick}\\n        >\\n          Accept terms\\n        </Button>\\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\\n      </div>\\n    </div>\\n  );\\n}\\n\"},\"20Qb\":function(e,n){e.exports='---\\ntitle: Circular Progress, Linear Progress React-Komponente\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Fortschritt (Progress)\\n\\n<p class=\"description\">Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.</p>\\n\\n[Fortschrittsanzeigen](https://material.io/design/components/progress-indicators.html) informieren Benutzer \\xfcber den Status laufender Prozesse, z. B. Laden einer App, Senden eines Formulars oder Speichern von Updates. Sie kommunizieren den Status der App und zeigen verf\\xfcgbare Aktionen an, beispielsweise, ob Benutzer vom aktuellen Bildschirm weg navigieren k\\xf6nnen.\\n\\n**Bestimmte** Indikatoren zeigen an, wie lange eine Operation dauert.\\n\\n**Unbestimmt** Indikatoren visualisieren eine nicht angegebene Wartezeit.\\n\\n#### Fortschritt als Gruppe\\n\\nWenn Sie den Fortschritt f\\xfcr eine Folge von Prozessen anzeigen, geben Sie den Gesamtfortschritt und nicht den Fortschritt der einzelnen Aktivit\\xe4ten an.\\n\\n## Kreisf\\xf6rmig\\n\\n[Zirkul\\xe4rer Fortschritt](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) unterst\\xfctzt sowohl bestimmte als auch unbestimmte Prozesse.\\n\\n- **Bestimmte** zirkul\\xe4re Fortschritte f\\xfcllen die unsichtbare, kreisf\\xf6rmige Spur mit Farbe, wenn sich der Indikator von 0 bis 360 Grad bewegt.\\n- **Unbestimmte** zirkul\\xe4ree Fortschritte vergr\\xf6\\xdfern und verkleinern sich, w\\xe4hrend sie sich entlang der unsichtbaren Spur bewegen.\\n\\n### Zirkular Unbestimmt\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Interaktive Integration\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Zirkular Bestimmt\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Zirkular Statisch\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\n[Linearer Fortschritt](https://material.io/design/components/progress-indicators.html#linear-progress-indicators) Indikator.\\n\\n### Linear Unbestimmt\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Bestimmt\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Linearer Puffer\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Linear Abfrage\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Nicht-standardm\\xe4\\xdfige Bereiche\\n\\nDie Fortschrittskomponenten akzeptieren einen Wert im Bereich von 0 - 100. Dies vereinfacht die Benutzer von Bildschirmleseprogrammen, wenn dies die voreingestellten Min / Max-Werte sind. Manchmal arbeiten Sie jedoch mit einer Datenquelle, bei der die Werte au\\xdferhalb dieses Bereichs liegen. So k\\xf6nnen Sie einen Wert in einem beliebigen Bereich auf eine Skala von 0 - 100 leicht umwandeln:\\n\\n```jsx\\n// MIN = Minimaler erwarteter Wert\\n// MAX = Maximaler erwarteter Wert\\n// Funktion zur Normalisierung der Werte (MIN / MAX kann integriert werden)\\nconst normalize = Wert => (Wert - MIN) * 100 / (MAX - MIN.));\\n\\n// Beispielkomponente, die an der Stelle des Renderns die Funktion \"normalise\" verwendet.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Individueller Fortschritt\\n\\nHier sind einige Beispiele, wie man die Komponente anpassen kann. Mehr dazu erfahren Sie auf der [\\xdcberschreibungsdokumentationsseite](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Erscheinung verz\\xf6gern\\n\\nEs gibt [3 wichtige Grenzwerte](https://www.nngroup.com/articles/response-times-3-important-limits/), um die Reaktionszeit zu kennen. Der Ripple Effekt der `ButtonBase` Komponente stellt sicher, dass der Benutzer das Gef\\xfchl hat, dass das System sofort reagiert. Normalerweise ist keine spezielle R\\xfcckmeldung bei Verz\\xf6gerungen von mehr als 0,1 Sekunden und weniger als 1,0 Sekunden erforderlich. Nach 1,0 Sekund k\\xf6nnen Sie einen Fortschritt anzeigen, um den Gedankenfluss des Benutzers nicht zu unterbrechen.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## Einschr\\xe4nkungen\\n\\nBei starker Belastung verlieren Sie m\\xf6glicherweise die Strich-Animation oder sehen zuf\\xe4llige CircularProgress-Ringbreiten. Sie sollten prozessorintensive Vorg\\xe4nge in einem Web-Worker oder in Batches ausf\\xfchren, um den Haupt-Rendering-Thread nicht zu blockieren.\\n\\n![schwere Last](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue. See [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},\"26xi\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return l}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"EseM\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}}}));function l(){var e=c(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){if(100===e)return 0;var n=10*Math.random();return Math.min(e+n,100)}))}),500);return function(){clearInterval(e)}}),[]),i(\"div\",{className:e.root},i(o.a,{variant:\"determinate\",value:r}),i(o.a,{variant:\"determinate\",value:r,color:\"secondary\"}))}},\"3enc\":function(e,n){e.exports=\"import React from 'react';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nexport default function CircularUnderLoad() {\\n  return <CircularProgress disableShrink />;\\n}\\n\"},\"4BRv\":function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      display: 'flex',\\n      '& > * + *': {\\n        marginLeft: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function CircularDeterminate() {\\n  const classes = useStyles();\\n  const [progress, setProgress] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function tick() {\\n      // reset when reaching 100%\\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\\n    }\\n\\n    const timer = setInterval(tick, 20);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress variant=\\\"determinate\\\" value={progress} />\\n      <CircularProgress variant=\\\"determinate\\\" value={progress} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},\"4bna\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return i}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"IrXQ\"),o=(0,a.a.createElement)(s.a,{disableShrink:!0});function i(){return o}},\"4phB\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return d}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"EseM\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}})})),u=c(i.a,{variant:\"query\"}),m=c(i.a,{variant:\"query\",color:\"secondary\"});function d(){var e=l();return c(\"div\",{className:e.root},u,m)}},\"4qVn\":function(e,n){e.exports='import React from \\'react\\';\\nimport { makeStyles } from \\'@material-ui/core/styles\\';\\nimport CircularProgress from \\'@material-ui/core/CircularProgress\\';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: \\'flex\\',\\n    \\'& > * + *\\': {\\n      marginLeft: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function CircularStatic() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function progress() {\\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\\n    }\\n\\n    const timer = setInterval(progress, 1000);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress variant=\"static\" value={5} />\\n      <CircularProgress variant=\"static\" value={25} />\\n      <CircularProgress variant=\"static\" value={50} />\\n      <CircularProgress variant=\"static\" value={75} />\\n      <CircularProgress variant=\"static\" value={100} />\\n      <CircularProgress variant=\"static\" value={completed} />\\n    </div>\\n  );\\n}\\n'},\"5RFF\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return i}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"IrXQ\"),o=(0,a.a.createElement)(s.a,{disableShrink:!0});function i(){return o}},\"5md1\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return b}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"PDtE\"),o=r(\"yZEQ\"),i=r(\"WLtd\"),c=r(\"IrXQ\"),l=r(\"FJkE\"),u=r(\"O8uh\"),m=r(\"C+rX\"),d=r(\"XSg6\"),p=r(\"hfBD\"),g=a.a.createElement,f=Object(o.a)((function(e){return Object(i.a)({root:{display:\"flex\",alignItems:\"center\"},wrapper:{margin:e.spacing(1),position:\"relative\"},buttonSuccess:{backgroundColor:l.a[500],\"&:hover\":{backgroundColor:l.a[700]}},fabProgress:{color:l.a[500],position:\"absolute\",top:-6,left:-6,zIndex:1},buttonProgress:{color:l.a[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}})})),h=g(d.a,null),v=g(p.a,null);function b(){var e=f(),n=a.a.useState(!1),r=n[0],t=n[1],o=a.a.useState(!1),i=o[0],l=o[1],d=a.a.useRef(),p=Object(s.a)(i&&e.buttonSuccess);a.a.useEffect((function(){return function(){clearTimeout(d.current)}}),[]);var b=function(){r||(l(!1),t(!0),d.current=setTimeout((function(){l(!0),t(!1)}),2e3))};return g(\"div\",{className:e.root},g(\"div\",{className:e.wrapper},g(m.a,{\"aria-label\":\"save\",color:\"primary\",className:p,onClick:b},i?h:v),r&&g(c.a,{size:68,className:e.fabProgress})),g(\"div\",{className:e.wrapper},g(u.a,{variant:\"contained\",color:\"primary\",className:p,disabled:r,onClick:b},\"Accept terms\"),r&&g(c.a,{size:24,className:e.buttonProgress})))}},\"5oT3\":function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/components/progress\",function(){return r(\"vT9k\")}])},\"7aNm\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return u}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"EseM\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}})}));function u(){var e=l(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){if(100===e)return 0;var n=10*Math.random();return Math.min(e+n,100)}))}),500);return function(){clearInterval(e)}}),[]),c(\"div\",{className:e.root},c(i.a,{variant:\"determinate\",value:r}),c(i.a,{variant:\"determinate\",value:r,color:\"secondary\"}))}},\"9ecH\":function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      display: 'flex',\\n      '& > * + *': {\\n        marginLeft: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function CircularIndeterminate() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress />\\n      <CircularProgress color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},BPUP:function(e,n,r){var t={\"./CircularDeterminate.js\":\"lJvQ\",\"./CircularDeterminate.tsx\":\"EDr+\",\"./CircularIndeterminate.js\":\"GCSg\",\"./CircularIndeterminate.tsx\":\"qpSO\",\"./CircularIntegration.js\":\"QcnO\",\"./CircularIntegration.tsx\":\"5md1\",\"./CircularStatic.js\":\"Pnm9\",\"./CircularStatic.tsx\":\"gb98\",\"./CircularUnderLoad.js\":\"4bna\",\"./CircularUnderLoad.tsx\":\"5RFF\",\"./CustomizedProgressBars.js\":\"ios+\",\"./CustomizedProgressBars.tsx\":\"fIoz\",\"./DelayingAppearance.js\":\"v3SC\",\"./DelayingAppearance.tsx\":\"tjOX\",\"./LinearBuffer.js\":\"D3vJ\",\"./LinearBuffer.tsx\":\"OVBg\",\"./LinearDeterminate.js\":\"26xi\",\"./LinearDeterminate.tsx\":\"7aNm\",\"./LinearIndeterminate.js\":\"oskI\",\"./LinearIndeterminate.tsx\":\"cidO\",\"./LinearQuery.js\":\"GWDe\",\"./LinearQuery.tsx\":\"4phB\",\"./progress-aa.md\":\"Kdsp\",\"./progress-de.md\":\"20Qb\",\"./progress-es.md\":\"x8B2\",\"./progress-fr.md\":\"HBr4\",\"./progress-ja.md\":\"faNN\",\"./progress-pt.md\":\"NKsB\",\"./progress-ru.md\":\"MYKc\",\"./progress-zh.md\":\"kw1K\",\"./progress.md\":\"fzfs\"};function a(e){var n=s(e);return r(n)}function s(e){if(!r.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=s,e.exports=a,a.id=\"BPUP\"},\"C+rX\":function(e,n,r){\"use strict\";var t=r(\"z3IF\"),a=r(\"2Fjn\"),s=r(\"bZJ2\"),o=r(\"mXGw\"),i=r(\"PDtE\"),c=r(\"XpU0\"),l=r(\"7QLS\"),u=r(\"rKPb\"),m=o.createElement,d=o.forwardRef((function(e,n){var r=e.children,s=e.classes,o=e.className,c=e.color,d=void 0===c?\"default\":c,p=e.component,g=void 0===p?\"button\":p,f=e.disabled,h=void 0!==f&&f,v=e.disableFocusRipple,b=void 0!==v&&v,y=e.focusVisibleClassName,C=e.size,w=void 0===C?\"large\":C,k=e.variant,S=void 0===k?\"round\":k,P=Object(a.a)(e,[\"children\",\"classes\",\"className\",\"color\",\"component\",\"disabled\",\"disableFocusRipple\",\"focusVisibleClassName\",\"size\",\"variant\"]);return m(l.a,Object(t.a)({className:Object(i.a)(s.root,o,\"round\"!==S&&s.extended,\"large\"!==w&&s[\"size\".concat(Object(u.a)(w))],h&&s.disabled,{primary:s.primary,secondary:s.secondary,inherit:s.colorInherit}[d]),component:g,disabled:h,focusRipple:!b,focusVisibleClassName:Object(i.a)(s.focusVisible,y),ref:n},P),m(\"span\",{className:s.label},r))}));n.a=Object(c.default)((function(e){return{root:Object(s.a)({},e.typography.button,{boxSizing:\"border-box\",minHeight:36,transition:e.transitions.create([\"background-color\",\"box-shadow\",\"border\"],{duration:e.transitions.duration.short}),borderRadius:\"50%\",padding:0,minWidth:0,width:56,height:56,boxShadow:e.shadows[6],\"&:active\":{boxShadow:e.shadows[12]},color:e.palette.getContrastText(e.palette.grey[300]),backgroundColor:e.palette.grey[300],\"&:hover\":{backgroundColor:e.palette.grey.A100,\"@media (hover: none)\":{backgroundColor:e.palette.grey[300]},\"&$disabled\":{backgroundColor:e.palette.action.disabledBackground},textDecoration:\"none\"},\"&$focusVisible\":{boxShadow:e.shadows[6]},\"&$disabled\":{color:e.palette.action.disabled,boxShadow:e.shadows[0],backgroundColor:e.palette.action.disabledBackground}}),label:{width:\"100%\",display:\"inherit\",alignItems:\"inherit\",justifyContent:\"inherit\"},primary:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,\"&:hover\":{backgroundColor:e.palette.primary.dark,\"@media (hover: none)\":{backgroundColor:e.palette.primary.main}}},secondary:{color:e.palette.secondary.contrastText,backgroundColor:e.palette.secondary.main,\"&:hover\":{backgroundColor:e.palette.secondary.dark,\"@media (hover: none)\":{backgroundColor:e.palette.secondary.main}}},extended:{borderRadius:24,padding:\"0 16px\",width:\"auto\",minHeight:\"auto\",minWidth:48,height:48,\"&$sizeSmall\":{width:\"auto\",padding:\"0 8px\",borderRadius:17,minWidth:34,height:34},\"&$sizeMedium\":{width:\"auto\",padding:\"0 16px\",borderRadius:20,minWidth:40,height:40}},focusVisible:{},disabled:{},colorInherit:{color:\"inherit\"},sizeSmall:{width:40,height:40},sizeMedium:{width:48,height:48}}}),{name:\"MuiFab\"})(d)},D3vJ:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return l}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"EseM\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}}}));function l(){var e=c(),n=a.a.useState(0),r=n[0],t=n[1],s=a.a.useState(10),l=s[0],u=s[1],m=a.a.useRef((function(){}));return a.a.useEffect((function(){m.current=function(){if(r>100)t(0),u(10);else{var e=10*Math.random(),n=10*Math.random();t(r+e),u(r+e+n)}}})),a.a.useEffect((function(){var e=setInterval((function(){m.current()}),500);return function(){clearInterval(e)}}),[]),i(\"div\",{className:e.root},i(o.a,{variant:\"buffer\",value:r,valueBuffer:l}),i(o.a,{variant:\"buffer\",value:r,valueBuffer:l,color:\"secondary\"}))}},DHF4:function(e,n){e.exports=\"import React from 'react';\\nimport { lighten, makeStyles, withStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst ColorCircularProgress = withStyles({\\n  root: {\\n    color: '#00695c',\\n  },\\n})(CircularProgress);\\n\\nconst ColorLinearProgress = withStyles({\\n  colorPrimary: {\\n    backgroundColor: '#b2dfdb',\\n  },\\n  barColorPrimary: {\\n    backgroundColor: '#00695c',\\n  },\\n})(LinearProgress);\\n\\nconst BorderLinearProgress = withStyles({\\n  root: {\\n    height: 10,\\n    backgroundColor: lighten('#ff6c5c', 0.5),\\n  },\\n  bar: {\\n    borderRadius: 20,\\n    backgroundColor: '#ff6c5c',\\n  },\\n})(LinearProgress);\\n\\n// Inspired by the Facebook spinners.\\nconst useStylesFacebook = makeStyles({\\n  root: {\\n    position: 'relative',\\n  },\\n  top: {\\n    color: '#eef3fd',\\n  },\\n  bottom: {\\n    color: '#6798e5',\\n    animationDuration: '550ms',\\n    position: 'absolute',\\n    left: 0,\\n  },\\n});\\n\\nfunction FacebookProgress(props) {\\n  const classes = useStylesFacebook();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress\\n        variant=\\\"determinate\\\"\\n        value={100}\\n        className={classes.top}\\n        size={24}\\n        thickness={4}\\n        {...props}\\n      />\\n      <CircularProgress\\n        variant=\\\"indeterminate\\\"\\n        disableShrink\\n        className={classes.bottom}\\n        size={24}\\n        thickness={4}\\n        {...props}\\n      />\\n    </div>\\n  );\\n}\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    flexGrow: 1,\\n  },\\n  margin: {\\n    margin: theme.spacing(1),\\n  },\\n}));\\n\\nexport default function CustomizedProgressBars() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <ColorCircularProgress size={30} thickness={5} />\\n      <ColorLinearProgress className={classes.margin} />\\n      <BorderLinearProgress\\n        className={classes.margin}\\n        variant=\\\"determinate\\\"\\n        color=\\\"secondary\\\"\\n        value={50}\\n      />\\n      <FacebookProgress />\\n    </div>\\n  );\\n}\\n\"},Dnhr:function(e,n){e.exports=\"import React from 'react';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nexport default function CircularUnderLoad() {\\n  return <CircularProgress disableShrink />;\\n}\\n\"},Dnxx:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    '& > * + *': {\\n      marginLeft: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function CircularIndeterminate() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress />\\n      <CircularProgress color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},\"EDr+\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return u}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"IrXQ\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}})}));function u(){var e=l(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){return e>=100?0:e+1}))}),20);return function(){clearInterval(e)}}),[]),c(\"div\",{className:e.root},c(i.a,{variant:\"determinate\",value:r}),c(i.a,{variant:\"determinate\",value:r,color:\"secondary\"}))}},EseM:function(e,n,r){\"use strict\";var t=r(\"z3IF\"),a=r(\"2Fjn\"),s=r(\"mXGw\"),o=r(\"PDtE\"),i=r(\"rKPb\"),c=r(\"XpU0\"),l=r(\"cYeA\"),u=r(\"LMpM\"),m=s.createElement,d=s.forwardRef((function(e,n){var r=e.classes,s=e.className,c=e.color,l=void 0===c?\"primary\":c,d=e.value,p=e.valueBuffer,g=e.variant,f=void 0===g?\"indeterminate\":g,h=Object(a.a)(e,[\"classes\",\"className\",\"color\",\"value\",\"valueBuffer\",\"variant\"]),v=Object(u.a)(),b={},y={bar1:{},bar2:{}};if(\"determinate\"===f||\"buffer\"===f)if(void 0!==d){b[\"aria-valuenow\"]=Math.round(d);var C=d-100;\"rtl\"===v.direction&&(C=-C),y.bar1.transform=\"translateX(\".concat(C,\"%)\")}else 0;if(\"buffer\"===f)if(void 0!==p){var w=(p||0)-100;\"rtl\"===v.direction&&(w=-w),y.bar2.transform=\"translateX(\".concat(w,\"%)\")}else 0;return m(\"div\",Object(t.a)({className:Object(o.a)(r.root,r[\"color\".concat(Object(i.a)(l))],s,{determinate:r.determinate,indeterminate:r.indeterminate,buffer:r.buffer,query:r.query}[f]),role:\"progressbar\"},b,{ref:n},h),\"buffer\"===f?m(\"div\",{className:Object(o.a)(r.dashed,r[\"dashedColor\".concat(Object(i.a)(l))])}):null,m(\"div\",{className:Object(o.a)(r.bar,r[\"barColor\".concat(Object(i.a)(l))],(\"indeterminate\"===f||\"query\"===f)&&r.bar1Indeterminate,{determinate:r.bar1Determinate,buffer:r.bar1Buffer}[f]),style:y.bar1}),\"determinate\"===f?null:m(\"div\",{className:Object(o.a)(r.bar,(\"indeterminate\"===f||\"query\"===f)&&r.bar2Indeterminate,\"buffer\"===f?[r[\"color\".concat(Object(i.a)(l))],r.bar2Buffer]:r[\"barColor\".concat(Object(i.a)(l))]),style:y.bar2}))}));n.a=Object(c.default)((function(e){var n=function(n){return\"light\"===e.palette.type?Object(l.lighten)(n,.62):Object(l.darken)(n,.5)},r=n(e.palette.primary.main),t=n(e.palette.secondary.main);return{root:{position:\"relative\",overflow:\"hidden\",height:4},colorPrimary:{backgroundColor:r},colorSecondary:{backgroundColor:t},determinate:{},indeterminate:{},buffer:{backgroundColor:\"transparent\"},query:{transform:\"rotate(180deg)\"},dashed:{position:\"absolute\",marginTop:0,height:\"100%\",width:\"100%\",animation:\"$buffer 3s infinite linear\"},dashedColorPrimary:{backgroundImage:\"radial-gradient(\".concat(r,\" 0%, \").concat(r,\" 16%, transparent 42%)\"),backgroundSize:\"10px 10px\",backgroundPosition:\"0px -23px\"},dashedColorSecondary:{backgroundImage:\"radial-gradient(\".concat(t,\" 0%, \").concat(t,\" 16%, transparent 42%)\"),backgroundSize:\"10px 10px\",backgroundPosition:\"0px -23px\"},bar:{width:\"100%\",position:\"absolute\",left:0,bottom:0,top:0,transition:\"transform 0.2s linear\",transformOrigin:\"left\"},barColorPrimary:{backgroundColor:e.palette.primary.main},barColorSecondary:{backgroundColor:e.palette.secondary.main},bar1Indeterminate:{width:\"auto\",animation:\"$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite\"},bar1Determinate:{transition:\"transform .\".concat(4,\"s linear\")},bar1Buffer:{zIndex:1,transition:\"transform .\".concat(4,\"s linear\")},bar2Indeterminate:{width:\"auto\",animation:\"$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite\"},bar2Buffer:{transition:\"transform .\".concat(4,\"s linear\")},\"@keyframes indeterminate1\":{\"0%\":{left:\"-35%\",right:\"100%\"},\"60%\":{left:\"100%\",right:\"-90%\"},\"100%\":{left:\"100%\",right:\"-90%\"}},\"@keyframes indeterminate2\":{\"0%\":{left:\"-200%\",right:\"100%\"},\"60%\":{left:\"107%\",right:\"-8%\"},\"100%\":{left:\"107%\",right:\"-8%\"}},\"@keyframes buffer\":{\"0%\":{opacity:1,backgroundPosition:\"0px -23px\"},\"50%\":{opacity:0,backgroundPosition:\"0px -23px\"},\"100%\":{opacity:1,backgroundPosition:\"-200px -23px\"}}}}),{name:\"MuiLinearProgress\"})(d)},GCSg:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return m}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"IrXQ\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}}})),l=i(o.a,null),u=i(o.a,{color:\"secondary\"});function m(){var e=c();return i(\"div\",{className:e.root},l,u)}},GJ34:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    '& > * + *': {\\n      marginTop: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function LinearIndeterminate() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress />\\n      <LinearProgress color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},GWDe:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return m}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"EseM\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}}})),l=i(o.a,{variant:\"query\"}),u=i(o.a,{variant:\"query\",color:\"secondary\"});function m(){var e=c();return i(\"div\",{className:e.root},l,u)}},HBr4:function(e,n){e.exports='---\\ntitle: Circular Progress, Linear Progress React component\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Barres de progression\\n\\n<p class=\"description\">Les indicateurs de progression, plus connus sous le nom de spinners, expriment un temps d\\'attente non sp\\xe9cifi\\xe9 ou affichent la dur\\xe9e d\\'un processus. L\\'animation fonctionne avec du CSS, pas de JavaScript.</p>\\n\\nLes [Indicateurs de progression](https://material.io/design/components/progress-indicators.html) informent les utilisateurs de l\\'\\xe9tat des processus en cours, tels que le chargement d\\'une application, la soumission d\\'un formulaire ou la progression des mises \\xe0 jour. Ils communiquent l\\'\\xe9tat d\\'une application et indiquent les actions disponibles, par exemple si les utilisateurs peuvent quitter l\\'\\xe9cran actuel.\\n\\nLes indicateurs **d\\xe9termin\\xe9s** indiquent la dur\\xe9e d\\'une op\\xe9ration.\\n\\nLes indicateurs **ind\\xe9termin\\xe9s** indiquent un temps d\\'attente non sp\\xe9cifi\\xe9.\\n\\n#### Barres de progression group\\xe9es\\n\\nLorsque vous affichez les progr\\xe8s d\\'une s\\xe9quence de processus, indiquez le progr\\xe8s global plut\\xf4t que les progr\\xe8s de chaque activit\\xe9.\\n\\n## Circular\\n\\nLes [progr\\xe8s circulaires](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) prennent en charge les processus \\xe0 la fois d\\xe9termin\\xe9s et ind\\xe9termin\\xe9s.\\n\\n- **Determinate** circular indicators fill the invisible, circular track with color, as the indicator moves from 0 to 360 degrees.\\n- **Indeterminate** circular indicators grow and shrink in size while moving along the invisible track.\\n\\n### Circular Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Interactive Integration\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular Determinate\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular Static\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\n[Linear progress](https://material.io/design/components/progress-indicators.html#linear-progress-indicators) indicators.\\n\\n### Linear Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Determinate\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Linear Buffer\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Linear Query\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Non-standard ranges\\n\\nThe progress components accept a value in the range 0 - 100. This simplifies things for screen-reader users, where these are the default min / max values. Sometimes, however, you might be working with a data source where the values fall outside this range. Here\\'s how you can easily transform a value in any range to a scale of 0 - 100:\\n\\n```jsx\\n// MIN = Minimum expected value\\n// MAX = Maximium expected value\\n// Function to normalise the values (MIN / MAX could be integrated)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Example component that utilizes the `normalise` function at the point of render.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Customized progress bars\\n\\nHere are some examples of customizing the component. Vous pouvez en savoir plus dans la [page de documentation des overrides](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Retarder l\\'apparition\\n\\nIl y a [3 limites importantes](https://www.nngroup.com/articles/response-times-3-important-limits/) \\xe0 conna\\xeetre sur les temps de r\\xe9ponse. The ripple effect of the `ButtonBase` component ensures that the user feels that the system is reacting instantaneously. Normally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second. After 1.0 second, you can display a loader to keep user\\'s flow of thought uninterrupted.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## Limites\\n\\nUnder heavy load, you might lose the stroke dash animation or see random CircularProgress ring widths. You should run processor intensive operations in a web worker or by batch in order not to block the main rendering thread.\\n\\n![heavy load](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue. See [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},HUsa:function(e,n){e.exports=\"import React from 'react';\\nimport { lighten, makeStyles, createStyles, withStyles, Theme } from '@material-ui/core/styles';\\nimport CircularProgress, { CircularProgressProps } from '@material-ui/core/CircularProgress';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst ColorCircularProgress = withStyles({\\n  root: {\\n    color: '#00695c',\\n  },\\n})(CircularProgress);\\n\\nconst ColorLinearProgress = withStyles({\\n  colorPrimary: {\\n    backgroundColor: '#b2dfdb',\\n  },\\n  barColorPrimary: {\\n    backgroundColor: '#00695c',\\n  },\\n})(LinearProgress);\\n\\nconst BorderLinearProgress = withStyles({\\n  root: {\\n    height: 10,\\n    backgroundColor: lighten('#ff6c5c', 0.5),\\n  },\\n  bar: {\\n    borderRadius: 20,\\n    backgroundColor: '#ff6c5c',\\n  },\\n})(LinearProgress);\\n\\n// Inspired by the Facebook spinners.\\nconst useStylesFacebook = makeStyles({\\n  root: {\\n    position: 'relative',\\n  },\\n  top: {\\n    color: '#eef3fd',\\n  },\\n  bottom: {\\n    color: '#6798e5',\\n    animationDuration: '550ms',\\n    position: 'absolute',\\n    left: 0,\\n  },\\n});\\n\\nfunction FacebookProgress(props: CircularProgressProps) {\\n  const classes = useStylesFacebook();\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress\\n        variant=\\\"determinate\\\"\\n        value={100}\\n        className={classes.top}\\n        size={24}\\n        thickness={4}\\n        {...props}\\n      />\\n      <CircularProgress\\n        variant=\\\"indeterminate\\\"\\n        disableShrink\\n        className={classes.bottom}\\n        size={24}\\n        thickness={4}\\n        {...props}\\n      />\\n    </div>\\n  );\\n}\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      flexGrow: 1,\\n    },\\n    margin: {\\n      margin: theme.spacing(1),\\n    },\\n  }),\\n);\\n\\nexport default function CustomizedProgressBars() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <ColorCircularProgress size={30} thickness={5} />\\n      <ColorLinearProgress className={classes.margin} />\\n      <BorderLinearProgress\\n        className={classes.margin}\\n        variant=\\\"determinate\\\"\\n        color=\\\"secondary\\\"\\n        value={50}\\n      />\\n      <FacebookProgress />\\n    </div>\\n  );\\n}\\n\"},IrXQ:function(e,n,r){\"use strict\";var t=r(\"z3IF\"),a=r(\"bZJ2\"),s=r(\"2Fjn\"),o=r(\"mXGw\"),i=r(\"PDtE\"),c=r(\"XpU0\"),l=r(\"rKPb\"),u=o.createElement;function m(e){var n,r,t;return n=e,r=0,t=1,e=(Math.min(Math.max(r,n),t)-r)/(t-r),e=(e-=1)*e*e+1}var d=o.forwardRef((function(e,n){var r,o=e.classes,c=e.className,d=e.color,p=void 0===d?\"primary\":d,g=e.disableShrink,f=void 0!==g&&g,h=e.size,v=void 0===h?40:h,b=e.style,y=e.thickness,C=void 0===y?3.6:y,w=e.value,k=void 0===w?0:w,S=e.variant,P=void 0===S?\"indeterminate\":S,L=Object(s.a)(e,[\"classes\",\"className\",\"color\",\"disableShrink\",\"size\",\"style\",\"thickness\",\"value\",\"variant\"]),x={},j={},I={};if(\"determinate\"===P||\"static\"===P){var N=2*Math.PI*((44-C)/2);x.strokeDasharray=N.toFixed(3),I[\"aria-valuenow\"]=Math.round(k),\"static\"===P?(x.strokeDashoffset=\"\".concat(((100-k)/100*N).toFixed(3),\"px\"),j.transform=\"rotate(-90deg)\"):(x.strokeDashoffset=\"\".concat((r=(100-k)/100,r*r*N).toFixed(3),\"px\"),j.transform=\"rotate(\".concat((270*m(k/70)).toFixed(3),\"deg)\"))}return u(\"div\",Object(t.a)({className:Object(i.a)(o.root,c,\"inherit\"!==p&&o[\"color\".concat(Object(l.a)(p))],{indeterminate:o.indeterminate,static:o.static}[P]),style:Object(a.a)({width:v,height:v},j,{},b),ref:n,role:\"progressbar\"},I,L),u(\"svg\",{className:o.svg,viewBox:\"\".concat(22,\" \").concat(22,\" \").concat(44,\" \").concat(44)},u(\"circle\",{className:Object(i.a)(o.circle,f&&o.circleDisableShrink,{indeterminate:o.circleIndeterminate,static:o.circleStatic}[P]),style:x,cx:44,cy:44,r:(44-C)/2,fill:\"none\",strokeWidth:C})))}));n.a=Object(c.default)((function(e){return{root:{display:\"inline-block\"},static:{transition:e.transitions.create(\"transform\")},indeterminate:{animation:\"$circular-rotate 1.4s linear infinite\"},colorPrimary:{color:e.palette.primary.main},colorSecondary:{color:e.palette.secondary.main},svg:{display:\"block\"},circle:{stroke:\"currentColor\"},circleStatic:{transition:e.transitions.create(\"stroke-dashoffset\")},circleIndeterminate:{animation:\"$circular-dash 1.4s ease-in-out infinite\",strokeDasharray:\"80px, 200px\",strokeDashoffset:\"0px\"},\"@keyframes circular-rotate\":{\"100%\":{transform:\"rotate(360deg)\"}},\"@keyframes circular-dash\":{\"0%\":{strokeDasharray:\"1px, 200px\",strokeDashoffset:\"0px\"},\"50%\":{strokeDasharray:\"100px, 200px\",strokeDashoffset:\"-15px\"},\"100%\":{strokeDasharray:\"100px, 200px\",strokeDashoffset:\"-125px\"}},circleDisableShrink:{animation:\"none\"}}}),{name:\"MuiCircularProgress\",flip:!1})(d)},Kdsp:function(e,n){e.exports='---\\ntitle: crwdns91310:0crwdne91310:0\\ncomponents: crwdns91312:0crwdne91312:0\\n---\\n\\n# crwdns91314:0crwdne91314:0\\n\\n<p class=\"description\">crwdns91316:0crwdne91316:0 crwdns91318:0crwdne91318:0</p>\\n\\ncrwdns91320:0crwdne91320:0 crwdns91322:0crwdne91322:0\\n\\ncrwdns91324:0crwdne91324:0\\n\\ncrwdns91326:0crwdne91326:0\\n\\n#### crwdns91328:0crwdne91328:0\\n\\ncrwdns91330:0crwdne91330:0\\n\\n## crwdns91332:0crwdne91332:0\\n\\ncrwdns91334:0crwdne91334:0\\n\\n- crwdns91336:0crwdne91336:0\\n- crwdns91338:0crwdne91338:0\\n\\n### crwdns91340:0crwdne91340:0\\n\\ncrwdns91342:0crwdne91342:0\\n\\n### crwdns91344:0crwdne91344:0\\n\\ncrwdns91346:0crwdne91346:0\\n\\n### crwdns91348:0crwdne91348:0\\n\\ncrwdns91350:0crwdne91350:0\\n\\n### crwdns91352:0crwdne91352:0\\n\\ncrwdns91354:0crwdne91354:0\\n\\n## crwdns91356:0crwdne91356:0\\n\\ncrwdns91358:0crwdne91358:0\\n\\n### crwdns91360:0crwdne91360:0\\n\\ncrwdns91362:0crwdne91362:0\\n\\n### crwdns91364:0crwdne91364:0\\n\\ncrwdns91366:0crwdne91366:0\\n\\n### crwdns91368:0crwdne91368:0\\n\\ncrwdns91370:0crwdne91370:0\\n\\n### crwdns91372:0crwdne91372:0\\n\\ncrwdns91374:0crwdne91374:0\\n\\n## crwdns91376:0crwdne91376:0\\n\\ncrwdns91378:0crwdne91378:0 crwdns91380:0crwdne91380:0 crwdns91382:0crwdne91382:0 crwdns91384:0crwdne91384:0\\n\\n```jsx\\ncrwdns91386:0crwdne91386:0\\ncrwdns91388:0crwdne91388:0\\n```\\n\\n## crwdns91390:0crwdne91390:0\\n\\ncrwdns91392:0crwdne91392:0 crwdns91394:0crwdne91394:0\\n\\ncrwdns104254:0crwdne104254:0\\n\\n## crwdns91398:0crwdne91398:0\\n\\ncrwdns91400:0crwdne91400:0 crwdns91402:0crwdne91402:0 crwdns91404:0crwdne91404:0 crwdns91406:0crwdne91406:0\\n\\ncrwdns91408:0crwdne91408:0\\n\\n## crwdns91410:0crwdne91410:0\\n\\ncrwdns91412:0crwdne91412:0 crwdns91414:0crwdne91414:0\\n\\n![crwdns91418:0crwdne91418:0](crwdns91416:0crwdne91416:0)\\n\\ncrwdns91420:0crwdne91420:0 crwdns91422:0crwdne91422:0\\n\\ncrwdns91424:0crwdne91424:0'},LIMm:function(e,n){e.exports='import React from \\'react\\';\\nimport { makeStyles, Theme, createStyles } from \\'@material-ui/core/styles\\';\\nimport CircularProgress from \\'@material-ui/core/CircularProgress\\';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      display: \\'flex\\',\\n      \\'& > * + *\\': {\\n        marginLeft: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function CircularStatic() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function progress() {\\n      setCompleted(prevCompleted => (prevCompleted >= 100 ? 0 : prevCompleted + 10));\\n    }\\n\\n    const timer = setInterval(progress, 1000);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress variant=\"static\" value={5} />\\n      <CircularProgress variant=\"static\" value={25} />\\n      <CircularProgress variant=\"static\" value={50} />\\n      <CircularProgress variant=\"static\" value={75} />\\n      <CircularProgress variant=\"static\" value={100} />\\n      <CircularProgress variant=\"static\" value={completed} />\\n    </div>\\n  );\\n}\\n'},MYKc:function(e,n){e.exports='---\\ntitle: Circular Progress, Linear Progress React component\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# \\u041f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\n\\n<p class=\"description\">Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.</p>\\n\\n[\\u0418\\u043d\\u0434\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\\u044b \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\u0430](https://material.io/design/components/progress-indicators.html) \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0438\\u0440\\u0443\\u044e\\u0442 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439 \\u043e \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0438 \\u0442\\u0435\\u043a\\u0443\\u0449\\u0438\\u0445 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441\\u043e\\u0432, \\u0442\\u0430\\u043a\\u0438\\u0445 \\u043a\\u0430\\u043a \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043a\\u0430 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f, \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043a\\u0430 \\u0444\\u043e\\u0440\\u043c\\u044b \\u0438\\u043b\\u0438 \\u0441\\u043e\\u0445\\u0440\\u0430\\u043d\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0431\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d\\u0438\\u0439. \\u041e\\u043d\\u0438 \\u0441\\u043e\\u043e\\u0431\\u0449\\u0430\\u044e\\u0442 \\u043e \\u0441\\u043e\\u0441\\u0442\\u043e\\u044f\\u043d\\u0438\\u0438 \\u043f\\u0440\\u0438\\u043b\\u043e\\u0436\\u0435\\u043d\\u0438\\u044f \\u0438 \\u0443\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u044e\\u0442 \\u0432\\u043e\\u0437\\u043c\\u043e\\u0436\\u043d\\u044b\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f, \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, \\u043c\\u043e\\u0433\\u0443\\u0442 \\u043b\\u0438 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0438 \\u0443\\u0445\\u043e\\u0434\\u0438\\u0442\\u044c \\u0441 \\u0442\\u0435\\u043a\\u0443\\u0449\\u0435\\u0433\\u043e \\u044d\\u043a\\u0440\\u0430\\u043d\\u0430.\\n\\n**\\u0414\\u0435\\u0442\\u0435\\u0440\\u043c\\u0435\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435** \\u0438\\u043d\\u0434\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\\u044b \\u043f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u044e\\u0442, \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0432\\u0440\\u0435\\u043c\\u0435\\u043d\\u0438 \\u0437\\u0430\\u0439\\u043c\\u0435\\u0442 \\u043e\\u043f\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f.\\n\\n**\\u041d\\u0435\\u0434\\u0435\\u0442\\u0435\\u0440\\u043c\\u0438\\u043d\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435** \\u0438\\u043d\\u0434\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\\u044b \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u044e\\u0442 \\u043d\\u0435\\u043e\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u043e\\u0435 \\u0432\\u0440\\u0435\\u043c\\u044f \\u043e\\u0436\\u0438\\u0434\\u0430\\u043d\\u0438\\u044f.\\n\\n#### \\u0413\\u0440\\u0443\\u043f\\u043f\\u043e\\u0432\\u043e\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\n\\n\\u041e\\u0442\\u043e\\u0431\\u0440\\u0430\\u0436\\u0430\\u044f \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441 \\u043f\\u043e\\u0441\\u043b\\u0435\\u0434\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u0441\\u0442\\u0438 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441\\u043e\\u0432, \\u0443\\u043a\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043e\\u0431\\u0449\\u0438\\u0439 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441, \\u0430 \\u043d\\u0435 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441 \\u043a\\u0430\\u0436\\u0434\\u043e\\u0433\\u043e \\u043e\\u0442\\u0434\\u0435\\u043b\\u044c\\u043d\\u043e\\u0433\\u043e \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f.\\n\\n## Circular\\n\\n[Circular progress](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) support both determinate and indeterminate processes.\\n\\n- **Determinate** circular indicators fill the invisible, circular track with color, as the indicator moves from 0 to 360 degrees.\\n- **Indeterminate** circular indicators grow and shrink in size while moving along the invisible track.\\n\\n### Circular Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Interactive Integration\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular Determinate\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular Static\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\n[Linear progress](https://material.io/design/components/progress-indicators.html#linear-progress-indicators) indicators.\\n\\n### Linear Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Determinate\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Linear Buffer\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Linear Query\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Non-standard ranges\\n\\n\\u041a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u044b \\u043f\\u0440\\u043e\\u0433\\u0440\\u0435\\u0441\\u0441\\u0430 \\u043f\\u0440\\u0438\\u043d\\u0438\\u043c\\u0430\\u044e\\u0442 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0432 \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0435 \\u043e\\u0442 0 \\u0434\\u043e 100. \\u042d\\u0442\\u043e \\u0443\\u043f\\u0440\\u043e\\u0449\\u0430\\u0435\\u0442 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443 \\u0441 \\u043f\\u0440\\u043e\\u0433\\u0440\\u0430\\u043c\\u043c\\u0430\\u043c\\u0438 \\u0434\\u043b\\u044f \\u0447\\u0442\\u0435\\u043d\\u0438\\u044f \\u0441 \\u044d\\u043a\\u0440\\u0430\\u043d\\u0430 (\"\\u0441\\u043a\\u0440\\u0438\\u043d\\u0440\\u0438\\u0434\\u0435\\u0440\\u044b\"), \\u0433\\u0434\\u0435 \\u044d\\u0442\\u043e \\u043c\\u0438\\u043d\\u0438\\u043c\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0438 \\u043c\\u0430\\u043a\\u0441\\u0438\\u043c\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f \\u043f\\u043e \\u0443\\u043c\\u043e\\u043b\\u0447\\u0430\\u043d\\u0438\\u044e. \\u041e\\u0434\\u043d\\u0430\\u043a\\u043e \\u0438\\u043d\\u043e\\u0433\\u0434\\u0430 \\u0432\\u044b \\u043c\\u043e\\u0436\\u0435\\u0442\\u0435 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0442\\u044c \\u0441 \\u0434\\u0430\\u043d\\u043d\\u044b\\u043c\\u0438, \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u044f \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0445 \\u0432\\u044b\\u0445\\u043e\\u0434\\u044f\\u0442 \\u0437\\u0430 \\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u044b \\u044d\\u0442\\u043e\\u0433\\u043e \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0430. \\u0412\\u043e\\u0442 \\u0442\\u0430\\u043a \\u043c\\u043e\\u0436\\u043d\\u043e \\u043b\\u0435\\u0433\\u043a\\u043e \\u043f\\u0440\\u0435\\u043e\\u0431\\u0440\\u0430\\u0437\\u043e\\u0432\\u0430\\u0442\\u044c \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0438\\u0437 \\u043b\\u044e\\u0431\\u043e\\u0433\\u043e \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0430 \\u0432 \\u0448\\u043a\\u0430\\u043b\\u0443 \\u043e\\u0442 0 \\u0434\\u043e 100:\\n\\n```jsx\\n// MIN = Minimum expected value\\n// MAX = Maximium expected value\\n// Function to normalise the values (MIN / MAX could be integrated)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Example component that utilizes the `normalise` function at the point of render.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Customized progress bars\\n\\n\\u041d\\u0438\\u0436\\u0435 \\u043d\\u0430\\u0445\\u043e\\u0434\\u044f\\u0442\\u0441\\u044f \\u043f\\u0440\\u0438\\u043c\\u0435\\u0440\\u044b \\u043a\\u0430\\u0441\\u0442\\u043e\\u043c\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043a\\u043e\\u043c\\u043f\\u043e\\u043d\\u0435\\u043d\\u0442\\u0430. You can learn more about this in the [overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Delaying appearance\\n\\nThere are [3 important limits](https://www.nngroup.com/articles/response-times-3-important-limits/) to know around response time. The ripple effect of the `ButtonBase` component ensures that the user feels that the system is reacting instantaneously. Normally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second. After 1.0 second, you can display a loader to keep user\\'s flow of thought uninterrupted.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## \\u041e\\u0433\\u0440\\u0430\\u043d\\u0438\\u0447\\u0435\\u043d\\u0438\\u044f\\n\\nUnder heavy load, you might lose the stroke dash animation or see random CircularProgress ring widths. You should run processor intensive operations in a web worker or by batch in order not to block the main rendering thread.\\n\\n![heavy load](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue. See [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},MlsN:function(e,n){e.exports=\"import React from 'react';\\nimport clsx from 'clsx';\\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\nimport { green } from '@material-ui/core/colors';\\nimport Button from '@material-ui/core/Button';\\nimport Fab from '@material-ui/core/Fab';\\nimport CheckIcon from '@material-ui/icons/Check';\\nimport SaveIcon from '@material-ui/icons/Save';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      display: 'flex',\\n      alignItems: 'center',\\n    },\\n    wrapper: {\\n      margin: theme.spacing(1),\\n      position: 'relative',\\n    },\\n    buttonSuccess: {\\n      backgroundColor: green[500],\\n      '&:hover': {\\n        backgroundColor: green[700],\\n      },\\n    },\\n    fabProgress: {\\n      color: green[500],\\n      position: 'absolute',\\n      top: -6,\\n      left: -6,\\n      zIndex: 1,\\n    },\\n    buttonProgress: {\\n      color: green[500],\\n      position: 'absolute',\\n      top: '50%',\\n      left: '50%',\\n      marginTop: -12,\\n      marginLeft: -12,\\n    },\\n  }),\\n);\\n\\nexport default function CircularIntegration() {\\n  const classes = useStyles();\\n  const [loading, setLoading] = React.useState(false);\\n  const [success, setSuccess] = React.useState(false);\\n  const timer = React.useRef<number>();\\n\\n  const buttonClassname = clsx({\\n    [classes.buttonSuccess]: success,\\n  });\\n\\n  React.useEffect(() => {\\n    return () => {\\n      clearTimeout(timer.current);\\n    };\\n  }, []);\\n\\n  const handleButtonClick = () => {\\n    if (!loading) {\\n      setSuccess(false);\\n      setLoading(true);\\n      timer.current = setTimeout(() => {\\n        setSuccess(true);\\n        setLoading(false);\\n      }, 2000);\\n    }\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <div className={classes.wrapper}>\\n        <Fab\\n          aria-label=\\\"save\\\"\\n          color=\\\"primary\\\"\\n          className={buttonClassname}\\n          onClick={handleButtonClick}\\n        >\\n          {success ? <CheckIcon /> : <SaveIcon />}\\n        </Fab>\\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\\n      </div>\\n      <div className={classes.wrapper}>\\n        <Button\\n          variant=\\\"contained\\\"\\n          color=\\\"primary\\\"\\n          className={buttonClassname}\\n          disabled={loading}\\n          onClick={handleButtonClick}\\n        >\\n          Accept terms\\n        </Button>\\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\\n      </div>\\n    </div>\\n  );\\n}\\n\"},NKsB:function(e,n){e.exports='---\\ntitle: Componente React Circular Progress, Linear Progress\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Progresso\\n\\n<p class=\"description\">Indicadores de progresso comumente conhecidos como spinners, expressam um tempo de espera n\\xe3o especificado ou exibem a dura\\xe7\\xe3o de um processo. A anima\\xe7\\xe3o funciona com CSS, n\\xe3o com JavaScript.</p>\\n\\n[Indicadores de progresso](https://material.io/design/components/progress-indicators.html) informam aos usu\\xe1rios sobre o estado de processos em progresso, como o carregamento de um aplicativo, envio de um formul\\xe1rio, ou atualiza\\xe7\\xf5es. Eles comunicam o estado do aplicativo e indicam a\\xe7\\xf5es dispon\\xedveis, tal como, se o usu\\xe1rio pode sair da p\\xe1gina atual.\\n\\nIndicador **determinado** mostra quanto tempo uma opera\\xe7\\xe3o vai demorar.\\n\\nIndicador **indeterminado** demonstra um tempo de espera n\\xe3o especificado.\\n\\n#### Conjunto de progressos\\n\\nAo exibir o progresso de uma seq\\xfc\\xeancia de processos, indique o progresso geral em vez do progresso de cada atividade.\\n\\n## Circular\\n\\n[Progresso circular](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) suporta ambos, processos determinados e indeterminados.\\n\\n- O indicador circular **determinado** preenche a faixa circular invis\\xedvel com cor, a medida que o indicador se move de 0 a 360 graus.\\n- O indicador circular **indeterminado** crescem e diminuem em tamanho enquanto se movem de forma circular na faixa invis\\xedvel.\\n\\n### Circular Indeterminado\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Integra\\xe7\\xe3o Interativa\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular Determinado\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular est\\xe1tico\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\nIndicadores de [progresso linear](https://material.io/design/components/progress-indicators.html#linear-progress-indicators).\\n\\n### Linear Indeterminado\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Determinado\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Buffer Linear\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Consulta Linear\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Intervalo n\\xe3o-padr\\xe3o\\n\\nOs componentes de progresso aceitam um valor no intervalo de 0 a 100. Isso simplifica as coisas para os usu\\xe1rios de leitores de tela, onde estes s\\xe3o os valores padr\\xe3o m\\xednimos / m\\xe1ximos. \\xc0s vezes, no entanto, voc\\xea pode estar trabalhando com uma fonte de dados onde os valores ficam de fora deste intervalo. Veja como voc\\xea pode transformar facilmente um valor em qualquer intervalo em uma escala de 0 a 100:\\n\\n```jsx\\n// MIN = Valor m\\xednimo esperado\\n// MAX = Valor m\\xe1ximo esperado\\n// Fun\\xe7\\xe3o para normalizar os valores (MIN / MAX pode ser integrado)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Exemplo de componente que utiliza a fun\\xe7\\xe3o `normalise` no ponto de renderiza\\xe7\\xe3o.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Barra de progresso customizada\\n\\nAqui est\\xe3o alguns exemplos de customiza\\xe7\\xe3o do componente. Voc\\xea pode aprender mais sobre isso na [p\\xe1gina de documenta\\xe7\\xe3o de sobrescritas](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Apar\\xeancia atrasada\\n\\nExistem [3 limites importantes](https://www.nngroup.com/articles/response-times-3-important-limits/) para saber sobre o tempo de resposta. O efeito cascata do componente `ButtonBase` garante que o usu\\xe1rio experimente um sistema de feedback em tempo real. Normalmente, nenhum feedback \\xe9 necess\\xe1rio durante atrasos de mais de 0,1 segundos e menos de 1,0 segundos. Mas ap\\xf3s 1,0 segundo, voc\\xea pode exibir um carregador para garantir que o fluxo de pensamento do usu\\xe1rio n\\xe3o seja interrompido.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## Limita\\xe7\\xf5es\\n\\nQuando o processamento \\xe9 particularmente lento, voc\\xea pode perder a anima\\xe7\\xe3o do tra\\xe7o ou ver raios aleat\\xf3rios com CircularProgress. Para n\\xe3o bloquear o processo principal de renderiza\\xe7\\xe3o, voc\\xea deve processar suas opera\\xe7\\xf5es com um web worker ou por batch.\\n\\n![carga pesada](/static/images/progress/heavy-load.gif)\\n\\nQuando n\\xe3o for poss\\xedvel, voc\\xea pode utilizar a propriedade `disableShrink` para atenuar o problema. Veja [este problema](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},OVBg:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return u}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"EseM\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}})}));function u(){var e=l(),n=a.a.useState(0),r=n[0],t=n[1],s=a.a.useState(10),o=s[0],u=s[1],m=a.a.useRef((function(){}));return a.a.useEffect((function(){m.current=function(){if(r>100)t(0),u(10);else{var e=10*Math.random(),n=10*Math.random();t(r+e),u(r+e+n)}}})),a.a.useEffect((function(){var e=setInterval((function(){m.current()}),500);return function(){clearInterval(e)}}),[]),c(\"div\",{className:e.root},c(i.a,{variant:\"buffer\",value:r,valueBuffer:o}),c(i.a,{variant:\"buffer\",value:r,valueBuffer:o,color:\"secondary\"}))}},Pnm9:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return g}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"IrXQ\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}}})),l=i(o.a,{variant:\"static\",value:5}),u=i(o.a,{variant:\"static\",value:25}),m=i(o.a,{variant:\"static\",value:50}),d=i(o.a,{variant:\"static\",value:75}),p=i(o.a,{variant:\"static\",value:100});function g(){var e=c(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){return e>=100?0:e+10}))}),1e3);return function(){clearInterval(e)}}),[]),i(\"div\",{className:e.root},l,u,m,d,p,i(o.a,{variant:\"static\",value:r}))}},QcnO:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return v}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"PDtE\"),o=r(\"yZEQ\"),i=r(\"IrXQ\"),c=r(\"FJkE\"),l=r(\"O8uh\"),u=r(\"C+rX\"),m=r(\"XSg6\"),d=r(\"hfBD\"),p=a.a.createElement,g=Object(o.a)((function(e){return{root:{display:\"flex\",alignItems:\"center\"},wrapper:{margin:e.spacing(1),position:\"relative\"},buttonSuccess:{backgroundColor:c.a[500],\"&:hover\":{backgroundColor:c.a[700]}},fabProgress:{color:c.a[500],position:\"absolute\",top:-6,left:-6,zIndex:1},buttonProgress:{color:c.a[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}}})),f=p(m.a,null),h=p(d.a,null);function v(){var e=g(),n=a.a.useState(!1),r=n[0],t=n[1],o=a.a.useState(!1),c=o[0],m=o[1],d=a.a.useRef(),v=Object(s.a)(c&&e.buttonSuccess);a.a.useEffect((function(){return function(){clearTimeout(d.current)}}),[]);var b=function(){r||(m(!1),t(!0),d.current=setTimeout((function(){m(!0),t(!1)}),2e3))};return p(\"div\",{className:e.root},p(\"div\",{className:e.wrapper},p(u.a,{\"aria-label\":\"save\",color:\"primary\",className:v,onClick:b},c?f:h),r&&p(i.a,{size:68,className:e.fabProgress})),p(\"div\",{className:e.wrapper},p(l.a,{variant:\"contained\",color:\"primary\",className:v,disabled:r,onClick:b},\"Accept terms\"),r&&p(i.a,{size:24,className:e.buttonProgress})))}},SYbA:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: '100%',\\n      '& > * + *': {\\n        marginTop: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function LinearQuery() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"query\\\" />\\n      <LinearProgress variant=\\\"query\\\" color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},Uve1:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    '& > * + *': {\\n      marginTop: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function LinearDeterminate() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function progress() {\\n      setCompleted(oldCompleted => {\\n        if (oldCompleted === 100) {\\n          return 0;\\n        }\\n        const diff = Math.random() * 10;\\n        return Math.min(oldCompleted + diff, 100);\\n      });\\n    }\\n\\n    const timer = setInterval(progress, 500);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"determinate\\\" value={completed} />\\n      <LinearProgress variant=\\\"determinate\\\" value={completed} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},WLtd:function(e,n,r){\"use strict\";function t(e){return e}r.d(n,\"a\",(function(){return t}))},WSJm:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: '100%',\\n      '& > * + *': {\\n        marginTop: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function LinearDeterminate() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function progress() {\\n      setCompleted(oldCompleted => {\\n        if (oldCompleted === 100) {\\n          return 0;\\n        }\\n        const diff = Math.random() * 10;\\n        return Math.min(oldCompleted + diff, 100);\\n      });\\n    }\\n\\n    const timer = setInterval(progress, 500);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"determinate\\\" value={completed} />\\n      <LinearProgress variant=\\\"determinate\\\" value={completed} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},XSg6:function(e,n,r){\"use strict\";var t=r(\"mXGw\"),a=r(\"0Zz2\"),s=t.createElement;n.a=Object(a.a)(s(\"path\",{d:\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"}),\"Check\")},aOT8:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    '& > * + *': {\\n      marginLeft: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function CircularDeterminate() {\\n  const classes = useStyles();\\n  const [progress, setProgress] = React.useState(0);\\n\\n  React.useEffect(() => {\\n    function tick() {\\n      // reset when reaching 100%\\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\\n    }\\n\\n    const timer = setInterval(tick, 20);\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <CircularProgress variant=\\\"determinate\\\" value={progress} />\\n      <CircularProgress variant=\\\"determinate\\\" value={progress} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},cidO:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return d}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"EseM\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}})})),u=c(i.a,null),m=c(i.a,{color:\"secondary\"});function d(){var e=l();return c(\"div\",{className:e.root},u,m)}},coIx:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: '100%',\\n      '& > * + *': {\\n        marginTop: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function LinearBuffer() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n  const [buffer, setBuffer] = React.useState(10);\\n\\n  const progress = React.useRef(() => {});\\n  React.useEffect(() => {\\n    progress.current = () => {\\n      if (completed > 100) {\\n        setCompleted(0);\\n        setBuffer(10);\\n      } else {\\n        const diff = Math.random() * 10;\\n        const diff2 = Math.random() * 10;\\n        setCompleted(completed + diff);\\n        setBuffer(completed + diff + diff2);\\n      }\\n    };\\n  });\\n\\n  React.useEffect(() => {\\n    function tick() {\\n      progress.current();\\n    }\\n    const timer = setInterval(tick, 500);\\n\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"buffer\\\" value={completed} valueBuffer={buffer} />\\n      <LinearProgress variant=\\\"buffer\\\" value={completed} valueBuffer={buffer} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},fIoz:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return C}));var t=r(\"z3IF\"),a=r(\"mXGw\"),s=r.n(a),o=r(\"XpU0\"),i=r(\"cYeA\"),c=r(\"yZEQ\"),l=r(\"WLtd\"),u=r(\"IrXQ\"),m=r(\"EseM\"),d=s.a.createElement,p=Object(o.default)({root:{color:\"#00695c\"}})(u.a),g=Object(o.default)({colorPrimary:{backgroundColor:\"#b2dfdb\"},barColorPrimary:{backgroundColor:\"#00695c\"}})(m.a),f=Object(o.default)({root:{height:10,backgroundColor:Object(i.lighten)(\"#ff6c5c\",.5)},bar:{borderRadius:20,backgroundColor:\"#ff6c5c\"}})(m.a),h=Object(c.a)({root:{position:\"relative\"},top:{color:\"#eef3fd\"},bottom:{color:\"#6798e5\",animationDuration:\"550ms\",position:\"absolute\",left:0}});var v=Object(c.a)((function(e){return Object(l.a)({root:{flexGrow:1},margin:{margin:e.spacing(1)}})})),b=d(p,{size:30,thickness:5}),y=d((function(e){var n=h();return d(\"div\",{className:n.root},d(u.a,Object(t.a)({variant:\"determinate\",value:100,className:n.top,size:24,thickness:4},e)),d(u.a,Object(t.a)({variant:\"indeterminate\",disableShrink:!0,className:n.bottom,size:24,thickness:4},e)))}),null);function C(){var e=v();return d(\"div\",{className:e.root},b,d(g,{className:e.margin}),d(f,{className:e.margin,variant:\"determinate\",color:\"secondary\",value:50}),y)}},faNN:function(e,n){e.exports='---\\ntitle: Circular Progress, Linear Progress React component\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Progress\\n\\n<p class=\"description\">\\u4e00\\u822c\\u306b\\u30b9\\u30d4\\u30ca\\u30fc\\u3068\\u547c\\u3070\\u308c\\u308b\\u9032\\u884c\\u72b6\\u6cc1\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u306f\\u3001\\u6307\\u5b9a\\u3055\\u308c\\u3066\\u3044\\u306a\\u3044\\u5f85\\u6a5f\\u6642\\u9593\\u3092\\u8868\\u3057\\u305f\\u308a\\u3001\\u30d7\\u30ed\\u30bb\\u30b9\\u306e\\u9577\\u3055\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u3002 \\u30a2\\u30cb\\u30e1\\u30fc\\u30b7\\u30e7\\u30f3\\u306fJavaScript\\u3067\\u306f\\u306a\\u304fCSS\\u3067\\u52d5\\u4f5c\\u3057\\u307e\\u3059\\u3002</p>\\n\\n[\\u9032\\u884c\\u72b6\\u6cc1\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf](https://material.io/design/components/progress-indicators.html) \\u3001\\u30a2\\u30d7\\u30ea\\u306e\\u8aad\\u307f\\u8fbc\\u307f\\u3001\\u30d5\\u30a9\\u30fc\\u30e0\\u306e\\u9001\\u4fe1\\u3001\\u66f4\\u65b0\\u306e\\u4fdd\\u5b58\\u306a\\u3069\\u3001\\u9032\\u884c\\u4e2d\\u306e\\u30d7\\u30ed\\u30bb\\u30b9\\u306e\\u30b9\\u30c6\\u30fc\\u30bf\\u30b9\\u306b\\u3064\\u3044\\u3066\\u30e6\\u30fc\\u30b6\\u30fc\\u306b\\u901a\\u77e5\\u3057\\u307e\\u3059\\u3002 \\u30a2\\u30d7\\u30ea\\u306e\\u72b6\\u614b\\u3092\\u4f1d\\u3048\\u3001\\u30e6\\u30fc\\u30b6\\u30fc\\u304c\\u73fe\\u5728\\u306e\\u753b\\u9762\\u304b\\u3089\\u79fb\\u52d5\\u3067\\u304d\\u308b\\u304b\\u3069\\u3046\\u304b\\u306a\\u3069\\u3001\\u5229\\u7528\\u53ef\\u80fd\\u306a\\u30a2\\u30af\\u30b7\\u30e7\\u30f3\\u3092\\u793a\\u3057\\u307e\\u3059\\u3002\\n\\n**Determinate** \\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u306f\\u3001\\u64cd\\u4f5c\\u306b\\u304b\\u304b\\u308b\\u6642\\u9593\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u3002\\n\\n**Indeterminate**\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u306f\\u3001\\u4e0d\\u7279\\u5b9a\\u306e\\u5f85\\u6a5f\\u6642\\u9593\\u3092\\u8996\\u899a\\u5316\\u3057\\u307e\\u3059\\u3002\\n\\n#### \\u30b0\\u30eb\\u30fc\\u30d7\\u3068\\u3057\\u3066\\u306e\\u9032\\u6357\\n\\n\\u4e00\\u9023\\u306e\\u30d7\\u30ed\\u30bb\\u30b9\\u306e\\u9032\\u884c\\u72b6\\u6cc1\\u3092\\u8868\\u793a\\u3059\\u308b\\u5834\\u5408\\u3001\\u5404\\u30a2\\u30af\\u30c6\\u30a3\\u30d3\\u30c6\\u30a3\\u306e\\u9032\\u884c\\u72b6\\u6cc1\\u3067\\u306f\\u306a\\u304f\\u3001\\u5168\\u4f53\\u7684\\u306a\\u9032\\u884c\\u72b6\\u6cc1\\u3092\\u793a\\u3057\\u307e\\u3059\\u3002\\n\\n## Circular\\n\\n[Circular progress](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) \\u3001\\u78ba\\u5b9a\\u30d7\\u30ed\\u30bb\\u30b9\\u3068\\u4e0d\\u78ba\\u5b9a\\u30d7\\u30ed\\u30bb\\u30b9\\u306e\\u4e21\\u65b9\\u3092\\u30b5\\u30dd\\u30fc\\u30c8\\u3057\\u307e\\u3059\\u3002\\n\\n- **Determinate** \\u5186\\u5f62\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u30fc\\u306f\\u3001\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u30fc\\u304c0\\u304b\\u3089360\\u5ea6\\u306b\\u79fb\\u52d5\\u3059\\u308b\\u3068\\u304d\\u306b\\u3001\\u898b\\u3048\\u306a\\u3044\\u5186\\u5f62\\u306e\\u30c8\\u30e9\\u30c3\\u30af\\u3092\\u8272\\u3067\\u5857\\u308a\\u3064\\u3076\\u3057\\u307e\\u3059\\u3002\\n- **Indeterminate** \\u5186\\u5f62\\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u306f\\u3001\\u4e0d\\u53ef\\u8996\\u306e\\u30c8\\u30e9\\u30c3\\u30af\\u306b\\u6cbf\\u3063\\u3066\\u79fb\\u52d5\\u3057\\u306a\\u304c\\u3089\\u30b5\\u30a4\\u30ba\\u304c\\u62e1\\u5927\\u304a\\u3088\\u3073\\u7e2e\\u5c0f\\u3057\\u307e\\u3059\\u3002\\n\\n### Circular Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Interactive Integration\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular Determinate\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular Static\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\n[Linear](https://material.io/design/components/progress-indicators.html#linear-progress-indicators) \\u30a4\\u30f3\\u30b8\\u30b1\\u30fc\\u30bf\\u30fc\\u3002\\n\\n### Linear Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Determinate\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Linear Buffer\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Linear Query\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Non-standard ranges\\n\\n\\u9032\\u6357\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306f\\u30010\\u301c100\\u306e\\u7bc4\\u56f2\\u306e\\u5024\\u3092\\u53d7\\u3051\\u5165\\u308c\\u307e\\u3059\\u3002 \\u3053\\u308c\\u306b\\u3088\\u308a\\u3001\\u3053\\u308c\\u3089\\u304c\\u30c7\\u30d5\\u30a9\\u30eb\\u30c8\\u306e\\u6700\\u5c0f\\u5024/\\u6700\\u5927\\u5024\\u3067\\u3042\\u308b\\u30b9\\u30af\\u30ea\\u30fc\\u30f3\\u30ea\\u30fc\\u30c0\\u30fc\\u30e6\\u30fc\\u30b6\\u30fc\\u306e\\u4f5c\\u696d\\u304c\\u7c21\\u7d20\\u5316\\u3055\\u308c\\u307e\\u3059\\u3002 \\u305f\\u3060\\u3057\\u3001\\u5834\\u5408\\u306b\\u3088\\u3063\\u3066\\u306f\\u3001\\u5024\\u304c\\u3053\\u306e\\u7bc4\\u56f2\\u5916\\u306e\\u30c7\\u30fc\\u30bf\\u30bd\\u30fc\\u30b9\\u3092\\u4f7f\\u7528\\u3057\\u3066\\u3044\\u308b\\u5834\\u5408\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u7bc4\\u56f2\\u5185\\u306e\\u5024\\u30920\\u301c100\\u306e\\u30b9\\u30b1\\u30fc\\u30eb\\u306b\\u7c21\\u5358\\u306b\\u5909\\u63db\\u3059\\u308b\\u65b9\\u6cd5\\u306f\\u6b21\\u306e\\u3068\\u304a\\u308a\\u3067\\u3059\\u3002\\n\\n```jsx\\n// MIN = Minimum expected value\\n// MAX = Maximium expected value\\n// Function to normalise the values (MIN / MAX could be integrated)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Example component that utilizes the `normalise` function at the point of render.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## \\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u3055\\u308c\\u305f\\u9032\\u884c\\u72b6\\u6cc1\\u30d0\\u30fc\\n\\n\\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u30ab\\u30b9\\u30bf\\u30de\\u30a4\\u30ba\\u306e\\u4f8b\\u3092\\u6b21\\u306b\\u793a\\u3057\\u307e\\u3059\\u3002 \\u8a73\\u7d30\\u306b\\u3064\\u3044\\u3066\\u306f\\u3001 [\\u30aa\\u30fc\\u30d0\\u30fc\\u30e9\\u30a4\\u30c9\\u306e\\u30c9\\u30ad\\u30e5\\u30e1\\u30f3\\u30c8\\u30da\\u30fc\\u30b8](/customization/components/)\\u3092\\u53c2\\u7167\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## \\u5916\\u89b3\\u306e\\u9045\\u5ef6\\n\\n\\u5fdc\\u7b54\\u6642\\u9593\\u306b\\u3064\\u3044\\u3066\\u77e5\\u3063\\u3066\\u304a\\u304f\\u3079\\u304d\\u91cd\\u8981\\u306a\\u5236\\u9650\\u306f [3\\u3064\\u3042\\u308a\\u307e\\u3059](https://www.nngroup.com/articles/response-times-3-important-limits/) \\u3002 `ButtonBase` \\u30b3\\u30f3\\u30dd\\u30fc\\u30cd\\u30f3\\u30c8\\u306e\\u6ce2\\u53ca\\u52b9\\u679c\\u306b\\u3088\\u308a\\u3001\\u30e6\\u30fc\\u30b6\\u30fc\\u306f\\u30b7\\u30b9\\u30c6\\u30e0\\u304c\\u77ac\\u6642\\u306b\\u53cd\\u5fdc\\u3057\\u3066\\u3044\\u308b\\u3088\\u3046\\u306b\\u611f\\u3058\\u307e\\u3059\\u3002 \\u901a\\u5e38\\u30010.1\\u79d2\\u4ee5\\u4e0a1.0\\u79d2\\u672a\\u6e80\\u306e\\u9045\\u5ef6\\u306e\\u9593\\u3001\\u7279\\u5225\\u306a\\u30d5\\u30a3\\u30fc\\u30c9\\u30d0\\u30c3\\u30af\\u306f\\u5fc5\\u8981\\u3042\\u308a\\u307e\\u305b\\u3093\\u3002 1.0\\u79d2\\u5f8c\\u3001\\u30ed\\u30fc\\u30c0\\u30fc\\u3092\\u8868\\u793a\\u3057\\u3066\\u3001\\u30e6\\u30fc\\u30b6\\u30fc\\u306e\\u601d\\u8003\\u306e\\u6d41\\u308c\\u304c\\u4e2d\\u65ad\\u3055\\u308c\\u306a\\u3044\\u3088\\u3046\\u306b\\u3059\\u308b\\u3053\\u3068\\u304c\\u3067\\u304d\\u307e\\u3059\\u3002\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## \\u5236\\u9650\\n\\n\\u8ca0\\u8377\\u304c\\u9ad8\\u3044\\u3068\\u3001\\u30b9\\u30c8\\u30ed\\u30fc\\u30af\\u30c0\\u30c3\\u30b7\\u30e5\\u30a2\\u30cb\\u30e1\\u30fc\\u30b7\\u30e7\\u30f3\\u304c\\u5931\\u308f\\u308c\\u308b\\u304b\\u3001\\u30e9\\u30f3\\u30c0\\u30e0\\u306aCircularProgress\\u30ea\\u30f3\\u30b0\\u5e45\\u304c\\u8868\\u793a\\u3055\\u308c\\u308b\\u5834\\u5408\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002 \\u30e1\\u30a4\\u30f3\\u30ec\\u30f3\\u30c0\\u30ea\\u30f3\\u30b0\\u30b9\\u30ec\\u30c3\\u30c9\\u3092\\u30d6\\u30ed\\u30c3\\u30af\\u3057\\u306a\\u3044\\u3088\\u3046\\u306b\\u3001\\u30d7\\u30ed\\u30bb\\u30c3\\u30b5\\u3092\\u96c6\\u4e2d\\u7684\\u306b\\u4f7f\\u7528\\u3059\\u308b\\u64cd\\u4f5c\\u3092Web\\u30ef\\u30fc\\u30ab\\u30fc\\u3067\\u3001\\u307e\\u305f\\u306f\\u30d0\\u30c3\\u30c1\\u3067\\u5b9f\\u884c\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\\n\\n![heavy load](/static/images/progress/heavy-load.gif)\\n\\n\\u4e0d\\u53ef\\u80fd\\u306a\\u5834\\u5408\\u306f\\u3001 `disableShrink` \\u30d7\\u30ed\\u30d1\\u30c6\\u30a3\\u3092\\u6d3b\\u7528\\u3057\\u3066\\u554f\\u984c\\u3092\\u8efd\\u6e1b\\u3067\\u304d\\u307e\\u3059\\u3002 [\\u3053\\u306e\\u554f\\u984c](https://github.com/Foso/material-ui/issues/10327)\\u53c2\\u7167\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},fafy:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\\nimport Fade from '@material-ui/core/Fade';\\nimport Button from '@material-ui/core/Button';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      display: 'flex',\\n      flexDirection: 'column',\\n      alignItems: 'center',\\n    },\\n    button: {\\n      margin: theme.spacing(2),\\n    },\\n    placeholder: {\\n      height: 40,\\n    },\\n  }),\\n);\\n\\nexport default function DelayingAppearance() {\\n  const classes = useStyles();\\n  const [loading, setLoading] = React.useState(false);\\n  const [query, setQuery] = React.useState('idle');\\n  const timerRef = React.useRef<number>();\\n\\n  React.useEffect(\\n    () => () => {\\n      clearTimeout(timerRef.current);\\n    },\\n    [],\\n  );\\n\\n  const handleClickLoading = () => {\\n    setLoading(prevLoading => !prevLoading);\\n  };\\n\\n  const handleClickQuery = () => {\\n    clearTimeout(timerRef.current);\\n\\n    if (query !== 'idle') {\\n      setQuery('idle');\\n      return;\\n    }\\n\\n    setQuery('progress');\\n    timerRef.current = setTimeout(() => {\\n      setQuery('success');\\n    }, 2000);\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <div className={classes.placeholder}>\\n        <Fade\\n          in={loading}\\n          style={{\\n            transitionDelay: loading ? '800ms' : '0ms',\\n          }}\\n          unmountOnExit\\n        >\\n          <CircularProgress />\\n        </Fade>\\n      </div>\\n      <Button onClick={handleClickLoading} className={classes.button}>\\n        {loading ? 'Stop loading' : 'Loading'}\\n      </Button>\\n      <div className={classes.placeholder}>\\n        {query === 'success' ? (\\n          <Typography>Success!</Typography>\\n        ) : (\\n          <Fade\\n            in={query === 'progress'}\\n            style={{\\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\\n            }}\\n            unmountOnExit\\n          >\\n            <CircularProgress />\\n          </Fade>\\n        )}\\n      </div>\\n      <Button onClick={handleClickQuery} className={classes.button}>\\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\\n      </Button>\\n    </div>\\n  );\\n}\\n\"},fzfs:function(e,n){e.exports='---\\ntitle: Circular, Linear progress React components\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Progress\\n\\n<p class=\"description\">Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.</p>\\n\\n[Progress indicators](https://material.io/design/components/progress-indicators.html) inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. They communicate an app\\u2019s state and indicate available actions, such as whether users can navigate away from the current screen.\\n\\n**Determinate** indicators display how long an operation will take.\\n\\n**Indeterminate** indicators visualize an unspecified wait time.\\n\\n#### Progress as a group\\n\\nWhen displaying progress for a sequence of processes, indicate overall progress rather than the progress of each activity.\\n\\n## Circular\\n\\n[Circular progress](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) support both determinate and indeterminate processes.\\n\\n- **Determinate** circular indicators fill the invisible, circular track with color, as the indicator moves from 0 to 360 degrees.\\n- **Indeterminate** circular indicators grow and shrink in size while moving along the invisible track.\\n\\n### Circular Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Interactive Integration\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular Determinate\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular Static\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Linear\\n\\n[Linear progress](https://material.io/design/components/progress-indicators.html#linear-progress-indicators) indicators.\\n\\n### Linear Indeterminate\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Linear Determinate\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Linear Buffer\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Linear Query\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Non-standard ranges\\n\\nThe progress components accept a value in the range 0 - 100. This simplifies things for screen-reader users, where these are the default min / max values. Sometimes, however, you might be working with a data source where the values fall outside this range. Here\\'s how you can easily transform a value in any range to a scale of 0 - 100:\\n\\n```jsx\\n// MIN = Minimum expected value\\n// MAX = Maximium expected value\\n// Function to normalise the values (MIN / MAX could be integrated)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Example component that utilizes the `normalise` function at the point of render.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Customized progress bars\\n\\nHere are some examples of customizing the component. You can learn more about this in the\\n[overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Delaying appearance\\n\\nThere are [3 important limits](https://www.nngroup.com/articles/response-times-3-important-limits/) to know around response time.\\nThe ripple effect of the `ButtonBase` component ensures that the user feels that the system is reacting instantaneously.\\nNormally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second.\\nAfter 1.0 second, you can display a loader to keep user\\'s flow of thought uninterrupted.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## Limitations\\n\\nUnder heavy load, you might lose the stroke dash animation or see random CircularProgress ring widths.\\nYou should run processor intensive operations in a web worker or by batch in order not to block the main rendering thread.\\n\\n![heavy load](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue.\\nSee [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},gb98:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return f}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"IrXQ\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}})})),u=c(i.a,{variant:\"static\",value:5}),m=c(i.a,{variant:\"static\",value:25}),d=c(i.a,{variant:\"static\",value:50}),p=c(i.a,{variant:\"static\",value:75}),g=c(i.a,{variant:\"static\",value:100});function f(){var e=l(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){return e>=100?0:e+10}))}),1e3);return function(){clearInterval(e)}}),[]),c(\"div\",{className:e.root},u,m,d,p,g,c(i.a,{variant:\"static\",value:r}))}},goN3:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    '& > * + *': {\\n      marginTop: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function LinearQuery() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"query\\\" />\\n      <LinearProgress variant=\\\"query\\\" color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},hF8N:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Fade from '@material-ui/core/Fade';\\nimport Button from '@material-ui/core/Button';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\nimport Typography from '@material-ui/core/Typography';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    alignItems: 'center',\\n  },\\n  button: {\\n    margin: theme.spacing(2),\\n  },\\n  placeholder: {\\n    height: 40,\\n  },\\n}));\\n\\nexport default function DelayingAppearance() {\\n  const classes = useStyles();\\n  const [loading, setLoading] = React.useState(false);\\n  const [query, setQuery] = React.useState('idle');\\n  const timerRef = React.useRef();\\n\\n  React.useEffect(\\n    () => () => {\\n      clearTimeout(timerRef.current);\\n    },\\n    [],\\n  );\\n\\n  const handleClickLoading = () => {\\n    setLoading(prevLoading => !prevLoading);\\n  };\\n\\n  const handleClickQuery = () => {\\n    clearTimeout(timerRef.current);\\n\\n    if (query !== 'idle') {\\n      setQuery('idle');\\n      return;\\n    }\\n\\n    setQuery('progress');\\n    timerRef.current = setTimeout(() => {\\n      setQuery('success');\\n    }, 2000);\\n  };\\n\\n  return (\\n    <div className={classes.root}>\\n      <div className={classes.placeholder}>\\n        <Fade\\n          in={loading}\\n          style={{\\n            transitionDelay: loading ? '800ms' : '0ms',\\n          }}\\n          unmountOnExit\\n        >\\n          <CircularProgress />\\n        </Fade>\\n      </div>\\n      <Button onClick={handleClickLoading} className={classes.button}>\\n        {loading ? 'Stop loading' : 'Loading'}\\n      </Button>\\n      <div className={classes.placeholder}>\\n        {query === 'success' ? (\\n          <Typography>Success!</Typography>\\n        ) : (\\n          <Fade\\n            in={query === 'progress'}\\n            style={{\\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\\n            }}\\n            unmountOnExit\\n          >\\n            <CircularProgress />\\n          </Fade>\\n        )}\\n      </div>\\n      <Button onClick={handleClickQuery} className={classes.button}>\\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\\n      </Button>\\n    </div>\\n  );\\n}\\n\"},hfBD:function(e,n,r){\"use strict\";var t=r(\"mXGw\"),a=r(\"0Zz2\"),s=t.createElement;n.a=Object(a.a)(s(\"path\",{d:\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"}),\"Save\")},\"ios+\":function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return y}));var t=r(\"z3IF\"),a=r(\"mXGw\"),s=r.n(a),o=r(\"XpU0\"),i=r(\"cYeA\"),c=r(\"yZEQ\"),l=r(\"IrXQ\"),u=r(\"EseM\"),m=s.a.createElement,d=Object(o.default)({root:{color:\"#00695c\"}})(l.a),p=Object(o.default)({colorPrimary:{backgroundColor:\"#b2dfdb\"},barColorPrimary:{backgroundColor:\"#00695c\"}})(u.a),g=Object(o.default)({root:{height:10,backgroundColor:Object(i.lighten)(\"#ff6c5c\",.5)},bar:{borderRadius:20,backgroundColor:\"#ff6c5c\"}})(u.a),f=Object(c.a)({root:{position:\"relative\"},top:{color:\"#eef3fd\"},bottom:{color:\"#6798e5\",animationDuration:\"550ms\",position:\"absolute\",left:0}});var h=Object(c.a)((function(e){return{root:{flexGrow:1},margin:{margin:e.spacing(1)}}})),v=m(d,{size:30,thickness:5}),b=m((function(e){var n=f();return m(\"div\",{className:n.root},m(l.a,Object(t.a)({variant:\"determinate\",value:100,className:n.top,size:24,thickness:4},e)),m(l.a,Object(t.a)({variant:\"indeterminate\",disableShrink:!0,className:n.bottom,size:24,thickness:4},e)))}),null);function y(){var e=h();return m(\"div\",{className:e.root},v,m(p,{className:e.margin}),m(g,{className:e.margin,variant:\"determinate\",color:\"secondary\",value:50}),b)}},kP0n:function(e,n,r){var t={\"./CircularDeterminate.js\":\"aOT8\",\"./CircularDeterminate.tsx\":\"4BRv\",\"./CircularIndeterminate.js\":\"Dnxx\",\"./CircularIndeterminate.tsx\":\"9ecH\",\"./CircularIntegration.js\":\"04LY\",\"./CircularIntegration.tsx\":\"MlsN\",\"./CircularStatic.js\":\"4qVn\",\"./CircularStatic.tsx\":\"LIMm\",\"./CircularUnderLoad.js\":\"3enc\",\"./CircularUnderLoad.tsx\":\"Dnhr\",\"./CustomizedProgressBars.js\":\"DHF4\",\"./CustomizedProgressBars.tsx\":\"HUsa\",\"./DelayingAppearance.js\":\"hF8N\",\"./DelayingAppearance.tsx\":\"fafy\",\"./LinearBuffer.js\":\"r3I2\",\"./LinearBuffer.tsx\":\"coIx\",\"./LinearDeterminate.js\":\"Uve1\",\"./LinearDeterminate.tsx\":\"WSJm\",\"./LinearIndeterminate.js\":\"GJ34\",\"./LinearIndeterminate.tsx\":\"lblC\",\"./LinearQuery.js\":\"goN3\",\"./LinearQuery.tsx\":\"SYbA\"};function a(e){var n=s(e);return r(n)}function s(e){if(!r.o(t,e)){var n=new Error(\"Cannot find module '\"+e+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=s,e.exports=a,a.id=\"kP0n\"},kw1K:function(e,n){e.exports='---\\ntitle: React Circular Progress\\uff08\\u73af\\u5f62\\u8fdb\\u5ea6\\u6761\\uff09\\u3001Linear Progress\\uff08\\u7ebf\\u5f62\\u8fdb\\u5ea6\\u6761\\uff09\\u7ec4\\u4ef6\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Progress \\u8fdb\\u5ea6\\u6761\\n\\n<p class=\"description\">Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.</p>\\n\\n[\\u8fdb\\u5ea6\\u6307\\u793a\\u5668](https://material.io/design/components/progress-indicators.html)\\u80fd\\u591f\\u5c06\\u5f53\\u524d\\u5904\\u7406\\u8fc7\\u7a0b\\u7684\\u72b6\\u6001\\u901a\\u77e5\\u7528\\u6237\\uff0c\\u4f8b\\u5982\\u52a0\\u8f7d\\u4e00\\u4e2a\\u5e94\\u7528\\uff0c\\u63d0\\u4ea4\\u4e00\\u4e2a\\u8868\\u5355\\u6216\\u4fdd\\u5b58\\u4e00\\u4e9b\\u66f4\\u65b0\\u3002 \\u5b83\\u4eec\\u4e0e\\u5e94\\u7528\\u7a0b\\u5e8f\\u72b6\\u6001\\u8fdb\\u884c\\u901a\\u4fe1\\u5e76\\u6307\\u793a\\u53ef\\u7528\\u7684\\u64cd\\u4f5c\\uff0c\\u4f8b\\u5982\\u7528\\u6237\\u662f\\u5426\\u53ef\\u4ece\\u5f53\\u524d\\u9875\\u9762\\u79bb\\u5f00\\u3002\\n\\n**\\u5b9a\\u91cf**\\u6307\\u793a\\u5668\\u663e\\u793a\\u4e00\\u4e2a\\u64cd\\u4f5c\\u6d88\\u8017\\u591a\\u957f\\u65f6\\u95f4\\u3002\\n\\n**\\u4e0d\\u5b9a\\u91cf**\\u6307\\u793a\\u5668\\u53ef\\u89c6\\u5316\\u4e86\\u4e00\\u4e2a\\u4e0d\\u786e\\u5b9a\\u7684\\u64cd\\u4f5c\\u7b49\\u5f85\\u65f6\\u95f4\\u3002\\n\\n#### \\u4e00\\u7ec4\\u8fdb\\u5ea6\\u6761\\n\\n\\u5728\\u663e\\u793a\\u4e00\\u7cfb\\u5217\\u8fc7\\u7a0b\\u7684\\u8fdb\\u5ea6\\u65f6\\uff0c\\u4e0e\\u5176\\u663e\\u793a\\u6bcf\\u4e2a\\u5355\\u72ec\\u6d3b\\u52a8\\u7684\\u8fdb\\u5ea6\\uff0c\\u8fdb\\u5ea6\\u6761\\u6307\\u793a\\u5668\\u4f1a\\u5c55\\u793a\\u6574\\u4f53\\u7684\\u8fc7\\u7a0b\\u3002\\n\\n## \\u73af\\u72b6\\u8fdb\\u5ea6\\u6761\\n\\n[Circular progress\\uff08\\u73af\\u72b6\\u8fdb\\u5ea6\\u6761\\uff09](https://material.io/design/components/progress-indicators.html#circular-progress-indicators)\\u540c\\u65f6\\u652f\\u6301\\u4e86\\u786e\\u5b9a\\u7684\\u548c\\u4e0d\\u786e\\u5b9a\\u7684\\u8fc7\\u7a0b\\u3002\\n\\n- **\\u5b9a\\u91cf**\\u73af\\u5f62\\u6307\\u793a\\u5668\\u586b\\u5145\\u4e86\\u4e0d\\u53ef\\u89c1\\u533a\\u57df\\uff0c\\u6307\\u793a\\u5668\\u4ece0\\u5230360\\u5ea6\\u63a8\\u8fdb\\uff0c\\u5e76\\u7528\\u989c\\u8272\\u6765\\u8fdb\\u884c\\u73af\\u5f62\\u8ffd\\u8e2a\\u3002\\n- **\\u4e0d\\u5b9a\\u91cf**\\u73af\\u5f62\\u6307\\u793a\\u5668\\u5728\\u6cbf\\u7740\\u9690\\u5f62\\u7684\\u8f68\\u9053\\u79fb\\u52a8\\u65f6\\uff0c\\u968f\\u4e4b\\u53d8\\u5927\\u53d8\\u5c0f\\u3002\\n\\n### \\u4e0d\\u5b9a\\u91cf\\u7684\\u73af\\u5f62\\u8fdb\\u5ea6\\u6761\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### \\u4ea4\\u4e92\\u96c6\\u6210\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### \\u5b9a\\u91cf\\u7684\\u73af\\u5f62\\u8fdb\\u5ea6\\u6761\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### \\u9759\\u6001\\u7684\\u73af\\u5f62\\u8fdb\\u5ea6\\u6761\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## \\u7ebf\\u6027\\u8fdb\\u5ea6\\u6761\\n\\n[\\u7ebf\\u6027\\u8fdb\\u5ea6\\u6761](https://material.io/design/components/progress-indicators.html#linear-progress-indicators)\\u6307\\u793a\\u5668.\\n\\n### \\u4e0d\\u5b9a\\u91cf\\u7684\\u7ebf\\u6027\\u8fdb\\u5ea6\\u6761\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### \\u5b9a\\u91cf\\u7684\\u7ebf\\u6027\\u8fdb\\u5ea6\\u6761\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### \\u7ebf\\u6027\\u7f13\\u51b2\\u6761\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### \\u7ebf\\u6027\\u67e5\\u8be2\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## \\u975e\\u6807\\u51c6\\u533a\\u95f4\\n\\n\\u8fdb\\u5ea6\\u6761\\u7ec4\\u4ef6\\u91c7\\u7528\\u4e00\\u4e2a\\u57280\\u2014100\\u533a\\u95f4\\u5185\\u7684\\u503c\\u3002 \\u4f5c\\u4e3a\\u9ed8\\u8ba4\\u7684\\u6700\\u5c0f/\\u6700\\u5927\\u503c\\uff0c\\u5c4f\\u5e55\\u9605\\u8bfb\\u7528\\u6237\\u80fd\\u591f\\u66f4\\u4fbf\\u5229\\u5730\\u9605\\u8bfb\\u3002 \\u4f46\\u662f\\u6709\\u65f6\\uff0c\\u60a8\\u53ef\\u80fd\\u4f1a\\u4f7f\\u7528\\u4e00\\u4e9b\\u503c\\u8d85\\u51fa\\u8fd9\\u4e2a\\u8303\\u56f4\\u7684\\u6570\\u636e\\u6e90\\u3002 \\u901a\\u8fc7\\u8fd9\\u4e2a\\u4f8b\\u5b50\\uff0c\\u60a8\\u53ef\\u4ee5\\u8f7b\\u677e\\u5730\\u5c06\\u4e00\\u4e2a\\u4efb\\u610f\\u533a\\u95f4\\u7684\\u503c\\u8f6c\\u6362\\u4e3a0\\u2014100\\u533a\\u95f4\\u7684\\u503c\\uff1a\\n\\n```jsx\\n// MIN = \\u6700\\u5c0f\\u503c\\n// MAX = \\u6700\\u5927\\u503c\\n// \\u6b63\\u5e38\\u5316\\u503c\\u7684\\u51fd\\u6570\\uff08MIN / MAX \\u53ef\\u76f8\\u4e92\\u534f\\u8c03\\uff09\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// \\u793a\\u4f8b\\u7ec4\\u4ef6\\u5c55\\u793a\\u4e86\\u5728 render \\u51fd\\u6570\\u4e2d\\uff0c\\u5229\\u7528`normalise`\\u8fd9\\u4e2a\\u51fd\\u6570\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## \\u81ea\\u5b9a\\u4e49\\u8fdb\\u5ea6\\u6761\\n\\n\\u4ee5\\u4e0b\\u662f\\u81ea\\u5b9a\\u4e49\\u7ec4\\u4ef6\\u7684\\u4e00\\u4e9b\\u4f8b\\u5b50\\u3002 \\u60a8\\u53ef\\u4ee5\\u5728[\\u91cd\\u5199\\u6587\\u6863\\u9875](/customization/components/)\\u4e2d\\u4e86\\u89e3\\u6709\\u5173\\u6b64\\u5185\\u5bb9\\u7684\\u66f4\\u591a\\u4fe1\\u606f\\u3002\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## \\u5ef6\\u65f6\\u7684\\u51fa\\u73b0\\n\\n\\u5173\\u4e8e\\u7684\\u54cd\\u5e94\\u65f6\\u95f4\\uff0c\\u60a8\\u9700\\u8981\\u77e5\\u9053\\u8fd9[3\\u4e2a\\u91cd\\u8981\\u7684\\u9650\\u5236](https://www.nngroup.com/articles/response-times-3-important-limits/)\\u3002 `ButtonBase`\\u7ec4\\u4ef6\\u7684\\u6ce2\\u7eb9\\u6548\\u679c\\uff0c\\u80fd\\u591f\\u4fdd\\u8bc1\\u7528\\u6237\\u4f53\\u9a8c\\u5230\\u5b9e\\u65f6\\u53cd\\u9988\\u7684\\u7cfb\\u7edf\\u3002 \\u901a\\u5e38\\u60c5\\u51b5\\u4e0b\\uff0c\\u5728\\u5927\\u4e8e0.1\\u79d2\\u4e14\\u5c0f\\u4e8e1.0\\u79d2\\u95f4\\u7684\\u5ef6\\u65f6\\u4e0d\\u9700\\u8981\\u7ed9\\u4e0e\\u7279\\u6b8a\\u7684\\u53cd\\u9988\\u3002 \\u4f46\\u662f\\u57281.0\\u79d2\\u540e\\uff0c\\u60a8\\u53ef\\u4ee5\\u663e\\u793a\\u4e00\\u4e2a\\u52a0\\u8f7d\\u5668\\u6765\\u4fdd\\u8bc1\\u7528\\u6237\\u7684\\u601d\\u8003\\u6d41\\u7a0b\\u4e0d\\u88ab\\u6253\\u65ad\\u3002\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## \\u5c40\\u9650\\u6027\\n\\n\\u5728\\u52a0\\u8f7d\\u7684\\u7279\\u522b\\u6162\\u65f6\\uff0c\\u60a8\\u53ef\\u80fd\\u4e22\\u5931stroke dash\\u7684\\u52a8\\u753b\\u6216\\u770b\\u5230\\u73af\\u5f62\\u8fdb\\u5ea6\\u4f1a\\u6709\\u4e00\\u4e9b\\u534a\\u5f84\\u968f\\u673a\\u7684\\u60c5\\u51b5\\u3002 \\u4e3a\\u4e86\\u4e0d\\u963b\\u788d\\u4e3b\\u6e32\\u67d3\\u8fdb\\u7a0b\\uff0c\\u60a8\\u5e94\\u8be5\\u5728web worker\\u4e2d\\u6216\\u6279\\u5904\\u7406\\u4e2d\\u8fd0\\u884c\\u5bc6\\u96c6\\u64cd\\u4f5c\\u7684\\u5904\\u7406\\u5668\\u3002\\n\\n![\\u9ad8\\u8d1f\\u8f7d](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue. See [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'},lJvQ:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return l}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"IrXQ\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}}}));function l(){var e=c(),n=a.a.useState(0),r=n[0],t=n[1];return a.a.useEffect((function(){var e=setInterval((function(){t((function(e){return e>=100?0:e+1}))}),20);return function(){clearInterval(e)}}),[]),i(\"div\",{className:e.root},i(o.a,{variant:\"determinate\",value:r}),i(o.a,{variant:\"determinate\",value:r,color:\"secondary\"}))}},lblC:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles((theme: Theme) =>\\n  createStyles({\\n    root: {\\n      width: '100%',\\n      '& > * + *': {\\n        marginTop: theme.spacing(2),\\n      },\\n    },\\n  }),\\n);\\n\\nexport default function LinearIndeterminate() {\\n  const classes = useStyles();\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress />\\n      <LinearProgress color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},oskI:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return m}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"EseM\"),i=a.a.createElement,c=Object(s.a)((function(e){return{root:{width:\"100%\",\"& > * + *\":{marginTop:e.spacing(2)}}}})),l=i(o.a,null),u=i(o.a,{color:\"secondary\"});function m(){var e=c();return i(\"div\",{className:e.root},l,u)}},qpSO:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return d}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"IrXQ\"),c=a.a.createElement,l=Object(s.a)((function(e){return Object(o.a)({root:{display:\"flex\",\"& > * + *\":{marginLeft:e.spacing(2)}}})})),u=c(i.a,null),m=c(i.a,{color:\"secondary\"});function d(){var e=l();return c(\"div\",{className:e.root},u,m)}},r3I2:function(e,n){e.exports=\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport LinearProgress from '@material-ui/core/LinearProgress';\\n\\nconst useStyles = makeStyles(theme => ({\\n  root: {\\n    width: '100%',\\n    '& > * + *': {\\n      marginTop: theme.spacing(2),\\n    },\\n  },\\n}));\\n\\nexport default function LinearBuffer() {\\n  const classes = useStyles();\\n  const [completed, setCompleted] = React.useState(0);\\n  const [buffer, setBuffer] = React.useState(10);\\n\\n  const progress = React.useRef(() => {});\\n  React.useEffect(() => {\\n    progress.current = () => {\\n      if (completed > 100) {\\n        setCompleted(0);\\n        setBuffer(10);\\n      } else {\\n        const diff = Math.random() * 10;\\n        const diff2 = Math.random() * 10;\\n        setCompleted(completed + diff);\\n        setBuffer(completed + diff + diff2);\\n      }\\n    };\\n  });\\n\\n  React.useEffect(() => {\\n    function tick() {\\n      progress.current();\\n    }\\n    const timer = setInterval(tick, 500);\\n\\n    return () => {\\n      clearInterval(timer);\\n    };\\n  }, []);\\n\\n  return (\\n    <div className={classes.root}>\\n      <LinearProgress variant=\\\"buffer\\\" value={completed} valueBuffer={buffer} />\\n      <LinearProgress variant=\\\"buffer\\\" value={completed} valueBuffer={buffer} color=\\\"secondary\\\" />\\n    </div>\\n  );\\n}\\n\"},tjOX:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return h}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"WLtd\"),i=r(\"LpUc\"),c=r(\"O8uh\"),l=r(\"IrXQ\"),u=r(\"Oy88\"),m=a.a.createElement,d=Object(s.a)((function(e){return Object(o.a)({root:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},button:{margin:e.spacing(2)},placeholder:{height:40}})})),p=m(l.a,null),g=m(u.a,null,\"Success!\"),f=m(l.a,null);function h(){var e=d(),n=a.a.useState(!1),r=n[0],t=n[1],s=a.a.useState(\"idle\"),o=s[0],l=s[1],u=a.a.useRef();a.a.useEffect((function(){return function(){clearTimeout(u.current)}}),[]);return m(\"div\",{className:e.root},m(\"div\",{className:e.placeholder},m(i.a,{in:r,style:{transitionDelay:r?\"800ms\":\"0ms\"},unmountOnExit:!0},p)),m(c.a,{onClick:function(){t((function(e){return!e}))},className:e.button},r?\"Stop loading\":\"Loading\"),m(\"div\",{className:e.placeholder},\"success\"===o?g:m(i.a,{in:\"progress\"===o,style:{transitionDelay:\"progress\"===o?\"800ms\":\"0ms\"},unmountOnExit:!0},f)),m(c.a,{onClick:function(){clearTimeout(u.current),\"idle\"===o?(l(\"progress\"),u.current=setTimeout((function(){l(\"success\")}),2e3)):l(\"idle\")},className:e.button},\"idle\"!==o?\"Reset\":\"Simulate a load\"))}},v3SC:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return f}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"yZEQ\"),o=r(\"LpUc\"),i=r(\"O8uh\"),c=r(\"IrXQ\"),l=r(\"Oy88\"),u=a.a.createElement,m=Object(s.a)((function(e){return{root:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},button:{margin:e.spacing(2)},placeholder:{height:40}}})),d=u(c.a,null),p=u(l.a,null,\"Success!\"),g=u(c.a,null);function f(){var e=m(),n=a.a.useState(!1),r=n[0],t=n[1],s=a.a.useState(\"idle\"),c=s[0],l=s[1],f=a.a.useRef();a.a.useEffect((function(){return function(){clearTimeout(f.current)}}),[]);return u(\"div\",{className:e.root},u(\"div\",{className:e.placeholder},u(o.a,{in:r,style:{transitionDelay:r?\"800ms\":\"0ms\"},unmountOnExit:!0},d)),u(i.a,{onClick:function(){t((function(e){return!e}))},className:e.button},r?\"Stop loading\":\"Loading\"),u(\"div\",{className:e.placeholder},\"success\"===c?p:u(o.a,{in:\"progress\"===c,style:{transitionDelay:\"progress\"===c?\"800ms\":\"0ms\"},unmountOnExit:!0},g)),u(i.a,{onClick:function(){clearTimeout(f.current),\"idle\"===c?(l(\"progress\"),f.current=setTimeout((function(){l(\"success\")}),2e3)):l(\"idle\")},className:e.button},\"idle\"!==c?\"Reset\":\"Simulate a load\"))}},vT9k:function(e,n,r){\"use strict\";r.r(n),r.d(n,\"default\",(function(){return u}));var t=r(\"mXGw\"),a=r.n(t),s=r(\"e+1t\"),o=a.a.createElement,i=r(\"BPUP\"),c=r(\"kP0n\"),l=o(s.a,{req:i,reqSource:c,reqPrefix:\"pages/components/progress\"});function u(){return l}},x8B2:function(e,n){e.exports='---\\ntitle: Componente React Progreso circular, Progreso lineal\\ncomponents: CircularProgress, LinearProgress\\n---\\n\\n# Progreso\\n\\n<p class=\"description\">Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript.</p>\\n\\nLos [indicadores de progreso](https://material.io/design/components/progress-indicators.html) informan a los usuarios acerca del estado de procesos activos, tales como cargar una aplicaci\\xf3n, enviar un formulario o guardar actualizaciones. Comunican el estado de una aplicaci\\xf3n e indican acciones disponibles, como si los usuarios pueden navegar fuera de la pantalla actual.\\n\\nLos indicadores **determinados** muestran cu\\xe1nto durar\\xe1 una operaci\\xf3n.\\n\\nLos indicadores **indeterminados** visualizan un tiempo de espera no determinado.\\n\\n#### Progresos como grupo\\n\\nAl mostrar progreso para una secuencia de procesos, se indica el progreso general en lugar del progreso de cada actividad.\\n\\n## Circular\\n\\nEl [progreso circular](https://material.io/design/components/progress-indicators.html#circular-progress-indicators) soporta procesos tanto determinados como indeterminados.\\n\\n- Los indicadores circulares **determinados** llenan la trayectoria invisible circular con color, a medida que el indicador se mueve desde los 0 a los 360 grados.\\n- Los indicadores circulares **indeterminados** aumentan y disminuyen de tama\\xf1o movi\\xe9ndoselo a lo largo de su trayectoria invisible.\\n\\n### Circular indeterminado\\n\\n{{\"demo\": \"pages/components/progress/CircularIndeterminate.js\"}}\\n\\n### Integraci\\xf3n interactiva\\n\\n{{\"demo\": \"pages/components/progress/CircularIntegration.js\"}}\\n\\n### Circular determinado\\n\\n{{\"demo\": \"pages/components/progress/CircularDeterminate.js\"}}\\n\\n### Circular est\\xe1tico\\n\\n{{\"demo\": \"pages/components/progress/CircularStatic.js\"}}\\n\\n## Lineal\\n\\nIndicadores de [progreso lineal](https://material.io/design/components/progress-indicators.html#linear-progress-indicators).\\n\\n### Lineal indeterminado\\n\\n{{\"demo\": \"pages/components/progress/LinearIndeterminate.js\"}}\\n\\n### Lineal determinado\\n\\n{{\"demo\": \"pages/components/progress/LinearDeterminate.js\"}}\\n\\n### Buffer lineal\\n\\n{{\"demo\": \"pages/components/progress/LinearBuffer.js\"}}\\n\\n### Consulta lineal\\n\\n{{\"demo\": \"pages/components/progress/LinearQuery.js\"}}\\n\\n## Rangos no est\\xe1ndar\\n\\nLos componentes de progreso aceptan un valor en el rango 0 - 100. Esto simplifica las cosas para los usuarios lectores de la pantalla, donde estos son los valores m\\xednimos / m\\xe1ximos por defecto. Sin embargo, algunas veces puedes estar trabajando con fuentes de datos donde los valores est\\xe1n fuera de este rango. Aqu\\xed mostramos como puede transformar f\\xe1cilmente un valor en cualquier rango a una escala de 0 - 100:\\n\\n```jsx\\n// MIN = valor m\\xednimo esperado\\n// MAX = valor m\\xe1ximo esperado\\n// Funci\\xf3n para normalizar los valores (MIN / MAX podr\\xedan estar integrados)\\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\\n\\n// Componente ejemplo que utiliza la funci\\xf3n `normalise` en el punto de dibujo.\\nfunction Progress(props) {\\n  return (\\n    <React.Fragment>\\n      <CircularProgress variant=\"determinate\" value={normalise(props.value)} />\\n      <LinearProgress variant=\"determinate\" value={normalise(props.value)} />\\n    </React.Fragment>\\n  )\\n}\\n```\\n\\n## Customized progress bars\\n\\nHere are some examples of customizing the component. You can learn more about this in the [overrides documentation page](/customization/components/).\\n\\n{{\"demo\": \"pages/components/progress/CustomizedProgressBars.js\", \"defaultCodeOpen\": false}}\\n\\n## Demorando la aparici\\xf3n\\n\\nHay [3 l\\xedmites importantes](https://www.nngroup.com/articles/response-times-3-important-limits/) que conocer acerca del tiempo de respuesta. El efecto domin\\xf3 del componente `ButtonBase` garantiza que el usuario sienta que el sistema est\\xe1 reaccionando instant\\xe1neamente. Normalmente, no se necesita una retroalimentaci\\xf3n especial durante retrasos entre 0.1 y 1.0 segundo. Despu\\xe9s de 1.0 segundo, puede desplegar un cargador para mantener el flujo de pensamiento del usuario sin interrupciones.\\n\\n{{\"demo\": \"pages/components/progress/DelayingAppearance.js\"}}\\n\\n## Limitaciones\\n\\nBajo cargas pesadas, puede perder la animaci\\xf3n del trazo o ver anchos de anillos aleatorios de CircularProgress. Deber\\xeda ejecutar operaciones de procesamiento intensivas en un trabajador web o por lotes para no bloquear el hilo de dibujo (render).\\n\\n![carga pesada](/static/images/progress/heavy-load.gif)\\n\\nWhen it\\'s not possible, you can leverage the `disableShrink` property to mitigate the issue. See [this issue](https://github.com/Foso/material-ui/issues/10327).\\n\\n{{\"demo\": \"pages/components/progress/CircularUnderLoad.js\"}}\\n'}},[[\"5oT3\",0,1]]]);"}