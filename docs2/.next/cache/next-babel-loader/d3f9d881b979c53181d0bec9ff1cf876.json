{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport PropTypes from 'prop-types';\nimport merge from \"./merge\";\n\nfunction omit(input, fields) {\n  const output = {};\n\n  _Object$keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = props => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return _objectSpread({}, merge(output, styleFunction(_objectSpread({\n        theme: props.theme\n      }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _objectSpread({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default css;","map":null,"metadata":{},"sourceType":"module"}