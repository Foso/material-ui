{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight\";\nimport withStyles from \"../styles/withStyles\";\nimport ButtonBase from \"../ButtonBase\";\nexport const styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = __jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = __jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  const {\n    classes,\n    className: classNameProp,\n    direction,\n    orientation,\n    visible\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  const className = clsx(classes.root, classNameProp, orientation === 'vertical' && classes.vertical);\n\n  if (!visible) {\n    return __jsx(\"div\", {\n      className: className\n    });\n  }\n\n  return __jsx(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","map":null,"metadata":{},"sourceType":"module"}