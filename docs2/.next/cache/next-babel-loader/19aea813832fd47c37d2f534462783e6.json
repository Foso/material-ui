{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport { green } from \"../../../../../packages/material-ui/src/colors\";\nimport FormGroup from \"../../../../../packages/material-ui/src/FormGroup\";\nimport FormControlLabel from \"../../../../../packages/material-ui/src/FormControlLabel\";\nimport Checkbox from \"../../../../../packages/material-ui/src/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"../../../../../packages/material-ui-icons/src/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"../../../../../packages/material-ui-icons/src/CheckBox\";\nimport Favorite from \"../../../../../packages/material-ui-icons/src/Favorite\";\nimport FavoriteBorder from \"../../../../../packages/material-ui-icons/src/FavoriteBorder\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => __jsx(Checkbox, _extends({\n  color: \"default\"\n}, props)));\n\nvar _ref = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    value: \"checkedC\"\n  }),\n  label: \"Uncontrolled\"\n});\n\nvar _ref2 = __jsx(FormControlLabel, {\n  disabled: true,\n  control: __jsx(Checkbox, {\n    value: \"checkedD\"\n  }),\n  label: \"Disabled\"\n});\n\nvar _ref3 = __jsx(FormControlLabel, {\n  disabled: true,\n  control: __jsx(Checkbox, {\n    checked: true,\n    value: \"checkedE\"\n  }),\n  label: \"Disabled\"\n});\n\nvar _ref4 = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    icon: __jsx(FavoriteBorder, null),\n    checkedIcon: __jsx(Favorite, null),\n    value: \"checkedH\"\n  }),\n  label: \"Custom icon\"\n});\n\nvar _ref5 = __jsx(FormControlLabel, {\n  control: __jsx(Checkbox, {\n    icon: __jsx(CheckBoxOutlineBlankIcon, {\n      fontSize: \"small\"\n    }),\n    checkedIcon: __jsx(CheckBoxIcon, {\n      fontSize: \"small\"\n    }),\n    value: \"checkedI\"\n  }),\n  label: \"Custom size\"\n});\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  return __jsx(FormGroup, {\n    row: true\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedA,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\"\n    }),\n    label: \"Secondary\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange('checkedB'),\n      value: \"checkedB\",\n      color: \"primary\"\n    }),\n    label: \"Primary\"\n  }), _ref, _ref2, _ref3, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: state.checkedF,\n      onChange: handleChange('checkedF'),\n      value: \"checkedF\",\n      indeterminate: true\n    }),\n    label: \"Indeterminate\"\n  }), __jsx(FormControlLabel, {\n    control: __jsx(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange('checkedG'),\n      value: \"checkedG\"\n    }),\n    label: \"Custom color\"\n  }), _ref4, _ref5);\n}","map":null,"metadata":{},"sourceType":"module"}