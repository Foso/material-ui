{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport { createStyles, makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport Input from \"../../../../../packages/material-ui/src/Input\";\nimport InputLabel from \"../../../../../packages/material-ui/src/InputLabel\";\nimport TextField from \"../../../../../packages/material-ui/src/TextField\";\nimport FormControl from \"../../../../../packages/material-ui/src/FormControl\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction TextMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: '\\u2000',\n    showMask: true\n  }));\n}\n\nfunction NumberFormatCustom(props) {\n  const {\n    inputRef,\n    onChange\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return __jsx(NumberFormat, _extends({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    isNumericString: true,\n    prefix: \"$\"\n  }));\n}\n\nvar _ref = __jsx(InputLabel, {\n  htmlFor: \"formatted-text-mask-input\"\n}, \"react-text-mask\");\n\nexport default function FormattedInputs() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(1  )    -    ',\n    numberformat: '1320'\n  });\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(FormControl, null, _ref, __jsx(Input, {\n    value: values.textmask,\n    onChange: handleChange('textmask'),\n    id: \"formatted-text-mask-input\",\n    inputComponent: TextMaskCustom\n  })), __jsx(TextField, {\n    label: \"react-number-format\",\n    value: values.numberformat,\n    onChange: handleChange('numberformat'),\n    id: \"formatted-numberformat-input\",\n    InputProps: {\n      inputComponent: NumberFormatCustom\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}