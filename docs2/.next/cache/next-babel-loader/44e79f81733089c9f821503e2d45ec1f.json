{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport { withStyles } from \"../../../../packages/material-ui/src/styles\";\nimport Portal from \"../../../../packages/material-ui/src/Portal\";\nimport ChevronRightIcon from \"../../../../packages/material-ui-icons/src/ChevronRight\";\nimport ChevronLeftIcon from \"../../../../packages/material-ui-icons/src/ChevronLeft\";\nimport Button from \"../../../../packages/material-ui/src/Button\";\nimport Divider from \"../../../../packages/material-ui/src/Divider\";\nimport Head from \"./Head\";\nimport useMarkdownDocs from \"./useMarkdownDocs\";\nimport AppFrame from \"./AppFrame\";\nimport AppTableOfContents from \"./AppTableOfContents\";\nimport Ad from \"./Ad\";\nimport EditPage from \"./EditPage\";\nimport AppContainer from \"./AppContainer\";\nimport PageContext from \"./PageContext\";\nimport { getHeaders, getTitle, getDescription } from \"../utils/parseMarkdown\";\nimport { pageToTitleI18n } from \"../utils/helpers\";\nimport Link from \"./Link\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  container: {\n    position: 'relative'\n  },\n  actions: {\n    position: 'absolute',\n    right: 16,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  ad: {\n    '& .description': {\n      marginBottom: 196\n    },\n    '& .description.ad': {\n      marginBottom: 40\n    }\n  },\n  toc: {\n    [theme.breakpoints.up('sm')]: {\n      width: 'calc(100% - 175px)'\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 'calc(100% - 175px - 240px)'\n    }\n  },\n  footer: {\n    marginTop: theme.spacing(12)\n  },\n  pagination: {\n    margin: theme.spacing(3, 0, 4),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  pageLinkButton: {\n    textTransform: 'none',\n    fontWeight: theme.typography.fontWeightRegular\n  }\n});\n\nfunction flattenPages(pages, current = []) {\n  return pages.reduce((items, item) => {\n    if (item.children && item.children.length > 1) {\n      items = flattenPages(item.children, items);\n    } else {\n      items.push(item.children && item.children.length === 1 ? item.children[0] : item);\n    }\n\n    return items;\n  }, current);\n} // To replace with .findIndex() once we stop IE 11 support.\n\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar _ref = __jsx(Ad, null);\n\nvar _ref2 = __jsx(Divider, null);\n\nvar _ref3 = __jsx(ChevronLeftIcon, null);\n\nvar _ref4 = __jsx(\"div\", null);\n\nvar _ref5 = __jsx(ChevronRightIcon, null);\n\nfunction MarkdownDocs(props) {\n  const {\n    classes,\n    disableAd = false,\n    disableToc = false,\n    markdown: markdownProp,\n    markdownLocation: markdownLocationProp,\n    req,\n    reqPrefix,\n    reqSource\n  } = props;\n  const t = useSelector(state => state.options.t);\n  const markdownDocs = useMarkdownDocs({\n    markdown: markdownProp,\n    markdownLocation: markdownLocationProp,\n    req,\n    reqPrefix,\n    reqSource\n  });\n  const headers = getHeaders(markdownDocs.markdown);\n  const {\n    activePage,\n    pages\n  } = React.useContext(PageContext);\n  const pageList = flattenPages(pages);\n  const currentPageNum = findIndex(pageList, page => page.pathname === activePage.pathname);\n  const currentPage = pageList[currentPageNum];\n  const prevPage = pageList[currentPageNum - 1];\n  const nextPage = pageList[currentPageNum + 1];\n  return __jsx(AppFrame, null, __jsx(Head, {\n    title: `${headers.title || getTitle(markdownDocs.markdown)} - Material-UI`,\n    description: headers.description || getDescription(markdownDocs.markdown)\n  }), disableAd ? null : __jsx(Portal, {\n    container: () => {\n      const container = document.querySelector('.description');\n      container.classList.add('ad');\n      return container;\n    }\n  }, _ref), __jsx(\"div\", {\n    className: clsx(classes.root, !disableAd && classes.ad, !disableToc && classes.toc)\n  }, __jsx(AppContainer, {\n    className: classes.container\n  }, __jsx(\"div\", {\n    className: classes.actions\n  }, __jsx(EditPage, {\n    markdownLocation: markdownDocs.location\n  })), markdownDocs.element, __jsx(\"footer\", {\n    className: classes.footer\n  }, !currentPage || currentPage.displayNav === false || nextPage.displayNav === false && !prevPage ? null : __jsx(React.Fragment, null, _ref2, __jsx(\"div\", {\n    className: classes.pagination\n  }, prevPage ? __jsx(Button, {\n    component: Link,\n    naked: true,\n    href: prevPage.pathname,\n    size: \"large\",\n    className: classes.pageLinkButton,\n    startIcon: _ref3\n  }, pageToTitleI18n(prevPage, t)) : _ref4, nextPage.displayNav === false ? null : __jsx(Button, {\n    component: Link,\n    naked: true,\n    href: nextPage.pathname,\n    size: \"large\",\n    className: classes.pageLinkButton,\n    endIcon: _ref5\n  }, pageToTitleI18n(nextPage, t))))))), disableToc ? null : __jsx(AppTableOfContents, {\n    contents: markdownDocs.contents\n  }));\n}\n\nexport default withStyles(styles)(MarkdownDocs);","map":null,"metadata":{},"sourceType":"module"}