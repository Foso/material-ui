{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport FormatAlignLeftIcon from \"../../../../../packages/material-ui-icons/src/FormatAlignLeft\";\nimport FormatAlignCenterIcon from \"../../../../../packages/material-ui-icons/src/FormatAlignCenter\";\nimport FormatAlignRightIcon from \"../../../../../packages/material-ui-icons/src/FormatAlignRight\";\nimport FormatAlignJustifyIcon from \"../../../../../packages/material-ui-icons/src/FormatAlignJustify\";\nimport FormatBoldIcon from \"../../../../../packages/material-ui-icons/src/FormatBold\";\nimport FormatItalicIcon from \"../../../../../packages/material-ui-icons/src/FormatItalic\";\nimport FormatUnderlinedIcon from \"../../../../../packages/material-ui-icons/src/FormatUnderlined\";\nimport FormatColorFillIcon from \"../../../../../packages/material-ui-icons/src/FormatColorFill\";\nimport ArrowDropDownIcon from \"../../../../../packages/material-ui-icons/src/ArrowDropDown\";\nimport Typography from \"../../../../../packages/material-ui/src/Typography\";\nimport Grid from \"../../../../../packages/material-ui/src/Grid\";\nimport ToggleButton from \"../../../../../packages/material-ui-lab/src/ToggleButton\";\nimport ToggleButtonGroup from \"../../../../../packages/material-ui-lab/src/ToggleButtonGroup\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toggleContainer: {\n      margin: theme.spacing(2, 0)\n    }\n  };\n});\n\nvar _ref = __jsx(ToggleButton, {\n  value: \"left\",\n  \"aria-label\": \"left aligned\"\n}, __jsx(FormatAlignLeftIcon, null));\n\nvar _ref2 = __jsx(ToggleButton, {\n  value: \"center\",\n  \"aria-label\": \"centered\"\n}, __jsx(FormatAlignCenterIcon, null));\n\nvar _ref3 = __jsx(ToggleButton, {\n  value: \"right\",\n  \"aria-label\": \"right aligned\"\n}, __jsx(FormatAlignRightIcon, null));\n\nvar _ref4 = __jsx(ToggleButton, {\n  value: \"justify\",\n  \"aria-label\": \"justified\",\n  disabled: true\n}, __jsx(FormatAlignJustifyIcon, null));\n\nvar _ref5 = __jsx(Typography, {\n  gutterBottom: true\n}, \"Exclusive Selection\");\n\nvar _ref6 = __jsx(Typography, null, \"Text justification toggle buttons present options for left, right, center, full, and justified text with only one item available for selection at a time. Selecting one option deselects any other.\");\n\nvar _ref7 = __jsx(ToggleButton, {\n  value: \"bold\",\n  \"aria-label\": \"bold\"\n}, __jsx(FormatBoldIcon, null));\n\nvar _ref8 = __jsx(ToggleButton, {\n  value: \"italic\",\n  \"aria-label\": \"italic\"\n}, __jsx(FormatItalicIcon, null));\n\nvar _ref9 = __jsx(ToggleButton, {\n  value: \"underlined\",\n  \"aria-label\": \"underlined\"\n}, __jsx(FormatUnderlinedIcon, null));\n\nvar _ref10 = __jsx(ToggleButton, {\n  value: \"color\",\n  \"aria-label\": \"color\",\n  disabled: true\n}, __jsx(FormatColorFillIcon, null), __jsx(ArrowDropDownIcon, null));\n\nvar _ref11 = __jsx(Typography, {\n  gutterBottom: true\n}, \"Multiple Selection\");\n\nvar _ref12 = __jsx(Typography, null, \"Logically-grouped options, like Bold, Italic, and Underline, allow multiple options to be selected.\");\n\nexport default function ToggleButtons() {\n  var _React$useState = React.useState('left'),\n      alignment = _React$useState[0],\n      setAlignment = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    return ['bold'];\n  }),\n      formats = _React$useState2[0],\n      setFormats = _React$useState2[1];\n\n  var handleFormat = function handleFormat(event, newFormats) {\n    setFormats(newFormats);\n  };\n\n  var handleAlignment = function handleAlignment(event, newAlignment) {\n    setAlignment(newAlignment);\n  };\n\n  var classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 6\n  }, __jsx(\"div\", {\n    className: classes.toggleContainer\n  }, __jsx(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\"\n  }, _ref, _ref2, _ref3, _ref4)), _ref5, _ref6), __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 6\n  }, __jsx(\"div\", {\n    className: classes.toggleContainer\n  }, __jsx(ToggleButtonGroup, {\n    value: formats,\n    onChange: handleFormat,\n    \"aria-label\": \"text formatting\"\n  }, _ref7, _ref8, _ref9, _ref10)), _ref11, _ref12));\n}","map":null,"metadata":{},"sourceType":"module"}