{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport { getDisplayName } from \"../../../material-ui-utils/src\";\nexport default function mergeClasses(options = {}) {\n  const {\n    baseClasses,\n    newClasses,\n    Component\n  } = options;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  const nextClasses = _objectSpread({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([`Material-UI: the value \\`${newClasses}\\` ` + `provided to the classes prop of ${getDisplayName(Component)} is incorrect.`, 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  _Object$keys(newClasses).forEach(key => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([`Material-UI: the key \\`${key}\\` ` + `provided to the classes prop is not implemented in ${getDisplayName(Component)}.`, `You can only override one of the following: ${_Object$keys(baseClasses).join(',')}.`].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([`Material-UI: the key \\`${key}\\` ` + `provided to the classes prop is not valid for ${getDisplayName(Component)}.`, `You need to provide a non empty string instead of: ${newClasses[key]}.`].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = `${baseClasses[key]} ${newClasses[key]}`;\n    }\n  });\n\n  return nextClasses;\n}","map":null,"metadata":{},"sourceType":"module"}