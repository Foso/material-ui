{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from \"../../../material-ui-utils/src\";\nimport capitalize from \"../utils/capitalize\";\n/**\n * @ignore - internal component.\n */\n\nconst NativeSelectInput = React.forwardRef(function NativeSelectInput(props, ref) {\n  const {\n    classes,\n    className,\n    disabled,\n    IconComponent,\n    inputRef,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disabled\", \"IconComponent\", \"inputRef\", \"variant\"]);\n\n  return __jsx(React.Fragment, null, __jsx(\"select\", _extends({\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes[variant], className, disabled && classes.disabled),\n    disabled: disabled,\n    ref: inputRef || ref\n  }, other)), props.multiple ? null : __jsx(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`])\n  }));\n});\nexport default NativeSelectInput;","map":null,"metadata":{},"sourceType":"module"}