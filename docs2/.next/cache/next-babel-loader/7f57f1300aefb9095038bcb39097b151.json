{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport orderBy from 'lodash/orderBy';\nimport sortedUniqBy from 'lodash/sortedUniqBy';\nimport MarkdownDocs from \"../src/modules/components/MarkdownDocs\";\nimport fetch from 'cross-fetch';\n\nconst req = require.context(\"../src/pages/versions\", false, /\\.(md|js|tsx)$/);\n\nconst reqSource = require.context('!raw-loader!../src/pages/versions', false, /\\.(js|tsx)$/);\n\nconst reqPrefix = 'pages/versions';\n\nvar _ref = __jsx(MarkdownDocs, {\n  req: req,\n  reqSource: reqSource,\n  reqPrefix: reqPrefix\n});\n\nexport default function Page() {\n  return _ref;\n}\n\nasync function getBranches() {\n  const githubAuthorizationToken = process.env.GITHUB_AUTH || '';\n  const result = await fetch('https://api.github.com/repos/Foso/material-ui-docs/branches', {\n    headers: {\n      Authorization: `Basic ${Buffer.from(githubAuthorizationToken).toString('base64')}`\n    }\n  });\n  const branches = await result.json();\n  return branches;\n}\n\nPage.getInitialProps = async () => {\n  const FILTERED_BRANCHES = ['latest', 'staging', 'l10n', 'next'];\n  const branches = await getBranches();\n  let versions = branches.map(n => n.name);\n  versions = versions.filter(value => FILTERED_BRANCHES.indexOf(value) === -1);\n  versions = versions.map(version => ({\n    version,\n    // Replace dot with dashes for Netlify branch subdomains\n    url: `https://${version.replace(/\\./g, '-')}.material-ui.com`\n  })); // Current version.\n\n  versions.push({\n    version: `v${process.env.LIB_VERSION}`,\n    url: 'https://material-ui.com'\n  }); // Legacy documentation.\n\n  versions.push({\n    version: 'v0',\n    url: 'https://v0.material-ui.com'\n  });\n  versions = orderBy(versions, 'version', 'desc');\n  versions = sortedUniqBy(versions, 'version');\n  return {\n    versions\n  };\n};","map":null,"metadata":{},"sourceType":"module"}