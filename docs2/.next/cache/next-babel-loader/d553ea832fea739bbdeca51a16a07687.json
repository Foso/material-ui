{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from \"../../../material-ui/src/styles\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundColor: theme.palette.action.hover,\n    height: '1.2em'\n  },\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 60%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: theme.shape.borderRadius,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"rect\"`. */\n  rect: {},\n\n  /* Styles applied to the root element if `variant=\"circle\"`. */\n  circle: {\n    borderRadius: '50%'\n  },\n\n  /* Styles applied to the root element if `animation=\"pulse\"`. */\n  pulse: {\n    animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n  },\n  '@keyframes pulse': {\n    '0%': {\n      opacity: 1\n    },\n    '50%': {\n      opacity: 0.4\n    },\n    '100%': {\n      opacity: 1\n    }\n  },\n\n  /* Styles applied to the root element if `animation=\"wave\"`. */\n  wave: {\n    position: 'relative',\n    overflow: 'hidden',\n    '&::after': {\n      animation: '$wave 1.6s linear 0.5s infinite',\n      background: 'linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.7), transparent)',\n      content: '\"\"',\n      position: 'absolute',\n      transform: 'translateX(-100%)',\n      // Avoid flash during server-side hydration\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      zIndex: 1\n    }\n  },\n  '@keyframes wave': {\n    '0%': {\n      transform: 'translateX(-100%)'\n    },\n    '60%': {\n      // +0.5s of delay between each loop\n      transform: 'translateX(100%)'\n    },\n    '100%': {\n      transform: 'translateX(100%)'\n    }\n  }\n});\nconst Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  const {\n    animation = 'pulse',\n    classes,\n    className,\n    component: Component = 'span',\n    height,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  return __jsx(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, animation !== false && classes[animation])\n  }, other, {\n    style: _objectSpread({\n      width,\n      height\n    }, other.style)\n  }));\n});\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","map":null,"metadata":{},"sourceType":"module"}