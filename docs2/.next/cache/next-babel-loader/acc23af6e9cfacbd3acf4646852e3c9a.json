{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(24),\n    transition: theme.transitions.create('fill', {\n      duration: theme.transitions.duration.shorter\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the root element if `color=\"action\"`. */\n  colorAction: {\n    color: theme.palette.action.active\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    color: theme.palette.error.main\n  },\n\n  /* Styles applied to the root element if `color=\"disabled\"`. */\n  colorDisabled: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n  fontSizeInherit: {\n    fontSize: 'inherit'\n  },\n\n  /* Styles applied to the root element if `fontSize=\"small\"`. */\n  fontSizeSmall: {\n    fontSize: theme.typography.pxToRem(20)\n  },\n\n  /* Styles applied to the root element if `fontSize=\"large\"`. */\n  fontSizeLarge: {\n    fontSize: theme.typography.pxToRem(35)\n  }\n});\nconst SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'inherit',\n    component: Component = 'svg',\n    fontSize = 'default',\n    htmlColor,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return __jsx(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], fontSize !== 'default' && classes[`fontSize${capitalize(fontSize)}`]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : 'true',\n    role: titleAccess ? 'img' : 'presentation',\n    ref: ref\n  }, other), children, titleAccess ? __jsx(\"title\", null, titleAccess) : null);\n});\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","map":null,"metadata":{},"sourceType":"module"}