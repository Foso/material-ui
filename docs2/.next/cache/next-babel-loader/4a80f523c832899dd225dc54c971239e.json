{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport FormGroup from \"../FormGroup\";\nimport useForkRef from \"../utils/useForkRef\";\nimport useControlled from \"../utils/useControlled\";\nimport RadioGroupContext from \"./RadioGroupContext\";\nconst RadioGroup = React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    actions,\n    children,\n    name: nameProp,\n    value: valueProp,\n    onChange\n  } = props,\n        other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  const rootRef = React.useRef(null);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  const [defaultName, setDefaultName] = React.useState();\n  const name = nameProp || defaultName;\n  React.useEffect(() => {\n    // Fallback to this default name when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultName(`mui-radiogroup-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return __jsx(RadioGroupContext.Provider, {\n    value: {\n      name,\n      onChange: handleChange,\n      value\n    }\n  }, __jsx(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nexport default RadioGroup;","map":null,"metadata":{},"sourceType":"module"}