{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from \"../../../../packages/material-ui/src/styles\";\nimport Fade from \"../../../../packages/material-ui/src/Fade\";\nimport ToggleButton from \"../../../../packages/material-ui-lab/src/ToggleButton\";\nimport ToggleButtonGroup from \"../../../../packages/material-ui-lab/src/ToggleButtonGroup\";\nimport { JavaScript as JavaScriptIcon, TypeScript as TypeScriptIcon } from \"../../../../packages/material-ui-docs/src\";\nimport { useSelector } from 'react-redux';\nimport { CODE_VARIANTS } from \"../constants\";\nconst styles = {\n  toggleButtonGroup: {\n    margin: '8px 0'\n  },\n  toggleButton: {\n    height: 32\n  }\n};\n\nvar _ref = __jsx(JavaScriptIcon, null);\n\nvar _ref2 = __jsx(TypeScriptIcon, null);\n\nfunction DemoLanguages(props) {\n  const {\n    classes,\n    codeOpen,\n    codeVariant,\n    demo,\n    gaEventLabel,\n    onLanguageClick\n  } = props;\n  const hasTSVariant = demo.rawTS;\n  const t = useSelector(state => state.options.t);\n\n  function renderedCodeVariant() {\n    if (codeVariant === CODE_VARIANTS.TS && hasTSVariant) {\n      return CODE_VARIANTS.TS;\n    }\n\n    return CODE_VARIANTS.JS;\n  }\n\n  return __jsx(Fade, {\n    in: codeOpen\n  }, __jsx(ToggleButtonGroup, {\n    className: classes.toggleButtonGroup,\n    exclusive: true,\n    value: renderedCodeVariant(),\n    onChange: onLanguageClick\n  }, __jsx(ToggleButton, {\n    className: classes.toggleButton,\n    value: CODE_VARIANTS.JS,\n    \"aria-label\": t('showJSSource'),\n    \"data-ga-event-category\": \"demo\",\n    \"data-ga-event-action\": \"source-js\",\n    \"data-ga-event-label\": gaEventLabel\n  }, _ref), __jsx(ToggleButton, {\n    className: classes.toggleButton,\n    value: CODE_VARIANTS.TS,\n    disabled: !hasTSVariant,\n    \"aria-label\": t('showTSSource'),\n    \"data-ga-event-category\": \"demo\",\n    \"data-ga-event-action\": \"source-ts\",\n    \"data-ga-event-label\": gaEventLabel\n  }, _ref2)));\n}\n\nexport default withStyles(styles)(DemoLanguages);","map":null,"metadata":{},"sourceType":"module"}