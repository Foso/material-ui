{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { create } from 'jss';\nimport { withStyles, useTheme, jssPreset, StylesProvider } from \"../../../../packages/material-ui/src/styles\";\nimport NoSsr from \"../../../../packages/material-ui/src/NoSsr\";\nimport rtl from 'jss-rtl';\nimport Frame from 'react-frame-component';\nimport DemoErrorBoundary from \"./DemoErrorBoundary\";\n\nvar styles = function styles(theme) {\n  return {\n    frame: {\n      backgroundColor: theme.palette.background.default,\n      flexGrow: 1,\n      height: 400,\n      border: 'none',\n      boxShadow: theme.shadows[1]\n    }\n  };\n};\n\nvar _ref = __jsx(\"div\", {\n  id: \"demo-frame-jss\"\n});\n\nfunction DemoFrame(props) {\n  var children = props.children,\n      classes = props.classes,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState({\n    ready: false\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var instanceRef = React.useRef();\n  var handleRef = React.useCallback(function (ref) {\n    instanceRef.current = {\n      contentDocument: ref ? ref.node.contentDocument : null,\n      contentWindow: ref ? ref.node.contentWindow : null\n    };\n  }, []);\n\n  var onContentDidMount = function onContentDidMount() {\n    setState({\n      ready: true,\n      jss: create({\n        plugins: [].concat(_toConsumableArray(jssPreset().plugins), [rtl()]),\n        insertionPoint: instanceRef.current.contentWindow['demo-frame-jss']\n      }),\n      sheetsManager: new _Map(),\n      container: instanceRef.current.contentDocument.body,\n      window: function window() {\n        return instanceRef.current.contentWindow;\n      }\n    });\n  };\n\n  var onContentDidUpdate = function onContentDidUpdate() {\n    instanceRef.current.contentDocument.body.dir = theme.direction;\n  }; // NoSsr fixes a strange concurrency issue with iframe and quick React mount/unmount\n\n\n  return __jsx(NoSsr, null, __jsx(Frame, _extends({\n    ref: handleRef,\n    className: classes.frame,\n    contentDidMount: onContentDidMount,\n    contentDidUpdate: onContentDidUpdate\n  }, other), _ref, state.ready ? __jsx(StylesProvider, {\n    jss: state.jss,\n    sheetsManager: state.sheetsManager\n  }, React.cloneElement(children, {\n    container: state.container,\n    window: state.window\n  })) : null));\n}\n\nvar StyledFrame = withStyles(styles)(DemoFrame);\n/**\n * Isolates the demo component as best as possible. Additional props are spread\n * to an `iframe` if `iframe={true}`.\n */\n\nfunction DemoSandboxed(props) {\n  var Component = props.component,\n      iframe = props.iframe,\n      name = props.name,\n      other = _objectWithoutProperties(props, [\"component\", \"iframe\", \"name\"]);\n\n  var Sandbox = iframe ? StyledFrame : React.Fragment;\n  var sandboxProps = iframe ? _objectSpread({\n    title: \"\".concat(name, \" demo\")\n  }, other) : {};\n  return __jsx(DemoErrorBoundary, null, __jsx(Sandbox, sandboxProps, __jsx(Component, null)));\n}\n\nexport default React.memo(DemoSandboxed);","map":null,"metadata":{},"sourceType":"module"}