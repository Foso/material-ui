{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport { ACTION_TYPES, CODE_VARIANTS } from \"../constants\";\nimport memoize from \"../../../../packages/material-ui-system/src/memoize\";\nimport mapTranslations from \"../utils/mapTranslations\";\n\nconst req = require.context(\"../../../translations\", false, /translations.*\\.json$/);\n\nconst translations = mapTranslations(req, 'json');\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n}\n\nconst warnOnce = {};\nconst getT = memoize(userLanguage => (key, options = {}) => {\n  const {\n    ignoreWarning = false\n  } = options;\n  const wordings = translations[userLanguage];\n\n  if (!wordings) {\n    console.error(`Missing language: ${userLanguage}.`);\n    return 'â€¦';\n  }\n\n  const translation = getPath(wordings, key);\n\n  if (!translation) {\n    const fullKey = `${userLanguage}:${key}`; // No warnings in CI env\n\n    if (!ignoreWarning && !warnOnce[fullKey] && false) {\n      console.error(`Missing translation for ${fullKey}.`);\n      warnOnce[fullKey] = true;\n    }\n\n    return getPath(translations.en, key);\n  }\n\n  return translation;\n});\nconst mapping = {\n  [ACTION_TYPES.OPTIONS_CHANGE]: (state, action) => {\n    const newState = {\n      codeVariant: action.payload.codeVariant || state.codeVariant,\n      userLanguage: action.payload.userLanguage || state.userLanguage\n    };\n    return newState;\n  }\n};\n\nfunction optionsReducer(state = {}, action) {\n  let newState = _objectSpread({}, state);\n\n  if (!newState.codeVariant) {\n    newState.codeVariant = CODE_VARIANTS.JS;\n  }\n\n  if (!newState.userLanguage) {\n    newState.userLanguage = 'en';\n  }\n\n  if (mapping[action.type]) {\n    newState = mapping[action.type](state, action);\n  }\n\n  newState.t = getT(newState.userLanguage);\n  return newState;\n}\n\nexport default optionsReducer;","map":null,"metadata":{},"sourceType":"module"}