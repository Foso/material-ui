{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from \"../styles/withStyles\";\nimport capitalize from \"../utils/capitalize\";\nimport { isHorizontal } from \"../Drawer/Drawer\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1\n  },\n  anchorLeft: {\n    right: 'auto'\n  },\n  anchorRight: {\n    left: 'auto',\n    right: 0\n  },\n  anchorTop: {\n    bottom: 'auto',\n    right: 0\n  },\n  anchorBottom: {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes,\n    className,\n    width\n  } = props,\n        other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }\n  }, other));\n});\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","map":null,"metadata":{},"sourceType":"module"}