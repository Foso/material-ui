{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from \"../../../../../packages/material-ui/src/styles\";\nimport LinearProgress from \"../../../../../packages/material-ui/src/LinearProgress\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  };\n});\nexport default function LinearBuffer() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      completed = _React$useState[0],\n      setCompleted = _React$useState[1];\n\n  var _React$useState2 = React.useState(10),\n      buffer = _React$useState2[0],\n      setBuffer = _React$useState2[1];\n\n  var progress = React.useRef(function () {});\n  React.useEffect(function () {\n    progress.current = function () {\n      if (completed > 100) {\n        setCompleted(0);\n        setBuffer(10);\n      } else {\n        var diff = Math.random() * 10;\n        var diff2 = Math.random() * 10;\n        setCompleted(completed + diff);\n        setBuffer(completed + diff + diff2);\n      }\n    };\n  });\n  React.useEffect(function () {\n    function tick() {\n      progress.current();\n    }\n\n    var timer = setInterval(tick, 500);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(LinearProgress, {\n    variant: \"buffer\",\n    value: completed,\n    valueBuffer: buffer\n  }), __jsx(LinearProgress, {\n    variant: \"buffer\",\n    value: completed,\n    valueBuffer: buffer,\n    color: \"secondary\"\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}