(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{"+Itz":function(e,n){e.exports="# A propos du lab\n\n<p class=\"description\">Ce package contient des composants en incubation (en d\xe9veloppement) qui ne sont pas encore pr\xeats \xe0 \xeatre ajout\xe9s au package principal.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## Installation\n\nInstall the package in your project directory with:\n\n```sh\n// avec npm\nnpm install @material-ui/lab\n\n// avec yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// avec npm\nnpm install @material-ui/core\n\n// avec yarn\nyarn add @material-ui/core\n```"},"4Tqs":function(e,n){e.exports="# Acerca del laboratorio\n\n<p class=\"description\">Este paquete almacena componentes en desarrollo, que todav\xeda no est\xe1n listos para estar en core.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## Instalaci\xf3n\n\nInstall the package in your project directory with:\n\n```sh\n// con npm\nnpm install @material-ui/lab\n\n// con yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// usando npm\nnpm install @material-ui/core\n\n// usando yarn\nyarn add @material-ui/core\n```"},"7TTl":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/about-the-lab",function(){return t("cZyx")}])},Esnq:function(e,n){e.exports="# Sobre o lab\n\n<p class=\"description\">Este pacote hospeda os componentes da incubadora que ainda n\xe3o est\xe3o prontos para mover para o n\xfacleo (core).</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## Instala\xe7\xe3o\n\nInstall the package in your project directory with:\n\n```sh\n// usando npm\nnpm install @material-ui/lab\n\n// usando yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// usando npm\nnpm install @material-ui/core\n\n// usando yarn\nyarn add @material-ui/core\n```"},UnkG:function(e,n){e.exports="# \u5173\u4e8e lab\n\n<p class=\"description\">\u6b64\u4f9d\u8d56\u5305\u5305\u542b\u4e86\u4e00\u4e9b\u8fd8\u5728\u5f00\u53d1\u4e2d\u7684\u7ec4\u4ef6\uff0c\u5b83\u4eec\u8fd8\u4e0d\u80fd\u79fb\u5230 core\uff08\u6838\u5fc3\uff09\u5e93\u4e2d\u3002</p>\n\n\u6838\u5fc3\u5e93\uff08core\uff09\u548c\u5b9e\u9a8c\u5ba4\uff08lab\uff09\u4e4b\u95f4\u7684\u4e3b\u8981\u5dee\u522b\u5c31\u662f\u7ec4\u4ef6\u662f\u5982\u4f55\u7248\u672c\u5316\u7684 Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## \u5b89\u88c5\n\nInstall the package in your project directory with:\n\n```sh\n// \u7528 npm \u5b89\u88c5\nnpm install @material-ui/lab\n\n// \u7528 yarn \u5b89\u88c5\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// \u7528 npm \u5b89\u88c5\nnpm install @material-ui/core\n\n// \u7528 yarn \u5b89\u88c5\nyarn add @material-ui/core\n```"},"VY+l":function(e,n){e.exports="# About the lab\n\n<p class=\"description\">This package hosts the incubator components that are not yet ready to move to the core.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it.\n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## Installation\n\nInstall the package in your project directory with:\n\n```sh\n// with npm\nnpm install @material-ui/lab\n\n// with yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components.\nIf you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\n```\n"},XUbs:function(e,n){e.exports="# About the lab\n\n<p class=\"description\">\u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3001\u307e\u3060\u30b3\u30a2\u306b\u79fb\u52d5\u3059\u308b\u6e96\u5099\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u30a4\u30f3\u30ad\u30e5\u30d9\u30fc\u30bf\u30fc\u30fb\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30db\u30b9\u30c8\u3057\u307e\u3059\u3002</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nInstall the package in your project directory with:\n\n```sh\n// with npm\nnpm install @material-ui/lab\n\n// with yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// npm\u306e\u5834\u5408\nnpm install @material-ui/core\n\n// yarn\u306e\u5834\u5408\nyarn add @material-ui/core\n```"},bC1s:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="bC1s"},cZyx:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return h}));var o=t("mXGw"),a=t.n(o),s=t("e+1t"),r=a.a.createElement,i=t("mKfY"),l=t("bC1s"),c=r(s.a,{req:i,reqSource:l,reqPrefix:"pages/components/about-the-lab"});function h(){return c}},ljlP:function(e,n){e.exports='# crwdns89124:0crwdne89124:0\n\n<p class="description">crwdns89126:0crwdne89126:0</p>\n\ncrwdns109485:0crwdne109485:0 crwdns109487:0crwdne109487:0\n\ncrwdns109489:0crwdne109489:0 crwdns109491:0crwdne109491:0\n\ncrwdns109493:0crwdne109493:0\n\n* crwdns109495:0crwdne109495:0 crwdns109497:0crwdne109497:0 crwdns109499:0crwdne109499:0\n* crwdns109501:0crwdne109501:0 crwdns109503:0crwdne109503:0 \n    * crwdns109505:0crwdne109505:0 crwdns109507:0crwdne109507:0\n    * crwdns109509:0crwdne109509:0 crwdns109511:0crwdne109511:0\n* crwdns109513:0crwdne109513:0 crwdns109515:0crwdne109515:0\n* crwdns109517:0crwdne109517:0 crwdns109519:0crwdne109519:0\n\n## crwdns89128:0crwdne89128:0\n\ncrwdns109521:0crwdne109521:0\n\n```sh\ncrwdns89132:0crwdne89132:0\n```\n\ncrwdns109523:0crwdne109523:0 crwdns109525:0crwdne109525:0\n\n```sh\ncrwdns89138:0crwdne89138:0\n```'},mKfY:function(e,n,t){var o={"./about-the-lab-aa.md":"ljlP","./about-the-lab-de.md":"xX1G","./about-the-lab-es.md":"4Tqs","./about-the-lab-fr.md":"+Itz","./about-the-lab-ja.md":"XUbs","./about-the-lab-pt.md":"Esnq","./about-the-lab-ru.md":"r0yG","./about-the-lab-zh.md":"UnkG","./about-the-lab.md":"VY+l"};function a(e){var n=s(e);return t(n)}function s(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=s,e.exports=a,a.id="mKfY"},r0yG:function(e,n){e.exports="# \u041e \u043f\u0430\u043a\u0435\u0442\u0435 lab\n\n<p class=\"description\">\u042d\u0442\u043e\u0442 \u043f\u0430\u043a\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u043a\u0443\u0431\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0449\u0435 \u043d\u0435 \u0433\u043e\u0442\u043e\u0432\u044b \u043a \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0443 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u0430\u043a\u0435\u0442.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## \u0418\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f \u043f\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435\n\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0430\u043a\u0435\u0442 \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439:\n\n```sh\n// \u0434\u043b\u044f npm\nnpm install @material-ui/lab\n\n// \u0434\u043b\u044f yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\n```"},xX1G:function(e,n){e.exports="# \xdcber das Labor\n\n<p class=\"description\">Dieses Paket enth\xe4lt die Inkubator-Komponenten, die noch nicht bereit sind, in den Kern aufgenommen zu werden.</p>\n\nThe main difference between the lab and the core is how the components are versioned. Having a separate lab package allows us to release breaking changes when necessary while the core package follows a [slower-moving policy](https://material-ui.com/versions/#release-frequency).\n\nAs developers use and test the components and report issues, the maintainers learn more about shortcomings of the components: missing features, accessibility issues, bugs, API design, etc. The older and more used a component is, the less likely it is that new issues will be found and subsequently need to introduce breaking changes.\n\nFor a component to be ready to move to the core, the following criteria are considered:\n\n* It needs to be **used**. The Material-UI team uses Google Analytics stats among other metrics to evaluate the usage of each component. A lab component with low usage either means that it isn't fully working yet or that there is a low demand for it.\n* It needs to match the **code quality** of the core components. It doesn't have to be perfect to be a part of the core, but the component should be reliable enough that developers can depend on it. \n    * Each component needs **type definitions**. It is not currently required that a lab component is typed, but it would need to be typed to move to the core.\n    * Requires good **test coverage**. Some of the lab components don't currently have comprehensive tests.\n* Can it be used as **leverage** to incentivize users to upgrade to the latest major release? The less fragmented the community is, the better.\n* It needs to have a low probability of a **breaking change** in the short/medium future. For instance, if it needs a new feature that will likely require a breaking change, it may be preferable to delay its promotion to the core.\n\n## Installation\n\nInstall the package in your project directory with:\n\n```sh\n// mit npm\nnpm install @material-ui/lab\n\n// mit yarn\nyarn add @material-ui/lab\n```\n\nThe lab has a peer dependency on the core components. If you are not already using Material-UI in your project, you can install it with:\n\n```sh\n// mit npm\nnpm install @material-ui/core\n\n// mit yarn\nyarn add @material-ui/core\n```"}},[["7TTl",0,1]]]);